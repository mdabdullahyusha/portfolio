%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: cloud_technology_02.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 12/18/2018
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 11617 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD68FF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFD68FFAFA9FF
%AFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFFD68FFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD6AFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FD6AFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9FD6AFFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FF
%AFFD6AFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD2FFFA9FF
%AFFD3AFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD2FFFA9FFAFFF
%AFFD38FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD2BFFA9AF
%A985537EA9AFA9FD21FFA8845A8584A9FD10FFAFA9FFAFAFA9FFAFAFA9FF
%AFAFA9FFAFAFA9FFAFFD2BFFAFAFA95A2F2F2F5A7EAFA9FD1FFFA9FFAFFF
%AFFFA9AFFD0FFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFD28FF
%AFAFA9AF845A0629532F062F2F85A9AFA9FD1AFFAF5A2F2F5A59A9A85A36
%A9FD0FFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFD2BFFAFFF5A2F
%062F2F84062F2F5AA9FFA9FD17FFA9A984302F5A2F302FFFA95A5AFD0EFF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD29FF8485A9FFA9AFA85A
%0628287E2F28075A5AAFA9AFAFFD13FFA9AFA85A2F2F2F302F2F5AFF5A5A
%A8FD0EFFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFFD2AFFA95A8585FFAF
%AFA9A92F29062F8429063084AFA9FFA9FD11FF5A365A842F362F302F362F
%30A9A95AA9FD0DFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD2BFF7E85
%845A5AAFAFAFA9AF7E2F0629062F7EAFA9AFA984FD10FF7EFD0C2F85845A
%84FD0EFFAFFFA9FFAFFFA9FFAFFFA9FFAFFD2EFFAF5AA9A9855A85AFFFAF
%FFA97E2F7EA9FFAFFFA95A2FFD0FFFAF5A2F5A2F302F5A2F302F5A2F3084
%AF5AA9FD0DFFA9AFA9AFA9AFA9AFA9AFA9FD31FF84855A842F5A5A5A84FF
%AFAFA9AFA9AFA9FF5A2F2F30FD0FFFAF2F2F2F302F2F2F302F2F2F302F85
%845A5A84A8FD0BFFAFA9FFAFAFA9FFAFFD34FFA95A855A855AA95A855AAF
%FFFFA9FFFFA92F362F302FFD0FFFA9362F302F362F302F5A85852F3684AF
%A9A95A5AA8FD0CFFA9FFA9FFA9FD35FF848484855A5A5A7E5A845A85A9A9
%845AFD042F532FFD0FFFAF53FD062F85A9AF85362F2F2F5AA8A9365AFD46
%FFAF5A8585A95A855A857E5A5A855A5A2F302F2F06592FFD0FFFAFA92F30
%2F5A2F305AFFAFFF5A5A2F302F85FFA9A9AFFD45FF845A5A5A7E5A8485FD
%065A2F2F062953537E2FFD10FFA9852F2F2F302F2FA9AFA9852F302F2F2F
%AFAFAF84FD45FFAF7E855A855A8553855A855A855A5A062F2F597E5A2FFD
%08FF847EFD07FFAFAF5A302F365AAFA9AF855A2F362F307EFF5A85FD45FF
%A85A84A9FD055A855A5A845A2F29287E532F2F2FFD08FF84842F7EFD06FF
%A9FF845A2F2F59A95AFD062F7E845A5AFD46FF5A857EAF5A855A857E5353
%855A5A53842F302F5A2FFD07FFAFFFFFFF5A54A8FD07FFA9852F302F5A2F
%302F5A2F305AFFA95A5AAFFD43FF84855A5A5A7E845A5A855A845A5A2F2F
%2F302F2F5330FD06FFAFFD05FF855A2FFD05FFA95A7EAF5A2F2F302F2F2F
%302F2F5AAFA95A36FD43FFAF5AAF84855A855A855A855A85365A2F30292F
%06532FFD0DFFAFA92F7EFD04FF365A84A9A95A2F362F302F362F3059FF84
%5AA8FD42FFA95A5AA9537E5A5A5A842F5A7E5A2F2F062959537E2FFD06FF
%A9FD08FFAF5A307EFFA85AA85A2F858485FD082F84A93685FD42FFAF5A85
%5A8453A95A855A5A5A855A5A292F2F597E5A2FFD09FFAFFD07FFAF7E2FA9
%5AFF5A5AFF5A5AFF7E5A2F5A2F302FA9A95AA9FD42FF84847EFD0B5A2F2F
%287E53302F2FFD06FFAFFFA9FFAFAFFD06FFAFA92F5AA8855AFF305AFFFF
%A97E2F302F2F84855AFD43FFAF5AAF85855A855A857E855AAF5A5A537E2F
%302F5A2FFD05FFAFFFFFFFAFFFFFFFA9FD07FF845A53FFFF8584FFFFFFAF
%A95A5A7EAF5AFD44FFA85A5A852F855A5A5A8584855A5AFD062F532FFD06
%FFA9FFFFFFA9FFFFFFA9FD07FFA8842F845AFD05FFAFAFA9AFA9FD45FFAF
%5A855A8585A984855A8584855A5A2F5A2F2F285A2FFD05FFAFFD05FFAFFD
%05FFAFFD06FFAF5A5AA8FD23FFA853A87EFF537E84FF7E8459AFA87E597E
%59A82FA87E84A8A959A853A959FF7E5AA97E53A8A884FD04FF848585855A
%855A855A855A5A7E5A2F2F062F59535930FD05FFAFFD04FFA9FFA9FD05FF
%A9FD07FF845A53FD22FF067E5953A85A2F7EA8592F5359FF595A06A92F5A
%53592F84282F2F5A2F2FFF29537E2F53592F7EFD04FFAF5A85A97E5A855A
%855AA97E85365A2929297E7E5A2FFD09FFAFFFA9FD0FFFAF852F84FD20FF
%06A8A82FA8595353A82F532F7EFF7E59065353A884062F7D060653595306
%FF067E53532F8406FD05FF845A5A5A53FD055A7E855A5A2F2F2F7EFD042F
%FD04FFA9FFFFFFA9FFAFFFA9AFA9FD05FFA9AFA9FD05FFA9AF5A2F7EFD1E
%FF067E5953845A2F7E595953537EFF7E7E06AF535A53595384532F535A2F
%2FA82F537E2F53A82FFD05FFAF5A855A855AA95A855A855A855A5A5A7E2F
%5A2F5A2FFD09FFAFFFAFFFAFFD09FFA9FD07FFA97E2FFD1DFF8453A959A8
%5384A87E7EA859A9FFA9A87E59A859A87EA8A8A87DAF53A8597E8459A87E
%59FF59FD05FFA98485A95A5A5A855A855A85845A2F30FD042F532FFD04FF
%A9FFFFFFA9FFAFAFAFFFAFFD09FFA9AFAFFD05FFA98529FD48FF848584A9
%84855A857E2F5A855A5A2F30292F285A2FFD0BFFAFFFFFFFAFFD11FFA953
%7EFD46FFA9FF855A36855384FD065A2F2F062F5953592FFD04FFAFFFFFFF
%A9AFA9FFAFFFAFFD13FF535AFD1BFFA9FFA9FFFFFFAFFFAFFFA9FFAFFD05
%FFAFFFAFFD05FFA9FFA9FFFFFFA8FFA9FFAFFD07FFAFAFA9855A84855A7E
%855A855A5A062F2F7E5A5A2FFFFFFFAFFD07FFAFFFAFFD14FF7EA8FD1BFF
%A97E847E7EA8847E845A847EA97EA97EFF7E7E7EAFA8A97E845A847E847E
%A97E847E847EA97EA9FD05FFAF84A95AAF7E5A5A85847E7E5A2F292F842F
%2F2F5AFD06FFAFFFA9FFA9FFFFFFAFFD13FF2FFD1CFFA8AFA9AFA8FFA9AF
%A8AFA9AFA8AFAFFFA9AFA8AFA8FFA9A9A8FFA9A9A8AFAFAFA8A9A9AFA8A9
%A9FD07FF845A84AFA9855AAF8585365A595A2F362F84FD04FFA9FFFFFFA9
%FFAFFFAFFD0EFFAFAFFD05FFAF2FFD1CFFA97EA9A8A984FF84AF84A9A8A9
%84A984A984A9A8A984A9848484A9A8A9FD10FF5A8584A984A984A9FD045A
%FD052F8584FD05FFA9FFFFFFA9FD05FFA9FD0BFFA9AFA9FD04FFA92FFD1C
%FF84A9A8AF7EA9A8A9A8A97E857EA97EA97E84848584A984A97EA984A9A9
%FD0EFFA95AFFFFFFAFAF85A985AF85A95A5A2F5A7EAF85FD05FFAFFD0BFF
%AFFD0BFFA9FD05FF7E84FD1DFFA8FFAFFD25FFA87E84FD07FF84A984A984
%5A2F8484A984FFFFFFA9AF5A5AA8AFFD0CFFAFFD07FFA9FFA9FFFFFFA95A
%A8FD1CFFA8A984A984A97EFD23FF5AA9FD08FFA9A984AF85A984AFAFFFFF
%FFA984062F2FA984FFAFFD11FFA9FFAFFFAFFFFFFF2FFD1DFFA984A97EA9
%A8A8FD24FF7E5AA8FD07FFAFA984A984AFA9FFA9AF7E2F062F2F29292F53
%A9A9FFAFFD0DFFAFFFA9AFA9AFA9FFA92FFD4AFF855AFD0DFFAFA9FD042F
%29532F2F065A2984A9FD0FFFAFFD06FFA959FD4BFFAF5A85FD09FFAF845A
%062F28290653062F2F2F062F2F2F5AAFA9FD0BFFA9AFA9AFAFFFFFFF5984
%FD47FF84855AFFFFFFA95B5AA9A9FFFFFFAFFF7E2F065306292F5A2F5A2F
%3659532F2F295353FFAFFD0DFFA9FFFFFFAF5AA9FD1EFFA88584857E8584
%857E8584857E8584857E85848584FD12FFA95AA9FFFF5A85A8FFA85A2F5A
%7EFFA9AFA9A92F2F06292F2F0659FD042F062F282F0653A9AFA9AFA9FD0B
%FFA9FFFFAF06FD1EFFA95B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A
%5B5AFD0FFFAF8584FD05FFA9855A85AF5A5AAFAFFFA9FFAFFF845A2F2F29
%532F2F535A2F5A06FD052F5AFFA9FFAFFD0DFFA95AFD1EFF7E305A365A5A
%AFFFAF84A9A984FFAFA8FF845A365A305AA8FD0DFF7E85A9FD07FFA85A30
%85A9AFA9AFA9AFA9AFA9AFA9842F29062F2F2F285306292F29282F282F06
%84A9AFA9AFAFFD0AFF7E59FD1EFF5A5A365A5A5A84FF84A984FF5AFFA8FF
%FF85365A5A5A36FD0DFF5AA9FD0AFFAFA9A9FFAFAFA9FFAFAFA9FFAFAFA9
%AF5A292F2F2953285329292F2F062F2F53282F84FFAFFFA9FD09FF59A9FD
%1EFF85365A305A36FD085A7EFD045A305A365AFD0DFFA95AA9FD09FFA9A9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA92F0629062F282F2F06065306062F
%2F29062F5A2FA9A9FD07FFA92FFD20FFAF7E855A855A855A855A855A855A
%855A855A855A85FD10FF8485A9FD07FF5AFFAFFFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA984292F06532F2F065A062F2F2F285A2F2F285A2F7EAFFD07FF
%2FFD46FFA98584FD06FFA92F7EA9FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AF5A2906292F2F282F2F280653062F2F53062F53537EAFA9FFFFFF7E7EFD
%46FF855AFD08FFAF533084FFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFA95A
%062F28FD052F06532F292F532F292F5A2FA9A9FFA95AA8FD44FF7E5AA8FD
%09FF84A97E2F2FAFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A92F2F282F
%282F065306292F290653292F062F7EAFA8A9A8FD44FF5AAFFD0CFFA9A984
%842F5AAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF842F06FD052F532F06
%5A062F2F2F067EAFFFA8FD45FFA95AA9FD0CFFAFA984A9592F7EFFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA98406292F5A2F2F282F062F2F282FAFAF
%A806FD48FF845B84AFFD04FFAFFFFFFFAFFFFFFF84AF855A2FAFFFFFA9FF
%AFAFA9FFAFAFA9FFAFAFA9FFAFAF592F5A5A282F062F062F84FFA8532FA9
%FD49FF7E5A305A84FFAFFD05FFA9FFFFFFA8A984842F5AA8FFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AF8453062F532F067EA9FF532F5AA984FD4AFFA9
%5A84FD0EFFAF84AF5A307EFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFA9
%292FA9FFFF84287E84AFA9FD11FFAFFFFFFFAF7E855A85A8FD31FFAFFD0D
%FFA9FFFFFF84A9845A2FA9AFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A97E
%FF842F53A984A9A8FD11FFA9AFFFFFAF5A5A365A5A5A368584AFFD3CFFAF
%FFFFFFA9AF85852F5AA9FFA9FFAFAFA9FFAFAFA9FFAFAFA9FFFFFF2F5384
%A984FD13FFA9FFAFFFAF305A365A305A365A305A365A5AA9AFFD25FFA8FD
%0AFFA984AFAFFD05FFAFFFAFFFA9AF84A95A2F53AFA9AFA9AFA9AFA9AFA9
%AFA9FFA85A287E84A984FD11FFA9AFA9AFA9AFFF5A5B5A5A5A5B5A5A5A5B
%5A5A5A5B5A5AA9FD25FFA8FD07FF84A9A9FF7EA9A9FD07FFAFFFFFFFA9AF
%857E2F85FFFFA9FFAFFFA9FFAFFF842F5AA984AFAFFD11FFAFFFAFFFA9FF
%AF5A5A305A365A305A365A305A365A305A367EFD24FFA87EA9FD07FF5A5A
%84A984AF84FD07FFA9FFFFFFA9A984A92F307EFFA9AFA9AFA9A9285984A9
%84AFFD12FFA9AFA9AFA9AFA9AF5A5A5A365A5A5A365A5A5A365A5A5A365A
%5AFD25FF845A84FD07FFA95A7EFFAFAFA8AFFD0CFF85A9845A2FA9A9FFA8
%532F8585A9A9FD12FFAFA9FFAFAFA9FFAFAFA9305A365A305A365A305A36
%5A305A365A305A84FD25FF845A2FA9A9FD06FF842FA9FFAFA8AFA8FD07FF
%A9FFFFFFA8A984842F2F062F5AA984AFA9FD11FFA9AFA9AFA9AFA9AFA9AF
%A9AF5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A85FD26FFA985537EA9FD
%07FF7E5AA8FFFFFFA9FD0CFFAF85A984AF85A984FD13FFA9FFAFFFA9FFAF
%FFA9FFAFFFA9305A365A305A365A305A365A305A365A305A36FD27FFA8A9
%5A5A7EFFAFFD05FFA95A5AFD0BFF7EFD05FF84A984A9A9FD13FFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AF5A365A5A5A365A5A5A365A5A5A365A5A5A365AA9
%FD28FFAF847E2FA9AFFD11FFAF7EFD1CFFA9FFAFAFA9FFAFAFA9FFAFAFA9
%FFAF365A305A365A305A365A305A365A305A365A3085FD2AFF84852F5AA8
%FD0FFF7E5A84FD1BFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF5A5A5B5A5A
%5A5B5A5A5A5B5A5A5A5B5A5A5A5B5AFD2BFFAFAF7E5A5AFD0CFFAF2F5A84
%FD1DFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF365A305A365A305A365A305A
%365A305A365A305AA9FD2CFFAF84847EA9A8FD07FFA85A2F8484FD1DFFAF
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF5A5A5A365A5A5A365A5A5A365A5A5A
%365A5A5A36AFFD2EFFA8A95A5A84FD05FF7E5A5AAFA9FD1FFFAFAFA9FFAF
%AFA9FFAFAFA9FFAFAFA9305A365A305A365A305A365A305A365A305A365A
%7EFD2FFFA8A97E5A2F5A535A2F5A84A9A8FD21FFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AF5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5AAFFD32FF8485
%84845AA9A9FD25FFA9FFAFFFA9FFAFFFA9FFAFFFA9305A365A305A365A30
%5A365A305A365A305A365AA8FD33FFA8A984A9A8FD26FFAFA9AFA9AFA9AF
%A9AFA9AFA9AF5A365A5A5A365A5A5A365A5A5A365A5A5A365AA9FD60FFAF
%A9FFAFAFA9FFAFAFA9FFAF365A305A365A305A365A305A365A305A365A84
%FD61FFA9AFA9AFA9AFA9AFA9AFA9AF5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B
%5A5AA8FD63FFA9FFAFFFA9FFAFFFA9FFAF848584A9848584A9848584A984
%8584A9A8FD65FFA9FFAFFFA9FFAFFFA9FDFCFFFD04FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-18T13:00:34+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-18T13:00:34+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-18T13:00:34+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9E5nuA7FURYxepcL4L8R&#xA;+jIZZUGeKNlOMw3MdirsVdirsVdirsVdirmYKCWIAHUnpiqGt9StJ5TEhcPUgCSOSPlT+Uuqhvoy&#xA;csZAtgMgJpE5Bm7FXYqgdV/u4/mf1Zfg5loz8ktzIcd2Kptp0XC35Hq5r9HbMXNKy5WGNBFZU2ux&#xA;V2KuxV2KuxV2KuxVSuLu1tlVriZIVduKGRggLHsKkb5KMSeQQZAc1RWVlDKQVIqCNwQcilvFXYqx&#xA;/M9wGwCxoBUnoBiqa6fbtFGWcUd+3gMxcs7LlYoUEVlTa7FXYq7FXYq7FXYq1I/BGc/sgn7sIFlB&#xA;NB82+c/za1nzJaTWCxC0s3lqnpM4dohWiSCpUmtDUZ0GDRxxm+ZdNm1Mp7K/kS819UvNOmS4NzYm&#xA;31CwidXMsb+qivwUjlxeJySOlBXDmjGwehsH8e9jjMq8xuH0Hp2pWGpWq3VjMs8DEgOviOoIO4Ps&#xA;c0E4GJoii7qExIWETkGTsVQOq/3cfzP6svwcy0Z+SW5kOOqwW8kzAKDx7t2GRlMBlGBKdqAoCjYA&#xA;UGYRc0OxV2KuxV2KuxV2KuxVZNIIoXlIJCKWIHU0FdsIFmkE0LfOuvfnHr97rcF/Yf6NbxxiN7Jw&#xA;ro/xMWqacviUgbEEds6DFooxjRdNk1MpSt6P+X3myGJ2sL+6ZbS+Ed1pEt0xLET1LxGQ7Eq+3u1c&#xA;wdZgscURuNjTk6XNwnhJ2PJ6Nmsdi7FUINMt+VatT+Wu2W+MWrwQiY4o4xRFC/LKzInm2CIHJdgS&#xA;7FXYq7FXYq7FXYq7FUluNfns5XOqWLQ6YxpFqELGeMKTQGdQqvFXY1oyjuwy8Yr+k+ru/V3tJyVz&#xA;Gzy3zn+Wmn6deWXmTy5fIoubqN7a1Z/3ckrVlUQzLUKG4GnLb3GbPT6szBhIcg4GfTiNSieZYX+Y&#xA;XmK41HzDDdiyl0u7to0ALEiUkfEGDDYgNXiw6jMzBjAjV242WVyvk9c8g+b7W5mjYLE1vqnpxieB&#xA;ShF8kXO4Fwpp8cjH4SBQgZq9VgNecfu6U52mzeryl9/m9EzWuwdiqlcW8c6hXqKbgjJRmYsZQElk&#xA;VhbR78eZ8W3/AAyUspLGOIBEAACg6ZW2OxV2KuxV2KuxV2KuxV2KrJJYUKLI6qZDxQMQOR8BXrhA&#xA;KCQ8p8y/l9ZeW/MVt5p0ogwvcN9Y06RVKAsjOxjkIIj2UkcqAH9oDNrg1RyRMDzrm67PgEDxBgOn&#xA;+YotN803MN5a/V9DuneWKxvA0kcLMC0EwVeXw8qV4Vqppv1zOlC42D6vL7XEEqNHk9v8k+ajq0L2&#xA;F0oTUbOONnZG5xzROoKTRsOzAg/SM02q0/AeIfSfxTs9Nn4vSfqDKMxHKdirsVSFPPnk52ulTV7d&#xA;jZrI9yA1eCwsiSE/J5UXbqTtlvgz7mHiR71OT8xfI8UQlk1q2WJiFEpf4KlEl+1SlOEyNXwOPgT7&#xA;keLHvVrvzx5TtL82FzqUUV2rIjRtyFDIpdfipxoVUtWtKA4jDMiwEnJEGrU4/wAwPJcqROmr25Wc&#xA;gRHkRUszIBuNviRhv4Y+BPuXxI96628+eTbqSOO31e2keXhwVX6+rCZ0++JC3ticMx0UZI96xfzD&#xA;8kMISutWp+sKHi+Pqpcxg+3xKevgT0Bx8Cfcvix707sr21vrOC9tJBLa3MaywSitHjcclYV7EGuV&#xA;kEGiyBtUlJEbU6kUHzOwxjzWXJRZ+MxjBryACoR8PyyYFi2BNGmPax5LtrpZG0uX9HzsXdrYqXs5&#xA;HkRkLtDUAMQxPJKGtK1pl+PUEfVv97VPCDy2+5j1v5V0C5M+jeaLVrWSb0IdLWSTlD+6iWLla3AV&#xA;P3kj7shozHfj1zIlqJipQN87+fUNEcEdxLbuTfyp+WGk+XXQw3Mtwkc5ukWQLX1OBjSpA6KrHoBv&#xA;lObWymOXSm3FpBE82Z5hOW7FXYq7FUDrOvaNolqt3q15FZWzuIllmbipcgsFH0KT8gTkoQMjQFsZ&#xA;SA5oGbzx5Shkjil1W3SSVBJGhbdlZzGpA93RgPkfDJDDPuR4ke9bF588nzR3ckWqwOthGs13xJJj&#xA;jcKQ5FK8aOu46VGE4Z7bc18SPeoj8yPIxVW/TEChi6ry5LUxgF/tAfZ5LX3IHU4fy8+5Hix71R/z&#xA;A8mIZg+r26tbkiZSxqpWRoiKU/35GyjxIpg8CfcnxI96p/jryfwt3/S9twupDDbv6g4u4VGop6Ha&#xA;ZN+nxDxGPgz7l8SPeu0rzp5V1a4jttN1KG6nmUvHHGSSVHL4unT9233YJYZR3IUZInkUw1HUrTTr&#xA;f6xdMUhrQsqs9KAsSQoJoApJwQgZGgmcxEWVtlrGl3tslzaXUc0D/ZdGrv4HuD88MsUgaIYjLEiw&#xA;Wr2OCe6topVWWNxJyRgGBWg7HtvjEkApkASEJDAlxcLFDcGS0gYtLbzAs3GSJ0HByeXEljs1em1B&#xA;k5ExG43LXECR2OwSOLyV5Y1qxmtdRgErPHbGJeVHhVbaNQ8X7S8iDXsaZfLUzgbHn95ao4ISFHy+&#xA;5NvLPk3S/L6r9VaWWRIRbLLKwJESsXA2AHU5Tm1MsnP3tuLAIbhPsx292KuxV5d/yqe1hmmI8wxB&#xA;ZVniRJLePksc1xDdoOSyRl2SW2WrNWqkgBdszfzJP8P45ON4Q70BP+SGkNaS2q+ZAkThi1YoyQZb&#xA;aO2uG/vB9oQhl/l/ysmNXK74WPgDvZJ5k8gaXrN+t2NXWAIkcTRkK/wJb3FqfiWSOjFLskHpUCoY&#xA;VGU48xiKr8bH9DZPGCeaR3n5OaLqARr/AF9JTEix3JjjjiUxq0jFaLJRarJTkanatd8tGqkOUWBw&#xA;g8yv0v8AJzTrd7NLXX1mFmYykZiViVW0azlrxlH21bkv8p/mwS1R3uP4u0xwjoVRPyNjETRtrkrL&#xA;NZyWdyghARwYLmCF+AkpWL63z3rVlFOOD855df1fqT+X83plnbR2tpBaxgCOCNYkAFBxRQooO3TM&#xA;MmzbeBS6UiqA9K1PyUV/XhiiSEakszHdlPShArTpSu2WjYNR3KM4h0AcVrvuKZTdHZuqxuoz2lpd&#xA;QSWl0i3MEgo8MoDgqexB65ISINjZjwg7HdJPLkVzZ69rOmJO82k2qWjWUcjF2gklEhlhDtVioVY2&#xA;UE7VoNssykGIPU2xxggkdGR5Q2uxV2KuxVjnnnyzF5g0+0ge/GnNa3BnjnaOOZSXt5bdkKS/AapO&#xA;xFa79iNsuw5OE8ra8kbHNh97+Uen3k8UsnmCNTBwaEJEo+K3Nw0LNWU14i8flSnKg+zvXIGpI/h/&#xA;G36mo4QeqK0D8sdJ0n9Kj9OrOdVsHsR8KLwEkEMEkn2zy/3nUgbU3G+RnqJSrbkUxxAXvzUrn8rL&#xA;BpbmRdfjiW8+thwYY3JivmhlIHORlBVrdaMoG1e/xYRqD/N7vsQcQ70H/wAqW8vxXwvo9dCXQcyW&#xA;zMqsoAvTeqGBkq4WQgdakfPJfm5VVfiqR4Ebu1ey/JG0Wws7OPWzJYWjhkKQD1GHK0eQGT1GXd9O&#xA;joQu3xDeopGWsNk1v/b+tIwbc/x+AyDyl+W8WgatHqs1+2oXiWstoJHj4nhLKsux5vQKUoFG2+VZ&#xA;dRxCqpshi4TadeZdRFlbLNG8fr2we5KSNxARYnXkx/ZUswXkdsGGFnyOyMsqeV3k/lzW7pp4dR/Q&#xA;N/bJ8en3rGBEFARLA6GMEV3FPnx3328eKAojiHeHWSAlyPD72ReTPOMl1cwLEj3Gl2cbrfeYLkCM&#xA;SKFcqkYYKxHIAs7cem4B64uowbeZ5ByMGaj5d7LdM13QrpJ7vSpBeyu3ApE4f4h0WteKDv8AFmLk&#xA;xTFCWwcjHlhuY81a7S3t7ext7mPmYxHELhGKPGTROSEfF89xt45GFmyGUiBQKOsHn/fwzSeqYJOC&#xA;yEAMylFccqUFfjpsMqnWxHVsje4KKyDN2KuxVi8mj38t4VeyX0WdiZylqxAZhQmo5UWlaDMkZABz&#xA;+9o4DfL7kWPK/GSq3KLGTUoLa3FQW5EEha79Mh43l9pZeF+KaPlblHIr3KM0jBi31W3HjWoCb9tz&#xA;4YfG8vtK+F+KRFj5dtIA6zrFdK4CgPBEKAEnsN+vfIyyk8tkxxgI6HTdPgdXgtoonXZWRFU77dQM&#xA;gZk8yzEQERkUsU87/mV5a8oW3O/mMt46s8FjCOcrhepA7L7nbMnDpZT9zRkziLx5/wA/vOlxqa6n&#xA;BYRLosauUs1KliAac3lPfr0oP9bNiNDACurhnUyt6z5G/M/y35uheO2rDdxjlcW0i9NwCa9OpHXf&#xA;xAzAzaWUN3Kx54y2LMUUAbGq9h1/HMUlyAENxdrskUVl3FfDpltgRaqJklvlL99DqepHrqGoXDr/&#xA;AKluRZpT2ZbYMPnjm2IHcP2ssXK+8p7lLY7FXYq7FUu121nubNUhjErrIsgQhCDwBIr6nSp223yz&#xA;HIA7sJiwlOn+XbqVS90i2si/YVobR9ya1HprtQfD71y2WUDlv82uOM9f0Io+VgUQG4jJTubW3pQH&#xA;lQLxoNyTkfG8vtLLwvxTU3lUSOrfWh8IooNvbsN/mmIzeX2lTiTFNH0wRRpJawyNGoHMxJuepPTu&#xA;d8r8Q97PgCqzWWn23RYIFbZEXblI3RVUblmboB1wAGRUkRCiWv7oE72Nt/MaGdh+Kx/TU/6pyWw8&#xA;z9jHc+QUb/SoZ9IvbG04JLdRMpaUepzZhSsvMMXB6GtdsMZkSBPRBgDEgdXgesadeaRdz2l2ps1j&#xA;VvTju4vrVtsOtu5WRh/qN16k9hv8cxMWN/x1dNkiYmimWleYr2205dL1GzfVNMlakljdKIL4Vbmr&#xA;wCtHr1VK1FKDZa5XLGCeKJo/Y2Ce1EWPtTXSdRMt4bTybpjw3Uyf6RrGphOSRLTksUSswfh8PsDQ&#xA;MO+QyA88h27gnGR/APiWWQ/mJpWnz2uk3STXEtmI7a4vhESgnVeDf5dWofsoR75iHRSkDIdXJGrA&#xA;IB6Mx01mcTyuVEk0nqGNSSFHBUAqQK14V6Zg5BVBzMZvdGZW2OxV2KvLruf8xv8AEU4uxqC6b6kl&#xA;PqCKRwofT9MlWHhWu/05t4jBwCuHi83VyObj34uHyVo5vMnM+o3mALRqcUjJrVePWP8A1q/RkSMf&#xA;+1pBn/TdoU/5hHzTEtL46N6p5m+RVPoV6saAcqfy98coweH/AA8Xl3riObxOvD59z0vNU7N2Ksfv&#xA;dfQakdMuCbSdmK26SbJOOo9KT7Ltx6pXkPCm+ZWPGKvn+hxckzdJfrnl/RtcsmstWtI7qA7qrj4k&#xA;alOSMPiRh4qa5fGZjuGki3i/nD8mPMekyS3vlaU39iwLTWTkfWRU1PFaKkuwG+znpvmbj1IO0tmm&#xA;WPuec2WoX9lqH1m0ebTdSt34MUJjkV6msdWA3J6qw8TRsvIBHeGFvVfK/wDzkTqtmsFtrlityFNJ&#xA;rqFvTLLx5EiIjjyXqRyXbrQ7Zh5dFGXJvhqDF7JZ+fNC1Py3cazpkv1hIo2PogH1PVC1EXHryJIA&#xA;HftmvOnlGVFy/GBjtzTXy9p8mm6Dp1hKeU1tbxRTN15SKgDt/smqcpyS4pEtsBQATDIMnYq7FXYq&#xA;kHnd/MaaE50AMb31F58ADJ6VDy4A960+jMnSDHx+vk4+p4+D0c2FWU/nb6gTe/pv696igLEiiL0+&#xA;Q5n4kLcgvT3zPkMPFtwU4UTlrfjtUvZvNo09zZHXjqG3piWNPS6jlyogbpWmCIxcW/Bwpkclbcds&#xA;r8hSeZ30dz5gDi4EpEHqgLJ6dB9oCn7VaV3zD1gx8Xo5OXpTk4fXzZLmI5KhdRW93DLaSxrNFIvG&#xA;WNvs0I6HJxJBvkxkAdkNouiWmkWSWds0rxISU9aRpONey8iaD5ZLLlMzZY48QiKRBu7J5fQ9RTJt&#xA;Qe57A+OQ4SN08QJpq4sreYqZ4lmC9CR8Q/qMMZEctllAHnu87/MT8vbvUHk1DSkS7WQhp7GbbiVX&#xA;j+4daNESBU9d6V22zYaXVCPpls4Wp097xYO2j63aOmrvYzW6QuIbS4luOd4ZuBNIOIRDTgaqV5MO&#xA;namcckZHhv8AU4YjIDipF23n7VTZSyubGe9hRki1eWIJdxbEn1YNzzUD9lSp79zgOnHnXd0ZDMfK&#xA;+9mP5Nz3dy2tXN488tzM1uzT3bgzOP3nEmIE+ilPsJ4e1Mwe0AAIgef6HL0RJMifL9L0nNa56Evd&#xA;Y0mxkjjvb2C2kl/u0lkVC3uAxGTjilLkCWEskY8yAiY5YpUEkTrIjfZdSCD8iMiRTIG12BLsVdir&#xA;sVS+bzBo0TMjXaNItQUQ82JWpKgLWrCnTLRhmejWcsR1QFvNb+ZEnhutOVtKdKK8/FjL8W37sg/D&#xA;tUE5OUfDqj6mEZeJzGyT3KzaPd/VLHUItSUGn6JuLhPriVHKkMrsXbboktf9dRtl0JcQsivOtvx7&#xA;vk1ThRoG/vRmn6rZX5dIGK3EIBuLSVTHPFXpzjbcA9mFVPYnJEUwSXzd+XvlnzTETqFsEvQvGPUI&#xA;gFnUUpQt+0u/2WqMsx5ZR5MZRBeWXX5MsNfls7m+9dAUaKx06MPO0LVoZDO5W2HJeVZWZT+wKgDL&#xA;/wA1tf4/awGHd7B5B8gL5fSJ+KWkSEyJp9uSyeqycDLPO4WW4k4kirBU8IwRXNdnz8f4/H46ubix&#xA;cLOMxW92KrVkRyQpBK7GmEghAIK4kAEk0A6nAlBWmuaLeSGK0v7e4kBoUjlR2+4HLJYpx5ghhHLE&#xA;8iEblbN2KuxV2KuxVi/mS18zWd+NW0GQSqygXunTVMUnDoyEVaN+O1RUeIzKwmBHDL4Fx8omDxRb&#xA;0fzlomuq+lX8RstQkQrPpl0AC6kEN6bfZlXrup+dMGTTyh6huO9YZ4z2PNDXvlK7s5o57AtqNnCx&#xA;dbCaSk6ctj6M715D/Il692pko5wdjse/9n6mMsFctwmWjau100scM3qyw0M1hODDdR1/mRunsd1b&#xA;saZXkgB+vozhI+/707ChwHoUYj6R7HqMpum6rQGt6RYatYNY6jEskTn925/ZkoQrLuCrb9jlmOZi&#xA;biwyREhRebyflLrsd80EN6klo9PTv5VU3UIXpxkpyYj9k9V7Zshr48PLfudedHLi8noHlTylpPlr&#xA;Tza2Ef7yU87q5aplmf8Amdjv9HTNdnzyyGy5+LCICgnDyJGvJyFUdzlQBPJsJA5vm3U9TvtTvpb2&#xA;9lMtxKasx6AdgB2A7DOpx4xAUOTzc5mRs82rHU9RsJPUsrmW2eteUTslfnQ74Z44y5i1jOUeRp73&#xA;5N1qTWfLlnfTEG4ZSlwRt+8jJUmg6cqcvpzm9Ti4MhA5O+0+TjgD1TrKG92KpX5le6XSJfq/qjm0&#xA;aTvbq0kywvIqytGqBmLCMmnEEjqAcsxVxbsMl0xSG1vtL0R7rUAY9Iil5CFo5HuBBzVYmcvK3A7c&#xA;m+DYdlbM3j45cI+pwzDgjxHknttq1tf2yzWUqPbN9kxmo/2XevzyHhcJ35p8XiG3JifmXVfJthbH&#xA;Q1061vNS1QtJY2UMXOSS5ZuIkb6v+9Wh3L7UA65bGMieKyK+74sbFVQNsos/JMX6DsrPU7l7vU7N&#xA;W4aqheOdWZifgkDGQUBC/a+ID4q5iS1HqJiKB6OSMPpAPPvUP8MeZ5ZjDca0PqBBUtDAkN0y/wCV&#xA;OrFQT3McSHwKnJHPGth+Px5sRhN80/0rRNN0uD0bKBYlqXYgbs7fadid2Zu7Hc9zlEpmXNvjABHZ&#xA;BksmmjhTk5oO3iclGJPJjKQHNLLi/llqq/AngOp+eZMMQDjTykojSv7uT5j9WV5+YbMHJiX5u6nf&#xA;Wmh29vbSmKO8kaO447FkC1418D3zK7NxiUyT0cftCZEQB1eOZvHTMz/LvzZqlr5gtLK4u5JLC6b0&#xA;GhkYsqswohXlXj8VBtmDrdPEwJA3Dm6TPITAJ2L2vNA7t2KuxV2KuxVJtf8AKWja3CUu4R6gPJJV&#xA;2YMOjAihB9wQcuxZ5Q5NOTBGTHRP5x8p0E3PXtGXbcj65GP8ljRZR7NRvc5k8OPLy9MvsaOKePnu&#xA;GSaLrvl/XFF7YyRyzwgxvyXjPFU7o6sA6V49DmNkxThsXIhkjLcIPX/POlaXKbKBW1HViKpYW1GY&#xA;V6GRj8Ma79WPyrksWmlLc7RY5NRGO3MobQrLzRqOoxarrsgt4IeTWumQEiNWbZWkJAaUqp70Wu4H&#xA;fJ5ZQiOGPzY4xOR4pcmWZiOShbm/SIlE+KQdfAZbDES1TygJZLNJK3J2qe3gMyYxA5ONKRPN8+5v&#xA;3SuxV67+TL3R0a+R1ItluA0LnoWKAOB8qLml7TA4x307fs4nhPdb0LNY7F2KuxVp0R0KOAysKMD0&#xA;IxBUhhOt/llDPPJcaHfy6NLcI0VysIDROj7N+6b4A1Psmm3gczsetIFSHE4c9ILuOyaeVPIPl/y0&#xA;jPZwmS+l3udQnYy3MreMkrfEfl09sx8ueU+fJvx4hFkeUtrsVdirsVQuoQGSHkv2k3p4jvluKVFq&#xA;yxsJTmU4qZaV/dyfMfqzHz8w5GDkwj86P+OZp3/Gd/8AiGZvZf1H3OL2j9IeS5uXUKtq06XMLW9T&#xA;OrqYQoqeYPw0HzwSqt+SY3ez6ZjLFFLDixALDwOcmXpw3irsVdirsVdirmVWBVgCDsQdxirFtc/L&#xA;rQNUuVuvS9C5GxkjLxsR4co2Rqe1aZlY9XKIrm409LEmxsj/AC/5R0TQ4BHZ26hq1L03LeO9TX3J&#xA;JyGXUSnzZ48EYJ1lDc7FUnvoDFOT+y/xKf1jMzHKw4eSNFD5Ngl3/Kp/KH++5/8Akaf6YP5Ry+TP&#xA;8hjd/wAqn8of77n/AORp/pj/ACjl8l/IY2VWNjaWNpFaWkSw28K8Y416Af59TmHOZkbPNyoxERQ5&#xA;K+RZOxV2KuxV2KuxV2KuxV2KuxV2KoY6dbEk0Ir2By3xZNXhRVYLeOEEJWh3NchKZPNnGAHJLvMH&#xA;ljStfhih1BXZIWLpwbjuRTLMOeWM3FhlwxyCikf/ACqfyh/vuf8A5Gn+mZH8o5fJo/IY0dovkDy1&#xA;o96t7awM1wgIjaVi/GvdQe/vleXWZJiidmePSQgbA3ZHmK5LsVdirsVdirsVdirsVdirsVdiqyaC&#xA;OZeLioBqMlGRHJjKIPNQ/Rtt4H78n40mHgxRWVNrsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSX65c/78OZvhx7nC8SXe765c/78OPhx7l8S&#xA;XerWs9zLOi+oSK1b5DITjEDkzhKRPNNMxXKdirsVdirsVdirsVdirsVdirsVdirsVQmoyyRohRip&#xA;JNaZdhiCd2nLIgbID65c/wC/Dl/hx7mjxJd7vrlz/vw4+HHuXxJd6Y2DStCXkYtyPw18BmNloGg5&#xA;OKyLKJytsdirsVdirsVdiqyaaGCJpZnWOJBVnYgAD3JwgE7BBIHNSs9QtLxOdu5ZevxKyGnjRwpp&#xA;kpwMebGMxLkiMgzdirsVdirH8z3AdiqZaZCVVpSN22X5Zj5pdHIwx6o7KG92KuxV2KpNrWs3ECXM&#xA;Gmol1qMEfMWfqKjtUVA+L7NfHMjFiBoy5OPlykbDm8f0r88fMum61LZ+ZtMMLbtJaIrLcRKDSqo5&#xA;Prrx+KsZO1T9lSc2M9JCQ9LiRzzid3sXl7zVouv2Ed9ptws0Eporr05DqN++a3LglA7ubjzCSb5Q&#xA;3NO6opZyFVRVmOwAGICkvPvO35v6PoaQR6eF1KS4LVlt5YyqIoHxBgJBWpoAR45sNPoZT3ls4WbV&#xA;iOw3RPk/8wY9ZOn09SS3v/VhMsvD1IrqEBzE4jREoyfEp7+AwajScIJ6j7lw6myAev3s5zAc12Ko&#xA;HVf7uP5n9WX4OZaM/JLcyHHXIjO4RRVjsMSaUC09jQIioOiimYJNlzgKDeBLsVdirsVdirsVeIfn&#xA;H+YWrw6rP5esjNY/VXhk+tRSmMuDHyIHEBurDfl26ZutDpo8Ikd7dXq854uEbUl3k7zdrFw1vq8z&#xA;yzX+kskd5L8TGewkJBMniYyhBbvVe4y7LhjRh0ly97RDKQRLqOfue66Xq2naraLd6fOtxbsSvNai&#xA;hHUMDQqfYjNFkxygakKLuIZIzFg2EXkGbsVdiqXDSn5byDj403zI8fycfwPNExWNvHvx5N4tv+GV&#xA;yyktkcQCIytsdirsVdirsVeY+e5JE126aOd4GX0WV0ToyoDtJQlXp+GbjSC8Y+LqtSf3hSW/1fR9&#xA;XsRa+atJTVooEM0VxxVWVgRtyBr8XivhvXLPBIPoNNYzbeoJBoP5g6trnmLRrPS4I9H8s2+o2sIt&#xA;rUqiswnT92xHFnrU7KoX2NCccmGMYm/VKj9zZCZJHQWH0JPcQW8Lz3EiQwxiryyMFVR4ljQDNIAT&#xA;ydoTSS+brK41ryjqFtpcwaW7t2+rSIw4vUVADA0o3jl2nkIZAZNWeJlAgPm7y35Va+81Q6DqvrWE&#xA;rlg68Pjqil6fERSoU0bfOhyZahxDd00YXKiyjRL+Hyz5ik8sGUoBfibT9UQpJ6cjx+lH6sZVlZfi&#xA;+KhFDlGSPHHi8tw2QPCa8+b3bQr+e809XuTEbuJmiuvQYtGJU2YKTv8AMdjtmjzQEZbcnb4pmUd+&#xA;aYZU2KF5bGdAA3Eqa75ZjnwlryQ4goRaWo3levsu2Tln7mEcHei44YohRFC+/f78qMiebaIgcl+R&#xA;ZOxV2KuxV2KuxV2KsI/MP8sdO81qLxJDa6tChWOZQCsijcI4JH0GuZul1hx7H6XF1GmE9xzeQ+b9&#xA;YuxaaLcW8L2+oabGLeTVbchEYqPhWihShNCeDqpG+xBzb4oDcHkejrJy5EdGb+TvzBtbaOC8W3gX&#xA;Tpkji1VLZeEkF0x3lkUj4kajFeO1NuopmJn0pntfqHK+ob8OoEDdek8/e9eBBAINQehzTO2dirsV&#xA;dirsVdirsVdirsVdiry78wDIms3rIG3WBXb1OK8WAFCoBYjc8SP2ts3Gj+gfF1Oq+ssOuoZPQeYx&#xA;kxrBIpmLdGYqePEDjvQ98zY83FPJifkQSHzVoL3j8XW/tUtbJOLBY/XSjsVNE7nj18R3yGe+CVcq&#xA;P3N+KuIXubD6qmAbihFQTVh4gD+tM5+Lt5JK+gmCVrrQ5/0ZdSkyS2rLztJmPUvDVeLHu8ZVvGvT&#xA;LvEvaXqHf1auCt47eXRhPnSG51TVreHV7BbWV1gtrVWP7s3ElxQzW96gDDihHwsFP+SwGZumIjE0&#xA;b5n4VypxM4MpbiuX397z3U/y48xxWcXmPSI572zlYzD1FrdoyORydN+fxLWo69aZnR1MOLgPP7HF&#xA;OGVcQ5PUvyyfXZ5oby8haAXVk0mpR8DGhuvXZY5OGyrJJEOTUHetNxmu1vCI0Oh291ObpeLivpW/&#xA;vt6Jmtc92KuxV2KuxV2KuxV2KuxV2KuxVg/nTzF5mby/PdeUreHUrlCVMQkoV7EhTTkw68Wp8jmw&#xA;w4YRl63ByZZSHpeQeXfPulrqPPzNa1W3YxXw9P0nWMH01S7tq/Zq6VO617ls2U4Ex9J/Hk4Udpbh&#xA;6Von5beSr5pdS0e7mi07VIFU28bBoyvqpKDGzCo3jpQ9MwcmryQ2I3DlQ08J8jsXpccaRxrGgoiA&#xA;Ko8ABQZrCbdgBS7Al2KuxV2KvKbiz/OwzSJBLKqNPbtHK0liQEV7j1+gBCMHiIFC1B17HOBw/i/J&#xA;xiMivoem/nE8eprq128YleFrHi9rzRDdhpFBUMAVtiwavelK4Jyw7UPv7v1piMm9pdJpv58Gw4w3&#xA;Ui3YW05mV7LiWCRi5EfEmn7wSGrE1FKAdpcWC/n3sayUioLT88E+ui5lMrSJGsDQNZhVaoMrR86M&#xA;AVVlHKu5HapAJw7V+lNZE38lWH5oprMcvma8ZrJfrTTRg2zI7ViFsF9JVYLR5T4/CK+9eaWKvSN9&#xA;mWMTvdA+fre5TWp50VIywhaGZ+QclVAb0zVVPSnGte+ZujI4AHB1QPGSw6+uo5LK4RqGaWJpOS1C&#xA;kLsagALyq+305mxG4cSXIsM/LwRr5s0ZYVa4l/SNsZ790oE/fx1hRhyC9aU5b+AyOp+k2eh2+DkY&#xA;eYodQ+rWNHZv5F2+nr+oZz45O2PND2taMGFY22Pff6Msn9rXD7F93aRXFu9vcQpdWsi8ZIZAGqPf&#xA;lsfpyEZUbGxZyjtXMJP+jNW0WHloz/W9PjX/AI5F0xqiqD8NvOeTLTaiOGXag45bxRmfVtLv/W18&#xA;JgNtx3Jro+qW2raVaalahlt7uJZY0kHF1DCvF13oy9CPHKZxMSQW2MrFozIsnYq7FWI/mZ5Y1TzF&#xA;o1na6fHDO8F2J5be4lkgjdfq80SkvEC/7uWVJBTf4diDTL9PkECSe5qywMhswPVfyp87Xd5bTxi1&#xA;C2kcSLWduTLBLcymIfu9lmaeJvYpv2zKjqYAdfxTTLDIory3+UvmCzh8wQ6klnLFqmmG1ijDmRWu&#xA;Pq9ukZcNGBSKSBirdd6gZHJqomqvY/rTHCRd9Qg5/wAnNejlnW1srAwyNfrAPU9EQ/WDB6EqCKNT&#xA;VI4njoSdmp9moyQ1cepPRHgFRb8lvOP16a5N1b3EDyO0trLIQLhDqMl3STjGEBkhcxv8PH4jtTD+&#xA;bhVfjlSPAlf471W1/KXz2ljplnJNbGaynEzXv1iTkGf6lzlUeny5BLKWOtakSeHLAdVCye/9v6/s&#xA;SMMqH47mQfl7+WmqaJr1vquoxW8IgtJoFtraZ5I1lablG4V1UchHJItRTr0yrPqBKNDvZ4sRBsvT&#xA;cw3IeKzX95Z3KXFretFLEZBxCBNjyI5Ej44xx5AMR4d86DgBFEOjEiDsVmv6/wCTrqI6p5i8vxXu&#xA;oacR6M3FFWT4Sw5cq/CCKENyFdwuVxwTG0Ts2ePHqN0k0X8zvMOo+Y9O1a7ja18twtKbe1tgPTkK&#xA;IQEKg+o5HWr0XaooMMtPHhMRvLvSMsgRI8nrflb8wLbW55bY200E8ahyrKCCjUoQ6FlruPhJB8K0&#xA;zAz6IwF25WHV8RpliOkihkNVPf5bZhEU5oLeBXYq7FWITm4mvvRF1KkjOyxhZLpUHxUQDinEdKE+&#xA;GZQoDl9zjnc/2or9B69zI9ZSj1Dlrq4J4lt9uNPsnI+JH8AMuCX4Lv0J5gKS1uAjuwKgXU9KCuwP&#xA;GqjpsPfHxI/gBeCX4KIsdBvSsq39zJSQUBguZiTua15UptTIyyDoPsSIHqj7PSIrWVZEuLiQqCOM&#xA;krMprXqD88hKd9AzEKSe+sx5huJIXYWqWzANbSgmWQI9VZ4zRVjLCqkV5Dw6ZkQn4Qvnbjzh4h7q&#xA;Yh5m8m3FtZXCW0FHkFIwPiU7UosjEcR7Nmdg1QJ3cLNpyEl8ofl5pvlWG31/zVdQ2NnZOtwkPP0k&#xA;9VTzjdmNHkbnuK7dhUYM2fjuMBZLZix8NSlyZ75d/Mzyf5lmlt7C+9OYyFY4pwI3fiBuEY8uJrUV&#xA;ofbMOemnCjTlDNGWzLBCFKslGFa79d/A5jcXe3cPcqF6RlyKUFaHI1uyvZKtV1htP0PUb5xzaztp&#xA;Z1H8xRCQNu9dsuGO5D3tXiekonQtO/RmiWGnk8mtLeKFm/mZECsx9yRXKpy4pEtkRQAR2RZOxV2K&#xA;pZ5h9QWSNG5jKyKxKtIrcVBJAMQLdPoyzFzYZOSSafa6pegyQ3RKKKFWuLtd2235IvL4a/Tl0pRH&#xA;T7A1RBP4KIOha7xQicB1+Ha6uK05cvtEb/LwyPiR/ADLgl+C3caJ5gcoFuFEaihAubhOgAGyinbE&#xA;ZIfgBTCX4KYDQUeOH1rq5EqLRuE70qTU0r2r+GQ8TyDLgW3mq6boUdra3VyVNyzrby3MmzNyB4GR&#xA;u/x0UfRhhjOSyOiJzEKDEtV84edINd+r2+lcrdX4xxkvymXf94rqDFGBts9T/DPx6bEYXbgz1GQS&#xA;qmZ2GsQXNybJmUXiJ6ksSkEoBQUan2T8XTNfkxVuOTnY8l7Hm8g1SSWqIRKVJkceoBxFK0MZBDFS&#xA;W+yvfN5F0xY35pBXSNQZ0lKF4/tnmrARN+xU0+7fLoc2BSqwvdQ0i90a6a4tor+3i9SOzlRhFD9Y&#xA;AkSOQALwHBijLxXiTtsOWVAcQIr0t8jw1v6mXXvnHVri4i0+JrbTbeUEnT9KVZpZyy1b1JE9VUQ/&#xA;9dKRvkRgA3Ny96PFPIUPc9m8qBR5b00KEVRbpRYm5oBTorVbl86mvjmkz/Wfe7fD9ATXKmx2KuxV&#xA;5rJ+aGq/4gm0029rZQRyyR+tdc6qIwac/iUVbj+ObUaCPAJWT7nWHWy4+GgPejI/P9+zMDe6StAz&#xA;ciz0PEqKbSdTz2+RyB0Y7psxqj3xUNJ/MrVbrzRFo7W9tcQPOYTcW3OhUV/eKSWHEdflksmhiMfF&#xA;ZBrqjHrJHJw0D7nouat2KX6hqUsN1FYwIouLgExzTnjCKbUHeR+/BfpIy2ELFnkGuc6NDml+tabq&#xA;y2ZuYpV1C4gBkEU3G2IpufQniCtET0+MsPHvlmKcbrkPn8x1a8kJVfP7PkVDRbvzHHbuNUuEldzW&#xA;NeCiSIEfYZ0oj06V4jx9hbkxYyfSGmGWdbvI/wA1vyz826pfvrVrfTa1ChLjTpWCyQjlXjCi8I3U&#xA;DsOLn+YnM3BljEVVNOSJO7yWXULZikXom1v4JODugIZXG/Hx2YfZIpy6VAzMIaA9Y/Lv89JdLgi0&#xA;zzM0k0QNI9UFZNiCaSp9qi0PxKTsNwMwc+jEtw5OPOYvb9G8z+X9djb9HX0N1xC+osUiuRzAZfsn&#xA;aoO2ayeGUObmxyxkhvNKBrXT9MQ1Oo39vEVPeOJvrMy/IwwOMOM7mXcP2LMch5p/lDa7FXYq7FUh&#xA;86+YrrQNEN/bWwuZPUWMhq8EDV+N6b02p8zmTpcIyT4SacfU5jjjYFsVsPzM1K5083csunWziRY/&#xA;q0hf1KOwXkB6g+EVqczJ6GIlXqLix1siL9IVL78xtRttOku0udLuHUqFtY2kMjVIB259q5GGiiZV&#xA;UgmWskBdxZD5F8z3nmLSpbu6thbvHKYwUrwcAA1HKp2rQ5javAMUqBtyNLnOSNkMjzFcl51+dLL+&#xA;hrJHaLg8rD0bkH0JDQUVnBHpv/K1RTf4gM2PZ31FwddyDzuLzDrllo6abDqN5aIaItkoE94AxoqR&#xA;S9QjfsMvHboG77HwYk2QD9zg+LICrZv+UHGK8uYSPQkMAJtmf1ZKVWjSy9z+yFGwodlqRmD2hyDm&#xA;aLmUjvi8MyyGCsL+qHeVuamp5fAAKqzFd/irWmZsd3CKR+b5C/l6RI3LSRMF9J6cUZgzAcu4Nfoy&#xA;3Hza5dGN6NpE1/5qtdOs7hLjVri0tgfUAa3VUtUYgROPiDMo+JlFK9MgZ8MeKXLf72/hs1H8bPT9&#xA;A/LDVpLlZtTVbHT1KiWztA/KWg39R2JlIqPhAO2xFDmJm1saqO5bcWll1FB6pp1otrCsEKejaRqE&#xA;ggJ5FQPft95zVTle55uygK9yLyDN2KuxVY8EDtyeNWbxKgnDZRQW/VbX/fKf8CP6Y8RXhC5IYUNU&#xA;jVT0qoA/ViSVAC/AlJPMplEDfWUd9GCVvBboJJuvcN0jA6lBy+VMyMFXt9XTuaM11v8ASjLS60vV&#xA;9KVrYi60+5jKCqmjRkcSGEgB9qHK5RlCW+xDOMoyjtuGLz6b5i0Le0ZtX0xOttMx+sRr/wAVzNUt&#xA;/qyVH+WozLjkjLn6T9jiyhKPmPtRWmaxp+pBxbSH14gDPayDhPFXpzjO9PBhVT2JyUokc2IIPJJv&#xA;OH5deWPNUROoW/pXwXjHqMFEnUUpQtQh1oacWBGTx5ZR5IlEF4r5o/KbzN5fM8gZL3SURnS7RXJH&#xA;HZUeJRIUJ+RToPhGZkM8Ze9pMCEr8q6B5wF0NS09ptEtkIb9J3XOGL94eQWOlXmZgK+nHyL9/DJZ&#xA;Jx5HdYxPN9O+V0n1WO01PUPWaSxBjtTMFjLuYwslyYlrwLAsFUnYE1APTTZjw7Dq7DDvuyfMZvdi&#xA;rsVdirmVWBDAEHqD0xVS+q2v++U/4Ef0w8RRwh31W1/3yn/Aj+mPEV4QqKqqoVQFUdANhgS3iqX6&#xA;ro1rqNvNBcxpPDOnCSKZQ608VqDQ13yyGQxOzXPHxPPZfysRXFlb6lLaaTyPK0BYS0Y1KqalireA&#xA;r8/DYjW7WRZcA6XfnszfQvL9joumLY2NmqWwIYqSBKxApyJ8RTarV98wcmUzlZO7m48fCKASPzB5&#xA;VhvXkkRC5YluUalZUNCvxjbl8JpX7RHfMnDqK2Li5cF8mKR6D5We9fTNSkibUpwJbezdzClyV5Ii&#xA;+pxr12K9fCozMOaVWOXe40cUbo80boEPmW31aJr7TbO2sbE15mNIEtVUcV9CQFuS8eob71yGUYzH&#xA;Ymz9rPGZ8W45PRdF1q01a3lntW5xwytCZACFZlALcagbAtT5jNVlxmBp2WOfELTDK2x2Kvn7X/Oe&#xA;uaxqLXbXElvGDSC3idlWNe3SlW8WzpcOlhCNVbz+XUSmbukRpv5jebrDiFvjcRr/ALruQJa/Nj8f&#xA;/DZGeixS6V7mUNZkj1t7R5d1hNY0W01JF4fWEq6A1CupKutfZgc0ObFwTMe53WHJxxEu9McqbHYq&#xA;7FUv1q/uLC3S6SB7i3R/9LSIVlEZBHJBUV4tSo606ZZjiJGurXklQtQ/S51DSxdeXngu2VgGjdih&#xA;AA+JKU+CQbfC49jTJcHDKpo47jcVDR9eluCba+iZL6Kplh48ZUWtFYp1II/bSqnsTkp4wNxyYwyE&#xA;7Ebtaz5U0vVQlyoMN2lWt72AmOVCe6slCK96de9ccecx26InhEtwkkl5r2isE1eFr+yrRNRtUBlA&#xA;/wCLYUAD+5iAP/FffMmJjL6dj3fj8ebRIGP1fNYPMGoanILfy9YySOft3t9DLBDH8oZBFNI3z4L/&#xA;AJZIpiQBvI0oN8t0z0LyFZWcqXmoub6/QFUkcKFjDdViRAqRqe6xqoPep3zHyagnaOwb4YOsmUfu&#xA;407Iij5ADMfm37BA3OpdVh/4M/wGXww97RPN3L9MZmWRmNSSKk/LI5hyZYTzY9+ZXmW/0TRoxY0S&#xA;4vHMQn7xqFqSv+V4Htl+hwDJPfkGnWZjCO3V5Ba+ZPMFrL6tvqNwjk1Y+qxB/wBYEkH6c3csECKI&#xA;DqI5pg2CWe+RPzH1i91mDS9WdJ47mqRT8Qjq4BK140UhqU6dc12r0MYwMo9HP0uslKXDLq9QzUO0&#xA;dirsVdirsVdirsVaYclI3FRSo2OKvFfzjjjXXLS25wSI1sKW06CON29RgStwCAkwBFa8QRStembr&#xA;QH0E+f4+DqdWKlXkxSa41C6tra3uWv7uC3b/AHj1CZo7eCh+H1G5fG1Nkoqk9gemZYiBuKHucbiJ&#xA;2Nl7T+WIceXXJqVNw3psBxiKiNF/cj/fYpQe4Oy/ZGl1v1/B22k+hlE91FCPiPxdlHXMeMCW6UwE&#xA;suLyWbb7Kfyj+OZMMYDjTyEvnjOhdG7FXr/5OX7y6Jd2bVpazhkP+TKtafepP05pO04VMHvDuOzp&#xA;XEjuL0DNa7B2KuxV2KpHqflS1nuTf6fK+m6oB/vVBQc6VosiGquN+jA0+eXwzkCpbxaZYRdx2KBu&#xA;NbNi9uvmbT2kltzzt9RtYHnj9QbVVEEksbMD4EU6nJjFxfQfgwOSvrHxXnzDrGsn0vL1q0NvWkmp&#xA;3sbxqPERwNxkZv8AWpT/ACsfCjD6z8AnxZS+gfFPLDT1tdPS0kdrmgJllloTI7sXdmAAX4mYmgFB&#xA;2yiU7N8m6MaFIiKCGFeMUaxqdyEAUfhkSSeaQAOS/AlB6mjtCGX7KmrD+OXYSLacwNJXmS4yZaV/&#xA;dyfMfqzHz8w5GDkwj86P+OZp3/Gd/wDiGZvZf1H3OL2j9IeS5uXUK9heS2V9b3kX95byJKnzRgw/&#xA;VkZx4gQerKMuEg9z6XjcOiuKgMAQD133zlCHpg3irsVdirsVdirsVdiqUa15csNU046feQLc2XUQ&#xA;P1U0IqjeO/f78ux5jE2ObTPEJCujDrH8p/L0FxGZpZbuO2LfVLKarhORr9g027VJI98zJa6RHd5u&#xA;LHSRB5vRbdPTgjTiE4Kq8AahaClK96Zrid3PA2Sm8R0uH5b1NQfY5l4yCHEyAgqGTYPAM3zpnYq9&#xA;7/L/APw//h2H9C/3f/Hzzp6vrUHL1Kd/DtTpnOazj8T1u/0nBwelkmYrkuxV2KuxV2KrZPS4H1eP&#xA;DvypT8cIQa6uj9PgPTpw/Z40pT2piVC7Al2KuxVpuPE8vs0+KvSmEIKRPx5Hj9mvw160zODglMNK&#xA;/u5PmP1Zj5+YcjByYR+dH/HM07/jO/8AxDM3sv6j7nF7R+kPJc3LqGQ+Rf8AD/8AiGD9N/3H+6eV&#xA;PS9Wo4+r/k/x67Zjavj4Dwc3I0vBxjie/Zzb0DsVdirsVdirsVdirsVdirsVdiqC1T0/TWv95X4f&#xA;l3y/DdtGaqSzMhx3/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:861d56df-ca2b-3c4c-8810-43399265d1b0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:861d56df-ca2b-3c4c-8810-43399265d1b0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ae228281-1399-6047-9867-083266b8da91</stRef:instanceID>
            <stRef:documentID>xmp.did:ae228281-1399-6047-9867-083266b8da91</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:861d56df-ca2b-3c4c-8810-43399265d1b0</stEvt:instanceID>
                  <stEvt:when>2018-12-18T13:00:34+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
272.503 298.258 mo
272.348 298.258 272.19 298.222 272.042 298.146 cv
250.444 286.919 li
249.65 286.506 249.15 285.693 249.141 284.798 cv
249.131 283.902 249.613 283.08 250.398 282.65 cv
271.827 270.922 li
272.016 270.818 272.044 270.647 272.044 270.555 cv
272.045 270.463 272.017 270.292 271.829 270.188 cv
250.658 258.41 li
249.895 257.985 249.431 257.211 249.416 256.337 cv
249.401 255.463 249.839 254.673 250.588 254.222 cv
280.376 236.327 li
282.603 234.991 285.389 234.955 287.648 236.235 cv
304.201 245.617 li
304.682 245.89 304.851 246.5 304.578 246.98 cv
304.305 247.46 303.697 247.629 303.215 247.357 cv
286.662 237.976 li
285.028 237.049 283.014 237.075 281.406 238.042 cv
251.619 255.937 li
251.438 256.045 251.414 256.213 251.415 256.304 cv
251.417 256.394 251.447 256.56 251.63 256.662 cv
272.801 268.439 li
273.571 268.867 274.047 269.681 274.044 270.561 cv
274.042 271.441 273.56 272.252 272.787 272.676 cv
251.358 284.404 li
251.167 284.51 251.14 284.683 251.141 284.776 cv
251.142 284.87 251.172 285.043 251.367 285.144 cv
272.965 296.37 li
273.455 296.625 273.646 297.229 273.391 297.719 cv
273.213 298.062 272.864 298.258 272.503 298.258 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.657221 .328313 0 0 cmyk
f
264.857 296.706 mo
267.524 292.055 li
277.561 297.811 li
274.894 302.461 li
264.857 296.706 li
cp
f
264.298 295.48 mo
264.295 294.271 265.139 292.799 266.184 292.191 cv
267.229 291.584 268.08 292.071 268.083 293.28 cv
268.086 294.489 267.242 295.962 266.197 296.569 cv
265.152 297.177 264.302 296.689 264.298 295.48 cv
cp
f
272.313 302.898 mo
276.635 295.362 li
292.376 304.389 li
288.055 311.926 li
272.313 302.898 li
cp
f
275.91 296.863 mo
272.513 294.916 li
271.107 295.923 270.005 297.845 269.846 299.566 cv
273.243 301.515 li
274.649 300.507 275.75 298.586 275.91 296.863 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
271.408 300.913 mo
271.402 298.954 272.77 296.568 274.463 295.584 cv
276.157 294.599 277.535 295.389 277.541 297.348 cv
277.546 299.307 276.178 301.692 274.484 302.677 cv
272.791 303.661 271.413 302.872 271.408 300.913 cv
cp
.657221 .328313 0 0 cmyk
f
267.464 294.239 mo
266.972 293.957 266.971 293.497 267.461 293.212 cv
267.952 292.927 268.748 292.925 269.24 293.207 cv
269.732 293.488 269.733 293.948 269.243 294.233 cv
268.752 294.519 267.956 294.521 267.464 294.239 cv
cp
.147219 .0154116 0 0 cmyk
f
85.5645 175.812 mo
84.769 175.812 84.0664 175.712 83.4565 175.511 cv
82.8472 175.31 82.3433 175.031 81.9453 174.675 cv
81.5479 174.317 81.2241 173.875 80.9751 173.348 cv
80.7261 172.819 80.5513 172.253 80.4512 171.646 cv
80.3506 171.041 80.3008 170.358 80.3008 169.6 cv
80.3008 163.154 li
80.3008 162.351 80.3525 161.639 80.4565 161.019 cv
80.5605 160.397 80.7354 159.821 80.981 159.29 cv
81.2261 158.758 81.5479 158.321 81.9453 157.979 cv
82.3433 157.638 82.8452 157.369 83.4512 157.176 cv
84.0571 156.983 84.7617 156.886 85.5645 156.886 cv
86.4863 156.886 87.2744 157.009 87.9287 157.254 cv
88.583 157.5 89.0996 157.86 89.479 158.336 cv
89.8584 158.812 90.1333 159.367 90.3042 160.003 cv
90.4751 160.639 90.561 161.381 90.561 162.229 cv
90.561 163.812 li
87.3154 163.812 li
87.3154 162.239 li
87.3154 161.317 87.2671 160.696 87.1704 160.377 cv
86.9771 159.752 86.5049 159.418 85.7539 159.373 cv
85.5757 159.373 li
85.293 159.373 85.0459 159.406 84.834 159.474 cv
84.6221 159.54 84.4492 159.646 84.3154 159.791 cv
84.1816 159.937 84.0737 160.091 83.9922 160.254 cv
83.9102 160.418 83.8486 160.632 83.8081 160.896 cv
83.7671 161.159 83.7412 161.403 83.73 161.626 cv
83.7188 161.849 83.7134 162.132 83.7134 162.474 cv
83.7134 170.303 li
83.7134 171.389 83.8486 172.161 84.1201 172.622 cv
84.3916 173.083 84.8765 173.313 85.5757 173.313 cv
85.8135 173.313 86.0234 173.286 86.2056 173.23 cv
86.3877 173.175 86.5405 173.104 86.6631 173.019 cv
86.7856 172.933 86.8896 172.811 86.9751 172.65 cv
87.0605 172.49 87.126 172.342 87.1704 172.204 cv
87.2148 172.066 87.2485 171.875 87.271 171.63 cv
87.293 171.385 87.3062 171.177 87.3101 171.005 cv
87.3135 170.834 87.3154 170.6 87.3154 170.303 cv
87.3154 168.652 li
90.561 168.652 li
90.561 170.169 li
90.561 170.86 90.5122 171.481 90.416 172.031 cv
90.3193 172.581 90.1538 173.099 89.9194 173.581 cv
89.6855 174.064 89.3823 174.466 89.0107 174.786 cv
88.6387 175.105 88.1631 175.356 87.583 175.539 cv
87.0029 175.721 86.3301 175.812 85.5645 175.812 cv
cp
1 .866484 .240818 .0951247 cmyk
f
92.8916 175.589 mo
92.8916 157.098 li
96.2598 157.098 li
96.2598 173.258 li
100.688 173.258 li
100.688 175.589 li
92.8916 175.589 li
cp
f
106.459 173.169 mo
106.693 173.266 106.974 173.313 107.301 173.313 cv
107.628 173.313 107.907 173.266 108.137 173.169 cv
108.368 173.072 108.552 172.945 108.689 172.79 cv
108.827 172.634 108.935 172.429 109.013 172.176 cv
109.091 171.924 109.143 171.671 109.169 171.418 cv
109.195 171.165 109.208 170.864 109.208 170.515 cv
109.208 162.117 li
109.208 161.671 109.186 161.299 109.141 161.001 cv
109.096 160.704 109.009 160.424 108.879 160.159 cv
108.749 159.896 108.554 159.698 108.293 159.568 cv
108.033 159.438 107.702 159.373 107.301 159.373 cv
106.899 159.373 106.566 159.438 106.303 159.568 cv
106.039 159.698 105.844 159.896 105.717 160.159 cv
105.591 160.424 105.505 160.704 105.46 161.001 cv
105.416 161.299 105.394 161.671 105.394 162.117 cv
105.394 170.515 li
105.394 170.864 105.407 171.165 105.433 171.418 cv
105.459 171.671 105.511 171.924 105.589 172.176 cv
105.667 172.429 105.773 172.634 105.907 172.79 cv
106.041 172.945 106.225 173.072 106.459 173.169 cv
cp
107.301 175.812 mo
105.397 175.812 104.033 175.295 103.208 174.262 cv
102.383 173.229 101.97 171.715 101.97 169.723 cv
101.97 162.897 li
101.97 161.916 102.063 161.064 102.249 160.344 cv
102.435 159.622 102.734 158.998 103.146 158.47 cv
103.559 157.942 104.111 157.546 104.803 157.282 cv
105.494 157.019 106.327 156.886 107.301 156.886 cv
109.197 156.886 110.559 157.396 111.388 158.414 cv
112.217 159.433 112.632 160.927 112.632 162.897 cv
112.632 169.723 li
112.632 170.689 112.537 171.539 112.347 172.271 cv
112.158 173.003 111.856 173.639 111.444 174.178 cv
111.031 174.717 110.479 175.124 109.788 175.399 cv
109.096 175.674 108.267 175.812 107.301 175.812 cv
cp
f
120.16 175.812 mo
119.334 175.812 118.619 175.715 118.013 175.521 cv
117.407 175.329 116.909 175.058 116.518 174.708 cv
116.128 174.358 115.815 173.91 115.582 173.364 cv
115.347 172.817 115.184 172.227 115.091 171.591 cv
114.998 170.955 114.951 170.217 114.951 169.377 cv
114.951 157.098 li
118.219 157.098 li
118.219 169.723 li
118.219 170.154 118.23 170.522 118.252 170.827 cv
118.275 171.132 118.323 171.451 118.397 171.786 cv
118.472 172.12 118.578 172.388 118.715 172.589 cv
118.853 172.79 119.042 172.957 119.284 173.091 cv
119.525 173.225 119.817 173.291 120.16 173.291 cv
120.501 173.291 120.793 173.225 121.035 173.091 cv
121.276 172.957 121.462 172.79 121.593 172.589 cv
121.723 172.388 121.827 172.12 121.905 171.786 cv
121.983 171.451 122.031 171.134 122.05 170.832 cv
122.068 170.531 122.078 170.161 122.078 169.723 cv
122.078 157.098 li
125.345 157.098 li
125.345 169.377 li
125.345 170.217 125.299 170.955 125.206 171.591 cv
125.113 172.227 124.95 172.817 124.715 173.364 cv
124.481 173.91 124.17 174.358 123.784 174.708 cv
123.397 175.058 122.901 175.329 122.295 175.521 cv
121.689 175.715 120.977 175.812 120.16 175.812 cv
cp
f
131.334 173.225 mo
132.293 173.225 li
132.627 173.225 132.921 173.195 133.174 173.136 cv
133.427 173.076 133.639 173.005 133.81 172.924 cv
133.981 172.842 134.124 172.708 134.239 172.521 cv
134.354 172.336 134.442 172.165 134.501 172.009 cv
134.561 171.853 134.605 171.617 134.635 171.301 cv
134.665 170.984 134.683 170.715 134.691 170.492 cv
134.698 170.27 134.702 169.938 134.702 169.5 cv
134.702 162.741 li
134.702 162.303 134.694 161.949 134.68 161.682 cv
134.665 161.414 134.629 161.145 134.574 160.873 cv
134.518 160.602 134.436 160.392 134.329 160.243 cv
134.221 160.095 134.078 159.959 133.899 159.836 cv
133.721 159.713 133.498 159.628 133.23 159.579 cv
132.962 159.531 132.639 159.507 132.26 159.507 cv
131.334 159.507 li
131.334 173.225 li
cp
127.966 175.589 mo
127.966 157.098 li
132.271 157.098 li
133.386 157.098 134.319 157.21 135.07 157.433 cv
135.821 157.655 136.423 158.009 136.877 158.492 cv
137.33 158.976 137.652 159.568 137.841 160.271 cv
138.031 160.974 138.126 161.838 138.126 162.864 cv
138.126 169.533 li
138.126 170.589 138.029 171.484 137.836 172.221 cv
137.643 172.957 137.325 173.581 136.882 174.095 cv
136.44 174.607 135.851 174.985 135.115 175.227 cv
134.378 175.468 133.475 175.589 132.405 175.589 cv
127.966 175.589 li
cp
f
147.984 175.589 mo
147.984 159.585 li
144.884 159.585 li
144.884 157.098 li
154.353 157.098 li
154.353 159.585 li
151.353 159.585 li
151.353 175.589 li
147.984 175.589 li
cp
f
155.825 175.589 mo
155.825 157.098 li
163.564 157.098 li
163.564 159.474 li
159.193 159.474 li
159.193 164.782 li
162.65 164.782 li
162.65 167.157 li
159.193 167.157 li
159.193 173.258 li
163.621 173.258 li
163.621 175.589 li
155.825 175.589 li
cp
f
170.524 175.812 mo
169.729 175.812 169.026 175.712 168.416 175.511 cv
167.807 175.31 167.303 175.031 166.905 174.675 cv
166.507 174.317 166.184 173.875 165.935 173.348 cv
165.686 172.819 165.511 172.253 165.411 171.646 cv
165.31 171.041 165.26 170.358 165.26 169.6 cv
165.26 163.154 li
165.26 162.351 165.312 161.639 165.416 161.019 cv
165.52 160.397 165.695 159.821 165.94 159.29 cv
166.186 158.758 166.507 158.321 166.905 157.979 cv
167.303 157.638 167.805 157.369 168.411 157.176 cv
169.017 156.983 169.721 156.886 170.524 156.886 cv
171.446 156.886 172.234 157.009 172.888 157.254 cv
173.542 157.5 174.059 157.86 174.438 158.336 cv
174.818 158.812 175.093 159.367 175.264 160.003 cv
175.435 160.639 175.521 161.381 175.521 162.229 cv
175.521 163.812 li
172.275 163.812 li
172.275 162.239 li
172.275 161.317 172.227 160.696 172.13 160.377 cv
171.937 159.752 171.464 159.418 170.713 159.373 cv
170.535 159.373 li
170.252 159.373 170.005 159.406 169.793 159.474 cv
169.582 159.54 169.409 159.646 169.275 159.791 cv
169.141 159.937 169.033 160.091 168.952 160.254 cv
168.87 160.418 168.808 160.632 168.768 160.896 cv
168.727 161.159 168.701 161.403 168.689 161.626 cv
168.678 161.849 168.673 162.132 168.673 162.474 cv
168.673 170.303 li
168.673 171.389 168.808 172.161 169.08 172.622 cv
169.351 173.083 169.836 173.313 170.535 173.313 cv
170.773 173.313 170.983 173.286 171.165 173.23 cv
171.347 173.175 171.5 173.104 171.623 173.019 cv
171.745 172.933 171.849 172.811 171.935 172.65 cv
172.02 172.49 172.085 172.342 172.13 172.204 cv
172.174 172.066 172.208 171.875 172.23 171.63 cv
172.252 171.385 172.266 171.177 172.27 171.005 cv
172.273 170.834 172.275 170.6 172.275 170.303 cv
172.275 168.652 li
175.521 168.652 li
175.521 170.169 li
175.521 170.86 175.472 171.481 175.375 172.031 cv
175.279 172.581 175.113 173.099 174.879 173.581 cv
174.645 174.064 174.342 174.466 173.97 174.786 cv
173.598 175.105 173.123 175.356 172.542 175.539 cv
171.962 175.721 171.29 175.812 170.524 175.812 cv
cp
f
177.885 175.589 mo
177.885 157.098 li
181.252 157.098 li
181.252 164.827 li
185.011 164.827 li
185.011 157.098 li
188.379 157.098 li
188.379 175.589 li
185.011 175.589 li
185.011 167.225 li
181.252 167.225 li
181.252 175.589 li
177.885 175.589 li
cp
f
191.178 175.589 mo
191.178 157.098 li
193.498 157.098 li
198.026 167.57 li
198.026 157.098 li
200.814 157.098 li
200.814 175.589 li
198.606 175.589 li
194.033 164.581 li
194.033 175.589 li
191.178 175.589 li
cp
f
207.768 173.169 mo
208.001 173.266 208.282 173.313 208.609 173.313 cv
208.937 173.313 209.215 173.266 209.446 173.169 cv
209.676 173.072 209.86 172.945 209.998 172.79 cv
210.135 172.634 210.243 172.429 210.321 172.176 cv
210.399 171.924 210.451 171.671 210.478 171.418 cv
210.503 171.165 210.517 170.864 210.517 170.515 cv
210.517 162.117 li
210.517 161.671 210.494 161.299 210.45 161.001 cv
210.405 160.704 210.317 160.424 210.188 160.159 cv
210.057 159.896 209.862 159.698 209.602 159.568 cv
209.342 159.438 209.011 159.373 208.609 159.373 cv
208.208 159.373 207.875 159.438 207.611 159.568 cv
207.347 159.698 207.152 159.896 207.026 160.159 cv
206.899 160.424 206.814 160.704 206.769 161.001 cv
206.725 161.299 206.702 161.671 206.702 162.117 cv
206.702 170.515 li
206.702 170.864 206.715 171.165 206.741 171.418 cv
206.768 171.671 206.819 171.924 206.897 172.176 cv
206.976 172.429 207.082 172.634 207.215 172.79 cv
207.349 172.945 207.533 173.072 207.768 173.169 cv
cp
208.609 175.812 mo
206.706 175.812 205.342 175.295 204.517 174.262 cv
203.691 173.229 203.279 171.715 203.279 169.723 cv
203.279 162.897 li
203.279 161.916 203.372 161.064 203.558 160.344 cv
203.743 159.622 204.042 158.998 204.455 158.47 cv
204.868 157.942 205.42 157.546 206.111 157.282 cv
206.803 157.019 207.635 156.886 208.609 156.886 cv
210.505 156.886 211.868 157.396 212.697 158.414 cv
213.526 159.433 213.94 160.927 213.94 162.897 cv
213.94 169.723 li
213.94 170.689 213.846 171.539 213.656 172.271 cv
213.466 173.003 213.165 173.639 212.752 174.178 cv
212.34 174.717 211.788 175.124 211.096 175.399 cv
210.405 175.674 209.576 175.812 208.609 175.812 cv
cp
f
216.405 175.589 mo
216.405 157.098 li
219.773 157.098 li
219.773 173.258 li
224.201 173.258 li
224.201 175.589 li
216.405 175.589 li
cp
f
229.972 173.169 mo
230.206 173.266 230.487 173.313 230.814 173.313 cv
231.141 173.313 231.42 173.266 231.65 173.169 cv
231.881 173.072 232.065 172.945 232.203 172.79 cv
232.34 172.634 232.448 172.429 232.526 172.176 cv
232.604 171.924 232.656 171.671 232.682 171.418 cv
232.708 171.165 232.721 170.864 232.721 170.515 cv
232.721 162.117 li
232.721 161.671 232.699 161.299 232.654 161.001 cv
232.609 160.704 232.522 160.424 232.392 160.159 cv
232.262 159.896 232.067 159.698 231.807 159.568 cv
231.546 159.438 231.215 159.373 230.814 159.373 cv
230.413 159.373 230.08 159.438 229.816 159.568 cv
229.552 159.698 229.357 159.896 229.23 160.159 cv
229.104 160.424 229.019 160.704 228.974 161.001 cv
228.929 161.299 228.907 161.671 228.907 162.117 cv
228.907 170.515 li
228.907 170.864 228.92 171.165 228.946 171.418 cv
228.972 171.671 229.024 171.924 229.102 172.176 cv
229.18 172.429 229.286 172.634 229.42 172.79 cv
229.554 172.945 229.738 173.072 229.972 173.169 cv
cp
230.814 175.812 mo
228.911 175.812 227.546 175.295 226.721 174.262 cv
225.896 173.229 225.483 171.715 225.483 169.723 cv
225.483 162.897 li
225.483 161.916 225.576 161.064 225.762 160.344 cv
225.948 159.622 226.247 158.998 226.66 158.47 cv
227.072 157.942 227.625 157.546 228.316 157.282 cv
229.007 157.019 229.84 156.886 230.814 156.886 cv
232.71 156.886 234.072 157.396 234.901 158.414 cv
235.73 159.433 236.145 160.927 236.145 162.897 cv
236.145 169.723 li
236.145 170.689 236.05 171.539 235.86 172.271 cv
235.671 173.003 235.37 173.639 234.957 174.178 cv
234.544 174.717 233.993 175.124 233.301 175.399 cv
232.609 175.674 231.78 175.812 230.814 175.812 cv
cp
f
243.238 175.834 mo
241.49 175.834 240.232 175.288 239.462 174.194 cv
238.693 173.102 238.309 171.511 238.309 169.422 cv
238.309 163.399 li
238.309 162.336 238.392 161.42 238.559 160.65 cv
238.727 159.881 239.007 159.206 239.401 158.626 cv
239.795 158.046 240.338 157.611 241.03 157.321 cv
241.721 157.031 242.568 156.886 243.572 156.886 cv
245.401 156.886 246.713 157.334 247.509 158.23 cv
248.305 159.126 248.703 160.484 248.703 162.307 cv
248.703 163.21 li
245.479 163.21 li
245.479 162.251 li
245.479 161.842 245.47 161.507 245.452 161.247 cv
245.433 160.986 245.388 160.725 245.318 160.461 cv
245.247 160.196 245.145 159.994 245.011 159.853 cv
244.877 159.712 244.695 159.597 244.464 159.507 cv
244.234 159.418 243.952 159.373 243.617 159.373 cv
243.364 159.373 243.139 159.405 242.942 159.468 cv
242.745 159.531 242.58 159.609 242.446 159.702 cv
242.312 159.795 242.199 159.927 242.106 160.098 cv
242.013 160.27 241.942 160.435 241.894 160.595 cv
241.845 160.754 241.808 160.961 241.782 161.213 cv
241.756 161.466 241.739 161.689 241.732 161.883 cv
241.725 162.076 241.721 162.325 241.721 162.63 cv
241.721 170.091 li
241.721 171.206 241.858 172.022 242.134 172.539 cv
242.409 173.056 242.933 173.313 243.706 173.313 cv
244.107 173.313 244.444 173.237 244.715 173.085 cv
244.987 172.933 245.199 172.702 245.351 172.394 cv
245.503 172.085 245.611 171.732 245.674 171.334 cv
245.738 170.937 245.77 170.455 245.77 169.89 cv
245.77 168.373 li
243.773 168.373 li
243.773 166.198 li
248.803 166.198 li
248.803 175.589 li
246.617 175.589 li
246.372 173.715 li
245.814 175.128 244.769 175.834 243.238 175.834 cv
cp
f
253.821 175.589 mo
253.821 168.552 li
250.052 157.098 li
253.197 157.098 li
255.483 164.459 li
257.669 157.098 li
260.78 157.098 li
257.033 168.552 li
257.033 175.589 li
253.821 175.589 li
cp
f
176.498 265.062 mo
92.6611 265.062 li
86.2002 265.062 80.9629 259.823 80.9629 253.363 cv
80.9629 246.902 86.2002 241.665 92.6611 241.665 cv
176.498 241.665 li
182.958 241.665 188.196 246.902 188.196 253.363 cv
188.196 259.823 182.958 265.062 176.498 265.062 cv
cp
.657221 .328313 0 0 cmyk
f
109.014 258.572 mo
109.014 250.026 li
107.359 250.026 li
107.359 248.698 li
112.415 248.698 li
112.415 250.026 li
110.813 250.026 li
110.813 258.572 li
109.014 258.572 li
cp
0 0 0 0 cmyk
f
115 252.915 mo
115.434 252.915 li
115.966 252.915 116.344 252.802 116.569 252.575 cv
116.792 252.349 116.905 251.962 116.905 251.414 cv
116.905 250.886 116.808 250.508 116.614 250.279 cv
116.418 250.051 116.061 249.937 115.542 249.937 cv
115 249.937 li
115 252.915 li
cp
113.201 258.572 mo
113.201 248.698 li
115.464 248.698 li
115.984 248.698 116.43 248.741 116.804 248.826 cv
117.177 248.912 117.501 249.055 117.778 249.255 cv
118.053 249.456 118.26 249.728 118.397 250.071 cv
118.534 250.414 118.602 250.834 118.602 251.33 cv
118.602 251.95 118.51 252.456 118.326 252.85 cv
118.141 253.242 117.836 253.528 117.412 253.707 cv
118.781 258.572 li
116.977 258.572 li
115.797 254.064 li
115 254.064 li
115 258.572 li
113.201 258.572 li
cp
f
121.335 258.572 mo
121.335 254.814 li
119.323 248.698 li
121.002 248.698 li
122.223 252.629 li
123.39 248.698 li
125.051 248.698 li
123.05 254.814 li
123.05 258.572 li
121.335 258.572 li
cp
f
128.941 258.572 mo
128.941 248.698 li
130.715 248.698 li
130.715 258.572 li
128.941 258.572 li
cp
f
133.199 258.572 mo
133.199 250.026 li
131.543 250.026 li
131.543 248.698 li
136.599 248.698 li
136.599 250.026 li
134.998 250.026 li
134.998 258.572 li
133.199 258.572 li
cp
f
140.363 258.572 mo
140.363 248.698 li
141.602 248.698 li
144.02 254.29 li
144.02 248.698 li
145.508 248.698 li
145.508 258.572 li
144.33 258.572 li
141.887 252.694 li
141.887 258.572 li
140.363 258.572 li
cp
f
149.222 257.28 mo
149.347 257.332 149.498 257.357 149.672 257.357 cv
149.846 257.357 149.996 257.332 150.119 257.28 cv
150.242 257.229 150.34 257.161 150.414 257.077 cv
150.487 256.994 150.544 256.885 150.586 256.75 cv
150.627 256.615 150.656 256.479 150.669 256.345 cv
150.683 256.21 150.69 256.049 150.69 255.862 cv
150.69 251.378 li
150.69 251.14 150.678 250.941 150.655 250.782 cv
150.63 250.624 150.584 250.474 150.514 250.333 cv
150.445 250.192 150.341 250.087 150.202 250.018 cv
150.063 249.948 149.886 249.913 149.672 249.913 cv
149.458 249.913 149.28 249.948 149.139 250.018 cv
148.998 250.087 148.894 250.192 148.827 250.333 cv
148.758 250.474 148.713 250.624 148.689 250.782 cv
148.666 250.941 148.654 251.14 148.654 251.378 cv
148.654 255.862 li
148.654 256.049 148.661 256.21 148.674 256.345 cv
148.688 256.479 148.716 256.615 148.757 256.75 cv
148.799 256.885 148.856 256.994 148.927 257.077 cv
148.999 257.161 149.097 257.229 149.222 257.28 cv
cp
149.672 258.691 mo
148.656 258.691 147.927 258.415 147.486 257.863 cv
147.045 257.312 146.826 256.504 146.826 255.439 cv
146.826 251.795 li
146.826 251.271 146.875 250.816 146.974 250.432 cv
147.074 250.046 147.233 249.713 147.454 249.431 cv
147.674 249.148 147.968 248.938 148.338 248.797 cv
148.708 248.655 149.152 248.585 149.672 248.585 cv
150.684 248.585 151.412 248.857 151.855 249.401 cv
152.297 249.945 152.519 250.743 152.519 251.795 cv
152.519 255.439 li
152.519 255.956 152.468 256.409 152.367 256.801 cv
152.265 257.191 152.105 257.531 151.884 257.819 cv
151.664 258.106 151.37 258.324 151 258.471 cv
150.63 258.618 150.188 258.691 149.672 258.691 cv
cp
f
154.907 258.572 mo
153.496 248.698 li
155.008 248.698 li
155.818 255.064 li
156.872 248.698 li
158.081 248.698 li
159.159 255.07 li
159.968 248.698 li
161.452 248.698 li
160.041 258.572 li
158.605 258.572 li
157.492 251.979 li
156.383 258.572 li
154.907 258.572 li
cp
f
84.8735 198.084 mo
81.6919 198.084 li
81.6919 189.697 li
82.4859 189.697 li
82.4859 197.492 li
84.8735 197.492 li
84.8735 198.084 li
.472602 .264286 .0650339 0 cmyk
f
106.436 198.084 mo
105.678 198.084 li
105.678 192.095 li
106.436 192.095 li
106.436 198.084 li
106.442 191.27 mo
105.678 191.27 li
105.678 190.239 li
106.442 190.239 li
106.442 191.27 li
f
116.668 198.175 mo
116.368 198.175 116.139 198.063 115.98 197.841 cv
115.822 197.618 115.743 197.304 115.743 196.895 cv
115.743 192.095 li
116.506 192.095 li
116.506 196.738 li
116.506 197.042 116.552 197.258 116.643 197.386 cv
116.734 197.514 116.877 197.578 117.073 197.578 cv
117.414 197.578 117.767 197.383 118.135 196.991 cv
118.135 192.095 li
118.894 192.095 li
118.894 198.084 li
118.135 198.084 li
118.135 197.421 li
117.69 197.924 117.201 198.175 116.668 198.175 cv
f
125.611 198.084 mo
124.892 198.084 li
124.892 193.38 li
124.892 193.053 124.841 192.825 124.741 192.697 cv
124.639 192.569 124.495 192.505 124.305 192.505 cv
123.924 192.512 123.548 192.719 123.177 193.127 cv
123.184 193.229 123.188 193.306 123.188 193.359 cv
123.188 198.084 li
122.48 198.084 li
122.48 193.38 li
122.48 193.053 122.427 192.825 122.323 192.697 cv
122.218 192.569 122.072 192.505 121.882 192.505 cv
121.501 192.512 121.129 192.719 120.765 193.127 cv
120.765 198.084 li
120.051 198.084 li
120.051 192.095 li
120.765 192.095 li
120.765 192.702 li
121.166 192.227 121.636 191.989 122.176 191.989 cv
122.675 191.989 122.989 192.252 123.117 192.778 cv
123.535 192.252 124.028 191.989 124.594 191.989 cv
124.891 191.989 125.134 192.096 125.325 192.31 cv
125.515 192.524 125.611 192.874 125.611 193.359 cv
125.611 198.084 li
f
130.173 198.18 mo
129.658 198.18 129.288 197.986 129.063 197.599 cv
128.838 197.211 128.727 196.566 128.727 195.666 cv
128.727 194.559 li
128.727 194.228 128.739 193.938 128.762 193.688 cv
128.786 193.439 128.83 193.205 128.893 192.985 cv
128.958 192.767 129.042 192.588 129.146 192.449 cv
129.25 192.31 129.386 192.202 129.551 192.123 cv
129.716 192.044 129.912 192.004 130.138 192.004 cv
130.533 192.008 130.884 192.181 131.195 192.525 cv
131.195 189.697 li
131.954 189.697 li
131.954 198.084 li
131.195 198.084 li
131.195 197.659 li
130.891 198.003 130.551 198.177 130.173 198.18 cv
130.305 192.601 mo
129.984 192.601 129.768 192.735 129.655 193.003 cv
129.542 193.271 129.485 193.709 129.485 194.315 cv
129.485 195.727 li
129.485 196.381 129.542 196.854 129.658 197.144 cv
129.772 197.434 129.995 197.578 130.325 197.578 cv
130.619 197.578 130.909 197.446 131.195 197.184 cv
131.195 193.025 li
130.891 192.742 130.594 192.601 130.305 192.601 cv
f
134.599 198.18 mo
134.292 198.18 134.035 198.131 133.826 198.033 cv
133.617 197.935 133.452 197.787 133.333 197.588 cv
133.212 197.39 133.127 197.156 133.077 196.888 cv
133.026 196.62 133.001 196.297 133.001 195.919 cv
133.001 194.26 li
133.001 193.498 133.119 192.932 133.355 192.561 cv
133.591 192.189 134.005 192.004 134.599 192.004 cv
135.196 192.004 135.612 192.189 135.846 192.558 cv
136.081 192.927 136.198 193.494 136.198 194.26 cv
136.198 195.919 li
136.198 196.297 136.172 196.62 136.122 196.888 cv
136.072 197.156 135.986 197.39 135.867 197.588 cv
135.747 197.787 135.582 197.935 135.374 198.033 cv
135.165 198.131 134.906 198.18 134.599 198.18 cv
134.599 192.57 mo
134.471 192.57 134.36 192.588 134.265 192.621 cv
134.171 192.655 134.093 192.71 134.033 192.785 cv
133.886 193.028 li
133.849 193.114 133.821 193.227 133.802 193.364 cv
133.784 193.503 133.772 193.634 133.767 193.757 cv
133.762 193.88 133.759 194.034 133.759 194.22 cv
133.759 195.96 li
133.759 196.145 133.762 196.3 133.767 196.423 cv
133.772 196.546 133.784 196.676 133.802 196.814 cv
133.821 196.953 133.849 197.064 133.886 197.15 cv
134.033 197.394 li
134.093 197.47 134.171 197.524 134.265 197.558 cv
134.36 197.592 134.471 197.608 134.599 197.608 cv
134.752 197.608 134.879 197.581 134.984 197.525 cv
135.088 197.47 135.17 197.399 135.229 197.315 cv
135.288 197.23 135.333 197.111 135.363 196.956 cv
135.393 196.801 135.413 196.652 135.421 196.511 cv
135.43 196.369 135.434 196.186 135.434 195.96 cv
135.434 194.22 li
135.434 193.994 135.43 193.81 135.421 193.668 cv
135.413 193.526 135.393 193.378 135.363 193.223 cv
135.333 193.068 135.288 192.948 135.229 192.864 cv
135.17 192.779 135.088 192.71 134.984 192.654 cv
134.879 192.599 134.752 192.57 134.599 192.57 cv
f
138.109 198.084 mo
137.345 198.084 li
137.345 189.697 li
138.109 189.697 li
138.109 198.084 li
f
140.82 198.18 mo
140.513 198.18 140.255 198.131 140.046 198.033 cv
139.837 197.935 139.672 197.787 139.553 197.588 cv
139.433 197.39 139.348 197.156 139.297 196.888 cv
139.247 196.62 139.222 196.297 139.222 195.919 cv
139.222 194.26 li
139.222 193.498 139.339 192.932 139.576 192.561 cv
139.812 192.189 140.226 192.004 140.82 192.004 cv
141.417 192.004 141.833 192.189 142.067 192.558 cv
142.301 192.927 142.419 193.494 142.419 194.26 cv
142.419 195.919 li
142.419 196.297 142.393 196.62 142.342 196.888 cv
142.292 197.156 142.207 197.39 142.087 197.588 cv
141.967 197.787 141.803 197.935 141.594 198.033 cv
141.385 198.131 141.126 198.18 140.82 198.18 cv
140.82 192.57 mo
140.692 192.57 140.581 192.588 140.486 192.621 cv
140.392 192.655 140.314 192.71 140.253 192.785 cv
140.107 193.028 li
140.07 193.114 140.042 193.227 140.023 193.364 cv
140.004 193.503 139.993 193.634 139.988 193.757 cv
139.983 193.88 139.98 194.034 139.98 194.22 cv
139.98 195.96 li
139.98 196.145 139.983 196.3 139.988 196.423 cv
139.993 196.546 140.004 196.676 140.023 196.814 cv
140.042 196.953 140.07 197.064 140.107 197.15 cv
140.253 197.394 li
140.314 197.47 140.392 197.524 140.486 197.558 cv
140.581 197.592 140.692 197.608 140.82 197.608 cv
140.972 197.608 141.1 197.581 141.205 197.525 cv
141.309 197.47 141.391 197.399 141.45 197.315 cv
141.508 197.23 141.553 197.111 141.584 196.956 cv
141.614 196.801 141.633 196.652 141.642 196.511 cv
141.651 196.369 141.655 196.186 141.655 195.96 cv
141.655 194.22 li
141.655 193.994 141.651 193.81 141.642 193.668 cv
141.633 193.526 141.614 193.378 141.584 193.223 cv
141.553 193.068 141.508 192.948 141.45 192.864 cv
141.391 192.779 141.309 192.71 141.205 192.654 cv
141.1 192.599 140.972 192.57 140.82 192.57 cv
f
144.28 198.084 mo
143.521 198.084 li
143.521 192.095 li
144.28 192.095 li
144.28 192.92 li
144.461 192.616 144.674 192.392 144.919 192.247 cv
145.163 192.102 145.411 192.029 145.661 192.029 cv
145.791 192.034 li
145.791 192.853 li
145.684 192.811 145.562 192.788 145.427 192.788 cv
144.942 192.788 144.559 193.021 144.28 193.486 cv
144.28 198.084 li
f
150.031 198.18 mo
149.555 198.18 149.175 198.026 148.89 197.72 cv
148.605 197.413 148.443 196.998 148.402 196.476 cv
149.04 196.283 li
149.08 196.738 149.184 197.073 149.353 197.287 cv
149.522 197.502 149.757 197.608 150.061 197.608 cv
150.325 197.608 150.532 197.531 150.683 197.376 cv
150.829 197.228 150.901 197.028 150.901 196.779 cv
150.901 196.743 li
150.891 196.346 150.648 195.948 150.172 195.55 cv
149.358 194.856 li
149.072 194.617 148.863 194.383 148.731 194.153 cv
148.603 193.932 148.539 193.672 148.539 193.375 cv
148.539 192.937 148.67 192.598 148.933 192.358 cv
149.19 192.122 149.536 192.004 149.97 192.004 cv
150.412 192.004 150.752 192.146 150.99 192.429 cv
151.227 192.712 151.36 193.095 151.386 193.577 cv
150.85 193.754 li
150.827 193.353 150.745 193.056 150.605 192.861 cv
150.465 192.668 150.263 192.57 150.001 192.57 cv
149.764 192.57 149.576 192.637 149.434 192.768 cv
149.295 192.896 149.227 193.068 149.227 193.284 cv
149.227 193.48 149.262 193.647 149.333 193.787 cv
149.404 193.927 149.534 194.078 149.722 194.24 cv
150.567 194.998 li
150.719 195.13 150.842 195.245 150.939 195.345 cv
151.035 195.444 151.137 195.567 151.245 195.714 cv
151.353 195.861 151.433 196.019 151.485 196.189 cv
151.538 196.36 151.565 196.543 151.569 196.738 cv
151.569 197.197 151.43 197.552 151.154 197.804 cv
150.877 198.055 150.503 198.18 150.031 198.18 cv
f
153.262 198.084 mo
152.504 198.084 li
152.504 192.095 li
153.262 192.095 li
153.262 198.084 li
153.268 191.27 mo
152.504 191.27 li
152.504 190.239 li
153.268 190.239 li
153.268 191.27 li
f
155.954 198.16 mo
155.545 198.16 155.264 198.048 155.109 197.823 cv
154.954 197.6 154.874 197.271 154.871 196.84 cv
154.871 192.601 li
154.148 192.601 li
154.148 192.095 li
154.871 192.095 li
154.871 190.244 li
155.629 190.244 li
155.629 192.095 li
156.626 192.095 li
156.626 192.601 li
155.629 192.601 li
155.629 196.769 li
155.629 197.072 155.666 197.28 155.736 197.394 cv
155.807 197.507 155.95 197.563 156.165 197.563 cv
156.304 197.563 156.446 197.55 156.591 197.522 cv
156.591 198.094 li
156.365 198.138 156.153 198.16 155.954 198.16 cv
f
160.582 198.18 mo
160.231 198.18 159.943 198.051 159.717 197.793 cv
159.491 197.535 159.378 197.216 159.378 196.835 cv
159.378 196.636 159.395 196.458 159.428 196.301 cv
159.462 196.145 159.526 195.997 159.619 195.858 cv
159.711 195.72 159.812 195.598 159.921 195.491 cv
160.032 195.386 160.187 195.273 160.389 195.152 cv
160.592 195.033 160.794 194.923 160.997 194.821 cv
161.199 194.721 161.463 194.598 161.791 194.452 cv
161.791 194.023 li
161.791 193.473 161.739 193.094 161.634 192.887 cv
161.53 192.68 161.334 192.575 161.047 192.575 cv
160.494 192.575 160.217 192.918 160.217 193.603 cv
160.217 193.82 li
159.469 193.795 li
159.469 193.697 159.47 193.636 159.474 193.612 cv
159.498 193.05 159.644 192.641 159.915 192.386 cv
160.184 192.132 160.575 192.004 161.087 192.004 cv
161.617 192.004 161.993 192.161 162.215 192.475 cv
162.438 192.788 162.549 193.291 162.549 193.982 cv
162.549 196.895 li
162.549 197.378 162.568 197.773 162.605 198.084 cv
161.932 198.084 li
161.821 197.255 li
161.73 197.518 161.576 197.737 161.358 197.914 cv
161.141 198.092 160.882 198.18 160.582 198.18 cv
161.791 194.953 mo
161.695 195.004 li
161.53 195.091 161.403 195.159 161.315 195.206 cv
161.227 195.253 161.122 195.312 160.999 195.383 cv
160.876 195.454 160.784 195.513 160.723 195.56 cv
160.513 195.732 li
160.341 195.922 li
160.233 196.127 li
160.157 196.372 li
160.143 196.458 160.136 196.553 160.136 196.657 cv
160.136 196.951 160.203 197.169 160.333 197.312 cv
160.465 197.456 160.63 197.527 160.83 197.527 cv
161.032 197.527 161.218 197.458 161.388 197.317 cv
161.559 197.178 161.693 197.012 161.791 196.819 cv
161.791 194.953 li
f
169.216 198.084 mo
168.497 198.084 li
168.497 193.38 li
168.497 193.053 168.447 192.825 168.346 192.697 cv
168.245 192.569 168.1 192.505 167.911 192.505 cv
167.53 192.512 167.154 192.719 166.783 193.127 cv
166.79 193.229 166.793 193.306 166.793 193.359 cv
166.793 198.084 li
166.085 198.084 li
166.085 193.38 li
166.085 193.053 166.033 192.825 165.928 192.697 cv
165.824 192.569 165.677 192.505 165.488 192.505 cv
165.107 192.512 164.735 192.719 164.371 193.127 cv
164.371 198.084 li
163.657 198.084 li
163.657 192.095 li
164.371 192.095 li
164.371 192.702 li
164.772 192.227 165.242 191.989 165.782 191.989 cv
166.281 191.989 166.594 192.252 166.722 192.778 cv
167.14 192.252 167.633 191.989 168.2 191.989 cv
168.497 191.989 168.74 192.096 168.93 192.31 cv
169.121 192.524 169.216 192.874 169.216 193.359 cv
169.216 198.084 li
f
171.836 198.18 mo
171.263 198.18 170.85 198.003 170.597 197.649 cv
170.344 197.295 170.218 196.689 170.218 195.833 cv
170.218 194.32 li
170.218 193.737 170.278 193.274 170.397 192.933 cv
170.517 192.59 170.693 192.35 170.923 192.212 cv
171.155 192.073 171.46 192.004 171.841 192.004 cv
172.094 192.004 172.31 192.037 172.489 192.102 cv
172.667 192.169 172.816 192.262 172.934 192.384 cv
173.052 192.505 173.146 192.669 173.214 192.877 cv
173.284 193.084 173.331 193.313 173.359 193.564 cv
173.386 193.815 173.399 194.118 173.399 194.473 cv
173.394 195.014 li
170.976 195.014 li
170.976 195.909 li
170.976 196.529 171.037 196.968 171.156 197.224 cv
171.276 197.48 171.501 197.608 171.832 197.608 cv
172.094 197.608 172.296 197.525 172.438 197.358 cv
172.58 197.191 172.651 196.889 172.651 196.45 cv
172.651 196.035 li
173.394 196.035 li
173.394 196.369 li
173.394 196.949 173.273 197.397 173.03 197.71 cv
172.788 198.023 172.389 198.18 171.836 198.18 cv
171.836 192.57 mo
171.516 192.57 171.292 192.682 171.166 192.904 cv
171.04 193.127 170.976 193.55 170.976 194.174 cv
170.976 194.579 li
172.651 194.579 li
172.651 194.083 li
172.651 193.874 172.646 193.7 172.635 193.562 cv
172.626 193.424 172.604 193.286 172.573 193.149 cv
172.541 193.014 172.496 192.906 172.438 192.828 cv
172.381 192.751 172.301 192.688 172.201 192.642 cv
172.099 192.594 171.978 192.57 171.836 192.57 cv
f
175.842 198.16 mo
175.434 198.16 175.153 198.048 174.998 197.823 cv
174.842 197.6 174.763 197.271 174.759 196.84 cv
174.759 192.601 li
174.037 192.601 li
174.037 192.095 li
174.759 192.095 li
174.759 190.244 li
175.518 190.244 li
175.518 192.095 li
176.515 192.095 li
176.515 192.601 li
175.518 192.601 li
175.518 196.769 li
175.518 197.072 175.554 197.28 175.625 197.394 cv
175.696 197.507 175.838 197.563 176.054 197.563 cv
176.193 197.563 176.335 197.55 176.48 197.522 cv
176.48 198.094 li
176.253 198.138 176.041 198.16 175.842 198.16 cv
f
177.411 199.293 mo
177.253 198.959 li
177.432 198.857 177.559 198.74 177.635 198.604 cv
177.711 198.47 177.749 198.297 177.749 198.084 cv
177.294 198.084 li
177.294 196.956 li
178.144 196.956 li
178.144 198.003 li
178.144 198.34 178.088 198.606 177.977 198.8 cv
177.866 198.993 177.676 199.158 177.411 199.293 cv
f
182.796 198.18 mo
182.524 198.18 182.29 198.14 182.093 198.059 cv
181.898 197.978 181.743 197.872 181.628 197.742 cv
181.514 197.612 181.423 197.441 181.358 197.23 cv
181.292 197.017 181.249 196.802 181.226 196.584 cv
181.205 196.367 181.194 196.109 181.194 195.812 cv
181.194 194.417 li
181.194 193.982 181.217 193.62 181.264 193.332 cv
181.311 193.044 181.395 192.797 181.514 192.591 cv
181.634 192.385 181.797 192.236 182.005 192.144 cv
182.212 192.051 182.475 192.004 182.791 192.004 cv
183.042 192.004 183.257 192.034 183.439 192.095 cv
183.622 192.156 183.769 192.239 183.881 192.346 cv
183.995 192.452 184.084 192.588 184.15 192.753 cv
184.215 192.918 184.261 193.093 184.287 193.276 cv
184.312 193.46 184.325 193.675 184.325 193.921 cv
184.325 194.204 li
183.622 194.204 li
183.622 193.921 li
183.622 193.408 183.561 193.056 183.439 192.861 cv
183.318 192.668 183.105 192.57 182.802 192.57 cv
182.458 192.57 182.23 192.692 182.119 192.937 cv
182.007 193.182 181.952 193.633 181.952 194.29 cv
181.952 195.97 li
181.952 196.583 182.012 197.01 182.131 197.249 cv
182.251 197.489 182.476 197.608 182.807 197.608 cv
182.949 197.608 183.068 197.588 183.167 197.548 cv
183.264 197.508 183.342 197.452 183.401 197.381 cv
183.46 197.31 183.506 197.212 183.541 197.088 cv
183.574 196.963 183.596 196.83 183.606 196.69 cv
183.617 196.551 183.622 196.374 183.622 196.162 cv
183.622 195.833 li
184.325 195.833 li
184.325 196.127 li
184.325 196.39 184.313 196.617 184.292 196.81 cv
184.269 197.002 184.226 197.187 184.16 197.368 cv
184.094 197.549 184.006 197.695 183.897 197.809 cv
183.788 197.921 183.64 198.012 183.455 198.079 cv
183.269 198.147 183.049 198.18 182.796 198.18 cv
f
186.818 198.18 mo
186.511 198.18 186.253 198.131 186.044 198.033 cv
185.836 197.935 185.67 197.787 185.551 197.588 cv
185.431 197.39 185.346 197.156 185.295 196.888 cv
185.245 196.62 185.22 196.297 185.22 195.919 cv
185.22 194.26 li
185.22 193.498 185.337 192.932 185.574 192.561 cv
185.81 192.189 186.224 192.004 186.818 192.004 cv
187.415 192.004 187.831 192.189 188.065 192.558 cv
188.299 192.927 188.416 193.494 188.416 194.26 cv
188.416 195.919 li
188.416 196.297 188.391 196.62 188.34 196.888 cv
188.291 197.156 188.205 197.39 188.085 197.588 cv
187.965 197.787 187.801 197.935 187.592 198.033 cv
187.383 198.131 187.125 198.18 186.818 198.18 cv
186.818 192.57 mo
186.69 192.57 186.579 192.588 186.484 192.621 cv
186.39 192.655 186.312 192.71 186.251 192.785 cv
186.105 193.028 li
186.068 193.114 186.039 193.227 186.021 193.364 cv
186.002 193.503 185.991 193.634 185.986 193.757 cv
185.981 193.88 185.978 194.034 185.978 194.22 cv
185.978 195.96 li
185.978 196.145 185.981 196.3 185.986 196.423 cv
185.991 196.546 186.002 196.676 186.021 196.814 cv
186.039 196.953 186.068 197.064 186.105 197.15 cv
186.251 197.394 li
186.312 197.47 186.39 197.524 186.484 197.558 cv
186.579 197.592 186.69 197.608 186.818 197.608 cv
186.97 197.608 187.098 197.581 187.203 197.525 cv
187.307 197.47 187.389 197.399 187.448 197.315 cv
187.506 197.23 187.551 197.111 187.581 196.956 cv
187.612 196.801 187.631 196.652 187.64 196.511 cv
187.649 196.369 187.653 196.186 187.653 195.96 cv
187.653 194.22 li
187.653 193.994 187.649 193.81 187.64 193.668 cv
187.631 193.526 187.612 193.378 187.581 193.223 cv
187.551 193.068 187.506 192.948 187.448 192.864 cv
187.389 192.779 187.307 192.71 187.203 192.654 cv
187.098 192.599 186.97 192.57 186.818 192.57 cv
f
192.579 198.084 mo
191.82 198.084 li
191.82 193.44 li
191.82 193.137 191.774 192.921 191.681 192.793 cv
191.588 192.665 191.444 192.601 191.249 192.601 cv
190.921 192.601 190.578 192.785 190.216 193.152 cv
190.216 198.084 li
189.458 198.084 li
189.458 192.095 li
190.216 192.095 li
190.216 192.718 li
190.659 192.242 191.139 192.004 191.659 192.004 cv
191.955 192.004 192.182 192.114 192.341 192.335 cv
192.499 192.557 192.579 192.871 192.579 193.278 cv
192.579 198.084 li
f
195.067 198.18 mo
194.591 198.18 194.211 198.026 193.926 197.72 cv
193.641 197.413 193.479 196.998 193.438 196.476 cv
194.076 196.283 li
194.116 196.738 194.22 197.073 194.389 197.287 cv
194.558 197.502 194.794 197.608 195.097 197.608 cv
195.361 197.608 195.568 197.531 195.719 197.376 cv
195.865 197.228 195.937 197.028 195.937 196.779 cv
195.937 196.743 li
195.927 196.346 195.684 195.948 195.209 195.55 cv
194.394 194.856 li
194.108 194.617 193.899 194.383 193.767 194.153 cv
193.639 193.932 193.575 193.672 193.575 193.375 cv
193.575 192.937 193.706 192.598 193.969 192.358 cv
194.226 192.122 194.572 192.004 195.006 192.004 cv
195.448 192.004 195.788 192.146 196.026 192.429 cv
196.263 192.712 196.396 193.095 196.422 193.577 cv
195.886 193.754 li
195.863 193.353 195.781 193.056 195.641 192.861 cv
195.501 192.668 195.299 192.57 195.037 192.57 cv
194.8 192.57 194.612 192.637 194.47 192.768 cv
194.331 192.896 194.263 193.068 194.263 193.284 cv
194.263 193.48 194.298 193.647 194.369 193.787 cv
194.44 193.927 194.57 194.078 194.758 194.24 cv
195.603 194.998 li
195.755 195.13 195.878 195.245 195.975 195.345 cv
196.071 195.444 196.173 195.567 196.281 195.714 cv
196.389 195.861 196.469 196.019 196.521 196.189 cv
196.574 196.36 196.601 196.543 196.605 196.738 cv
196.605 197.197 196.466 197.552 196.19 197.804 cv
195.914 198.055 195.54 198.18 195.067 198.18 cv
f
198.961 198.18 mo
198.388 198.18 197.975 198.003 197.722 197.649 cv
197.469 197.295 197.343 196.689 197.343 195.833 cv
197.343 194.32 li
197.343 193.737 197.403 193.274 197.522 192.933 cv
197.642 192.59 197.818 192.35 198.048 192.212 cv
198.28 192.073 198.585 192.004 198.966 192.004 cv
199.219 192.004 199.435 192.037 199.614 192.102 cv
199.792 192.169 199.941 192.262 200.059 192.384 cv
200.177 192.505 200.271 192.669 200.339 192.877 cv
200.409 193.084 200.456 193.313 200.484 193.564 cv
200.511 193.815 200.524 194.118 200.524 194.473 cv
200.519 195.014 li
198.101 195.014 li
198.101 195.909 li
198.101 196.529 198.162 196.968 198.281 197.224 cv
198.401 197.48 198.626 197.608 198.957 197.608 cv
199.219 197.608 199.421 197.525 199.563 197.358 cv
199.705 197.191 199.776 196.889 199.776 196.45 cv
199.776 196.035 li
200.519 196.035 li
200.519 196.369 li
200.519 196.949 200.398 197.397 200.155 197.71 cv
199.913 198.023 199.514 198.18 198.961 198.18 cv
198.961 192.57 mo
198.641 192.57 198.417 192.682 198.291 192.904 cv
198.165 193.127 198.101 193.55 198.101 194.174 cv
198.101 194.579 li
199.776 194.579 li
199.776 194.083 li
199.776 193.874 199.771 193.7 199.76 193.562 cv
199.751 193.424 199.729 193.286 199.698 193.149 cv
199.666 193.014 199.621 192.906 199.563 192.828 cv
199.506 192.751 199.426 192.688 199.326 192.642 cv
199.224 192.594 199.103 192.57 198.961 192.57 cv
f
203.038 198.18 mo
202.765 198.18 202.531 198.14 202.334 198.059 cv
202.139 197.978 201.984 197.872 201.87 197.742 cv
201.755 197.612 201.665 197.441 201.599 197.23 cv
201.534 197.017 201.49 196.802 201.467 196.584 cv
201.446 196.367 201.435 196.109 201.435 195.812 cv
201.435 194.417 li
201.435 193.982 201.458 193.62 201.505 193.332 cv
201.552 193.044 201.636 192.797 201.755 192.591 cv
201.875 192.385 202.039 192.236 202.247 192.144 cv
202.454 192.051 202.716 192.004 203.033 192.004 cv
203.283 192.004 203.499 192.034 203.68 192.095 cv
203.863 192.156 204.01 192.239 204.123 192.346 cv
204.236 192.452 204.326 192.588 204.391 192.753 cv
204.457 192.918 204.502 193.093 204.528 193.276 cv
204.553 193.46 204.566 193.675 204.566 193.921 cv
204.566 194.204 li
203.863 194.204 li
203.863 193.921 li
203.863 193.408 203.802 193.056 203.68 192.861 cv
203.559 192.668 203.346 192.57 203.043 192.57 cv
202.699 192.57 202.471 192.692 202.36 192.937 cv
202.249 193.182 202.193 193.633 202.193 194.29 cv
202.193 195.97 li
202.193 196.583 202.253 197.01 202.372 197.249 cv
202.493 197.489 202.717 197.608 203.048 197.608 cv
203.19 197.608 203.309 197.588 203.408 197.548 cv
203.505 197.508 203.583 197.452 203.642 197.381 cv
203.702 197.31 203.748 197.212 203.782 197.088 cv
203.815 196.963 203.837 196.83 203.847 196.69 cv
203.858 196.551 203.863 196.374 203.863 196.162 cv
203.863 195.833 li
204.566 195.833 li
204.566 196.127 li
204.566 196.39 204.554 196.617 204.533 196.81 cv
204.51 197.002 204.467 197.187 204.401 197.368 cv
204.335 197.549 204.247 197.695 204.138 197.809 cv
204.029 197.921 203.881 198.012 203.696 198.079 cv
203.51 198.147 203.291 198.18 203.038 198.18 cv
f
206.994 198.16 mo
206.585 198.16 206.304 198.048 206.149 197.823 cv
205.994 197.6 205.915 197.271 205.911 196.84 cv
205.911 192.601 li
205.188 192.601 li
205.188 192.095 li
205.911 192.095 li
205.911 190.244 li
206.669 190.244 li
206.669 192.095 li
207.667 192.095 li
207.667 192.601 li
206.669 192.601 li
206.669 196.769 li
206.669 197.072 206.706 197.28 206.776 197.394 cv
206.847 197.507 206.99 197.563 207.206 197.563 cv
207.344 197.563 207.486 197.55 207.631 197.522 cv
207.631 198.094 li
207.405 198.138 207.193 198.16 206.994 198.16 cv
f
209.978 198.18 mo
209.405 198.18 208.992 198.003 208.739 197.649 cv
208.486 197.295 208.36 196.689 208.36 195.833 cv
208.36 194.32 li
208.36 193.737 208.419 193.274 208.538 192.933 cv
208.659 192.59 208.834 192.35 209.065 192.212 cv
209.296 192.073 209.602 192.004 209.983 192.004 cv
210.236 192.004 210.452 192.037 210.63 192.102 cv
210.809 192.169 210.958 192.262 211.076 192.384 cv
211.194 192.505 211.288 192.669 211.356 192.877 cv
211.425 193.084 211.473 193.313 211.501 193.564 cv
211.528 193.815 211.54 194.118 211.54 194.473 cv
211.536 195.014 li
209.118 195.014 li
209.118 195.909 li
209.118 196.529 209.178 196.968 209.297 197.224 cv
209.417 197.48 209.642 197.608 209.973 197.608 cv
210.236 197.608 210.438 197.525 210.58 197.358 cv
210.721 197.191 210.792 196.889 210.792 196.45 cv
210.792 196.035 li
211.536 196.035 li
211.536 196.369 li
211.536 196.949 211.415 197.397 211.171 197.71 cv
210.929 198.023 210.531 198.18 209.978 198.18 cv
209.978 192.57 mo
209.658 192.57 209.434 192.682 209.308 192.904 cv
209.181 193.127 209.118 193.55 209.118 194.174 cv
209.118 194.579 li
210.792 194.579 li
210.792 194.083 li
210.792 193.874 210.788 193.7 210.777 193.562 cv
210.767 193.424 210.746 193.286 210.714 193.149 cv
210.682 193.014 210.637 192.906 210.58 192.828 cv
210.523 192.751 210.443 192.688 210.342 192.642 cv
210.241 192.594 210.12 192.57 209.978 192.57 cv
f
213.984 198.16 mo
213.576 198.16 213.294 198.048 213.139 197.823 cv
212.984 197.6 212.905 197.271 212.901 196.84 cv
212.901 192.601 li
212.178 192.601 li
212.178 192.095 li
212.901 192.095 li
212.901 190.244 li
213.66 190.244 li
213.66 192.095 li
214.657 192.095 li
214.657 192.601 li
213.66 192.601 li
213.66 196.769 li
213.66 197.072 213.696 197.28 213.766 197.394 cv
213.837 197.507 213.98 197.563 214.196 197.563 cv
214.334 197.563 214.476 197.55 214.622 197.522 cv
214.622 198.094 li
214.395 198.138 214.183 198.16 213.984 198.16 cv
f
216.341 198.175 mo
216.041 198.175 215.812 198.063 215.653 197.841 cv
215.495 197.618 215.416 197.304 215.416 196.895 cv
215.416 192.095 li
216.179 192.095 li
216.179 196.738 li
216.179 197.042 216.225 197.258 216.316 197.386 cv
216.407 197.514 216.55 197.578 216.746 197.578 cv
217.086 197.578 217.44 197.383 217.808 196.991 cv
217.808 192.095 li
218.567 192.095 li
218.567 198.084 li
217.808 198.084 li
217.808 197.421 li
217.363 197.924 216.873 198.175 216.341 198.175 cv
f
220.544 198.084 mo
219.786 198.084 li
219.786 192.095 li
220.544 192.095 li
220.544 192.92 li
220.726 192.616 220.939 192.392 221.184 192.247 cv
221.428 192.102 221.675 192.029 221.925 192.029 cv
222.056 192.034 li
222.056 192.853 li
221.949 192.811 221.827 192.788 221.692 192.788 cv
221.207 192.788 220.824 193.021 220.544 193.486 cv
220.544 198.084 li
f
225.961 198.18 mo
225.611 198.18 225.323 198.051 225.097 197.793 cv
224.871 197.535 224.758 197.216 224.758 196.835 cv
224.758 196.636 224.775 196.458 224.808 196.301 cv
224.842 196.145 224.906 195.997 224.999 195.858 cv
225.091 195.72 225.192 195.598 225.301 195.491 cv
225.412 195.386 225.567 195.273 225.769 195.152 cv
225.972 195.033 226.174 194.923 226.376 194.821 cv
226.579 194.721 226.843 194.598 227.17 194.452 cv
227.17 194.023 li
227.17 193.473 227.119 193.094 227.014 192.887 cv
226.91 192.68 226.713 192.575 226.427 192.575 cv
225.874 192.575 225.597 192.918 225.597 193.603 cv
225.597 193.82 li
224.849 193.795 li
224.849 193.697 224.85 193.636 224.854 193.612 cv
224.877 193.05 225.024 192.641 225.294 192.386 cv
225.564 192.132 225.955 192.004 226.467 192.004 cv
226.997 192.004 227.373 192.161 227.595 192.475 cv
227.818 192.788 227.929 193.291 227.929 193.982 cv
227.929 196.895 li
227.929 197.378 227.948 197.773 227.985 198.084 cv
227.312 198.084 li
227.201 197.255 li
227.11 197.518 226.956 197.737 226.738 197.914 cv
226.521 198.092 226.262 198.18 225.961 198.18 cv
227.17 194.953 mo
227.075 195.004 li
226.91 195.091 226.783 195.159 226.695 195.206 cv
226.607 195.253 226.502 195.312 226.379 195.383 cv
226.255 195.454 226.164 195.513 226.103 195.56 cv
225.893 195.732 li
225.721 195.922 li
225.613 196.127 li
225.537 196.372 li
225.523 196.458 225.516 196.553 225.516 196.657 cv
225.516 196.951 225.583 197.169 225.713 197.312 cv
225.845 197.456 226.01 197.527 226.21 197.527 cv
226.412 197.527 226.598 197.458 226.768 197.317 cv
226.939 197.178 227.073 197.012 227.17 196.819 cv
227.17 194.953 li
f
230.373 198.18 mo
229.857 198.18 229.487 197.986 229.262 197.599 cv
229.038 197.211 228.926 196.566 228.926 195.666 cv
228.926 194.559 li
228.926 194.228 228.938 193.938 228.961 193.688 cv
228.985 193.439 229.029 193.205 229.092 192.985 cv
229.157 192.767 229.241 192.588 229.345 192.449 cv
229.45 192.31 229.585 192.202 229.75 192.123 cv
229.915 192.044 230.111 192.004 230.337 192.004 cv
230.732 192.008 231.083 192.181 231.394 192.525 cv
231.394 189.697 li
232.153 189.697 li
232.153 198.084 li
231.394 198.084 li
231.394 197.659 li
231.09 198.003 230.75 198.177 230.373 198.18 cv
230.504 192.601 mo
230.183 192.601 229.967 192.735 229.854 193.003 cv
229.741 193.271 229.684 193.709 229.684 194.315 cv
229.684 195.727 li
229.684 196.381 229.742 196.854 229.857 197.144 cv
229.971 197.434 230.194 197.578 230.524 197.578 cv
230.818 197.578 231.108 197.446 231.394 197.184 cv
231.394 193.025 li
231.09 192.742 230.793 192.601 230.504 192.601 cv
f
234.156 198.084 mo
233.398 198.084 li
233.398 192.095 li
234.156 192.095 li
234.156 198.084 li
234.162 191.27 mo
233.398 191.27 li
233.398 190.239 li
234.162 190.239 li
234.162 191.27 li
f
236.19 200.057 mo
235.431 200.057 li
235.431 192.095 li
236.19 192.095 li
236.19 192.596 li
236.51 192.201 236.893 192.004 237.337 192.004 cv
237.56 192.004 237.755 192.05 237.922 192.141 cv
238.088 192.231 238.22 192.35 238.317 192.495 cv
238.413 192.64 238.49 192.82 238.549 193.036 cv
238.608 193.252 238.647 193.465 238.665 193.676 cv
238.684 193.887 238.693 194.125 238.693 194.392 cv
238.693 195.656 li
238.693 195.973 238.68 196.256 238.653 196.506 cv
238.626 196.756 238.579 196.987 238.511 197.201 cv
238.444 197.415 238.355 197.593 238.246 197.732 cv
238.136 197.872 237.999 197.982 237.833 198.061 cv
237.668 198.141 237.476 198.18 237.256 198.18 cv
236.869 198.18 236.513 197.989 236.19 197.608 cv
236.19 200.057 li
237.121 192.601 mo
236.813 192.601 236.503 192.755 236.19 193.062 cv
236.19 197.144 li
236.466 197.434 236.782 197.578 237.135 197.578 cv
237.27 197.578 237.385 197.551 237.479 197.495 cv
237.574 197.439 237.651 197.363 237.709 197.268 cv
237.768 197.171 237.815 197.04 237.848 196.875 cv
237.882 196.71 237.905 196.533 237.917 196.347 cv
237.928 196.159 237.935 195.933 237.935 195.666 cv
237.935 194.392 li
237.935 193.751 237.88 193.292 237.773 193.016 cv
237.665 192.739 237.448 192.601 237.121 192.601 cv
f
240.595 198.084 mo
239.837 198.084 li
239.837 192.095 li
240.595 192.095 li
240.595 198.084 li
240.601 191.27 mo
239.837 191.27 li
239.837 190.239 li
240.601 190.239 li
240.601 191.27 li
f
243.236 198.18 mo
242.76 198.18 242.38 198.026 242.095 197.72 cv
241.81 197.413 241.648 196.998 241.607 196.476 cv
242.245 196.283 li
242.285 196.738 242.389 197.073 242.558 197.287 cv
242.727 197.502 242.962 197.608 243.266 197.608 cv
243.53 197.608 243.737 197.531 243.888 197.376 cv
244.034 197.228 244.106 197.028 244.106 196.779 cv
244.106 196.743 li
244.096 196.346 243.853 195.948 243.378 195.55 cv
242.563 194.856 li
242.277 194.617 242.068 194.383 241.936 194.153 cv
241.808 193.932 241.744 193.672 241.744 193.375 cv
241.744 192.937 241.875 192.598 242.138 192.358 cv
242.395 192.122 242.741 192.004 243.175 192.004 cv
243.617 192.004 243.957 192.146 244.195 192.429 cv
244.432 192.712 244.565 193.095 244.591 193.577 cv
244.055 193.754 li
244.032 193.353 243.95 193.056 243.81 192.861 cv
243.67 192.668 243.468 192.57 243.206 192.57 cv
242.969 192.57 242.781 192.637 242.639 192.768 cv
242.5 192.896 242.432 193.068 242.432 193.284 cv
242.432 193.48 242.467 193.647 242.538 193.787 cv
242.609 193.927 242.739 194.078 242.927 194.24 cv
243.772 194.998 li
243.924 195.13 244.047 195.245 244.144 195.345 cv
244.24 195.444 244.342 195.567 244.45 195.714 cv
244.558 195.861 244.638 196.019 244.69 196.189 cv
244.743 196.36 244.77 196.543 244.774 196.738 cv
244.774 197.197 244.635 197.552 244.359 197.804 cv
244.083 198.055 243.709 198.18 243.236 198.18 cv
f
247.115 198.18 mo
246.842 198.18 246.608 198.14 246.412 198.059 cv
246.216 197.978 246.061 197.872 245.947 197.742 cv
245.832 197.612 245.742 197.441 245.676 197.23 cv
245.611 197.017 245.567 196.802 245.544 196.584 cv
245.523 196.367 245.512 196.109 245.512 195.812 cv
245.512 194.417 li
245.512 193.982 245.536 193.62 245.583 193.332 cv
245.629 193.044 245.713 192.797 245.832 192.591 cv
245.953 192.385 246.116 192.236 246.324 192.144 cv
246.531 192.051 246.793 192.004 247.11 192.004 cv
247.36 192.004 247.576 192.034 247.757 192.095 cv
247.94 192.156 248.087 192.239 248.2 192.346 cv
248.313 192.452 248.403 192.588 248.468 192.753 cv
248.534 192.918 248.58 193.093 248.605 193.276 cv
248.63 193.46 248.643 193.675 248.643 193.921 cv
248.643 194.204 li
247.94 194.204 li
247.94 193.921 li
247.94 193.408 247.879 193.056 247.757 192.861 cv
247.636 192.668 247.423 192.57 247.121 192.57 cv
246.776 192.57 246.548 192.692 246.437 192.937 cv
246.326 193.182 246.27 193.633 246.27 194.29 cv
246.27 195.97 li
246.27 196.583 246.331 197.01 246.45 197.249 cv
246.57 197.489 246.794 197.608 247.126 197.608 cv
247.267 197.608 247.386 197.588 247.485 197.548 cv
247.582 197.508 247.661 197.452 247.719 197.381 cv
247.779 197.31 247.825 197.212 247.859 197.088 cv
247.892 196.963 247.915 196.83 247.924 196.69 cv
247.935 196.551 247.94 196.374 247.94 196.162 cv
247.94 195.833 li
248.643 195.833 li
248.643 196.127 li
248.643 196.39 248.631 196.617 248.61 196.81 cv
248.587 197.002 248.544 197.187 248.478 197.368 cv
248.413 197.549 248.325 197.695 248.215 197.809 cv
248.106 197.921 247.958 198.012 247.773 198.079 cv
247.587 198.147 247.368 198.18 247.115 198.18 cv
f
250.494 198.084 mo
249.736 198.084 li
249.736 192.095 li
250.494 192.095 li
250.494 198.084 li
250.5 191.27 mo
249.736 191.27 li
249.736 190.239 li
250.5 190.239 li
250.5 191.27 li
f
254.884 198.084 mo
254.125 198.084 li
254.125 193.44 li
254.125 193.137 254.08 192.921 253.987 192.793 cv
253.894 192.665 253.75 192.601 253.554 192.601 cv
253.227 192.601 252.883 192.785 252.522 193.152 cv
252.522 198.084 li
251.763 198.084 li
251.763 192.095 li
252.522 192.095 li
252.522 192.718 li
252.964 192.242 253.445 192.004 253.964 192.004 cv
254.26 192.004 254.488 192.114 254.647 192.335 cv
254.805 192.557 254.884 192.871 254.884 193.278 cv
254.884 198.084 li
f
257.646 200.052 mo
257.329 200.052 257.049 200.035 256.809 200.001 cv
256.568 199.967 256.354 199.912 256.168 199.834 cv
255.983 199.757 255.841 199.651 255.744 199.518 cv
255.646 199.385 255.597 199.226 255.597 199.04 cv
255.597 198.75 255.694 198.484 255.885 198.243 cv
256.078 198.002 256.312 197.81 256.588 197.664 cv
256.407 197.613 256.25 197.54 256.119 197.444 cv
255.987 197.348 255.921 197.244 255.921 197.133 cv
255.921 196.816 256.159 196.413 256.634 195.924 cv
256.135 195.56 255.885 194.949 255.885 194.093 cv
255.885 193.803 255.919 193.534 255.987 193.286 cv
256.054 193.038 256.155 192.817 256.288 192.624 cv
256.42 192.43 256.595 192.278 256.811 192.169 cv
257.027 192.059 257.275 192.004 257.555 192.004 cv
258.159 192.004 258.588 192.252 258.844 192.748 cv
258.909 192.637 259.016 192.516 259.168 192.386 cv
259.32 192.256 259.482 192.154 259.654 192.08 cv
259.811 192.015 li
260.013 192.545 li
259.848 192.586 259.663 192.658 259.46 192.763 cv
259.255 192.867 259.111 192.969 259.027 193.066 cv
259.078 193.188 259.122 193.357 259.161 193.572 cv
259.2 193.788 259.219 193.969 259.219 194.113 cv
259.219 194.758 259.086 195.268 258.822 195.644 cv
258.557 196.019 258.138 196.207 257.565 196.207 cv
257.474 196.207 257.363 196.196 257.231 196.175 cv
257.099 196.152 257.008 196.132 256.958 196.111 cv
256.948 196.128 256.91 196.186 256.844 196.283 cv
256.779 196.381 256.729 196.456 256.698 196.509 cv
256.599 196.7 li
256.548 196.891 li
256.548 196.988 256.715 197.064 257.049 197.118 cv
257.12 197.138 257.289 197.168 257.555 197.206 cv
257.821 197.245 257.973 197.269 258.01 197.279 cv
258.502 197.367 258.874 197.52 259.127 197.74 cv
259.38 197.959 259.507 198.266 259.507 198.66 cv
259.507 199.136 259.34 199.486 259.006 199.713 cv
258.672 199.938 258.219 200.052 257.646 200.052 cv
257.008 197.766 mo
256.502 198.079 256.25 198.421 256.25 198.792 cv
256.25 199.021 256.358 199.187 256.574 199.29 cv
256.789 199.393 257.143 199.444 257.635 199.444 cv
258.027 199.444 258.336 199.382 258.564 199.255 cv
258.792 199.129 258.906 198.937 258.906 198.681 cv
258.906 198.462 258.828 198.291 258.672 198.17 cv
258.517 198.049 258.219 197.947 257.777 197.866 cv
257.008 197.766 li
257.57 192.545 mo
257.412 192.545 257.271 192.578 257.148 192.643 cv
257.025 192.71 256.926 192.793 256.854 192.894 cv
256.782 192.995 256.723 193.117 256.677 193.259 cv
256.631 193.4 256.601 193.537 256.586 193.671 cv
256.571 193.804 256.563 193.944 256.563 194.093 cv
256.563 195.139 256.897 195.661 257.565 195.661 cv
257.734 195.661 257.88 195.629 258.005 195.565 cv
258.129 195.501 258.226 195.42 258.293 195.322 cv
258.361 195.225 258.415 195.102 258.456 194.955 cv
258.496 194.809 258.522 194.671 258.534 194.541 cv
258.545 194.411 258.551 194.262 258.551 194.093 cv
258.551 193.062 258.224 192.545 257.57 192.545 cv
f
116.723 210.61 mo
116.416 210.61 116.159 210.561 115.95 210.464 cv
115.741 210.366 115.576 210.218 115.456 210.019 cv
115.336 209.82 115.251 209.587 115.201 209.318 cv
115.15 209.051 115.125 208.727 115.125 208.35 cv
115.125 206.69 li
115.125 205.929 115.243 205.362 115.479 204.991 cv
115.715 204.62 116.129 204.435 116.723 204.435 cv
117.32 204.435 117.736 204.619 117.97 204.988 cv
118.205 205.357 118.322 205.925 118.322 206.69 cv
118.322 208.35 li
118.322 208.727 118.296 209.051 118.246 209.318 cv
118.196 209.587 118.11 209.82 117.991 210.019 cv
117.871 210.218 117.707 210.366 117.498 210.464 cv
117.289 210.561 117.03 210.61 116.723 210.61 cv
116.723 205.001 mo
116.595 205.001 116.484 205.018 116.389 205.052 cv
116.295 205.086 116.217 205.141 116.157 205.216 cv
116.01 205.459 li
115.973 205.545 115.945 205.657 115.926 205.795 cv
115.908 205.934 115.896 206.064 115.891 206.188 cv
115.886 206.311 115.883 206.465 115.883 206.65 cv
115.883 208.391 li
115.883 208.576 115.886 208.73 115.891 208.853 cv
115.896 208.977 115.908 209.106 115.926 209.245 cv
115.945 209.384 115.973 209.495 116.01 209.581 cv
116.157 209.824 li
116.217 209.9 116.295 209.955 116.389 209.988 cv
116.484 210.023 116.595 210.039 116.723 210.039 cv
116.875 210.039 117.003 210.012 117.108 209.956 cv
117.212 209.9 117.294 209.83 117.353 209.746 cv
117.412 209.661 117.457 209.542 117.487 209.387 cv
117.517 209.231 117.537 209.083 117.545 208.941 cv
117.554 208.8 117.558 208.616 117.558 208.391 cv
117.558 206.65 li
117.558 206.425 117.554 206.24 117.545 206.099 cv
117.537 205.957 117.517 205.809 117.487 205.653 cv
117.457 205.499 117.412 205.379 117.353 205.295 cv
117.294 205.21 117.212 205.141 117.108 205.085 cv
117.003 205.029 116.875 205.001 116.723 205.001 cv
f
122.986 210.61 mo
122.413 210.61 122 210.434 121.747 210.08 cv
121.494 209.726 121.368 209.12 121.368 208.264 cv
121.368 206.751 li
121.368 206.168 121.427 205.705 121.546 205.363 cv
121.667 205.02 121.842 204.78 122.073 204.643 cv
122.304 204.504 122.61 204.435 122.991 204.435 cv
123.244 204.435 123.46 204.468 123.638 204.533 cv
123.817 204.6 123.965 204.692 124.083 204.814 cv
124.202 204.936 124.295 205.1 124.364 205.308 cv
124.433 205.515 124.481 205.744 124.508 205.995 cv
124.536 206.246 124.548 206.549 124.548 206.903 cv
124.544 207.444 li
122.126 207.444 li
122.126 208.34 li
122.126 208.96 122.186 209.398 122.305 209.654 cv
122.425 209.911 122.65 210.039 122.981 210.039 cv
123.244 210.039 123.446 209.956 123.587 209.789 cv
123.729 209.622 123.8 209.319 123.8 208.881 cv
123.8 208.466 li
124.544 208.466 li
124.544 208.8 li
124.544 209.38 124.422 209.827 124.179 210.141 cv
123.937 210.454 123.539 210.61 122.986 210.61 cv
122.986 205.001 mo
122.666 205.001 122.442 205.112 122.316 205.335 cv
122.189 205.558 122.126 205.981 122.126 206.604 cv
122.126 207.01 li
123.8 207.01 li
123.8 206.514 li
123.8 206.305 123.795 206.131 123.785 205.992 cv
123.775 205.855 123.753 205.717 123.722 205.58 cv
123.69 205.444 123.645 205.337 123.587 205.259 cv
123.531 205.182 123.451 205.119 123.35 205.072 cv
123.248 205.024 123.127 205.001 122.986 205.001 cv
f
126.415 210.515 mo
125.657 210.515 li
125.657 204.525 li
126.415 204.525 li
126.415 210.515 li
126.42 203.701 mo
125.657 203.701 li
125.657 202.67 li
126.42 202.67 li
126.42 203.701 li
f
128.565 210.605 mo
128.264 210.605 128.036 210.494 127.876 210.271 cv
127.718 210.049 127.639 209.734 127.639 209.326 cv
127.639 204.525 li
128.403 204.525 li
128.403 209.169 li
128.403 209.473 128.449 209.688 128.54 209.816 cv
128.63 209.944 128.774 210.009 128.969 210.009 cv
129.31 210.009 129.664 209.813 130.032 209.422 cv
130.032 204.525 li
130.79 204.525 li
130.79 210.515 li
130.032 210.515 li
130.032 209.852 li
129.586 210.354 129.097 210.605 128.565 210.605 cv
f
133.319 210.61 mo
132.843 210.61 132.463 210.457 132.178 210.15 cv
131.893 209.844 131.731 209.429 131.69 208.906 cv
132.328 208.714 li
132.368 209.169 132.472 209.504 132.641 209.718 cv
132.81 209.933 133.045 210.039 133.349 210.039 cv
133.613 210.039 133.82 209.962 133.971 209.807 cv
134.117 209.658 134.189 209.459 134.189 209.21 cv
134.189 209.174 li
134.179 208.776 133.936 208.379 133.46 207.98 cv
132.646 207.287 li
132.36 207.048 132.151 206.813 132.019 206.584 cv
131.891 206.362 131.827 206.102 131.827 205.806 cv
131.827 205.367 131.958 205.028 132.221 204.789 cv
132.478 204.553 132.824 204.435 133.258 204.435 cv
133.7 204.435 134.04 204.576 134.278 204.859 cv
134.515 205.143 134.648 205.525 134.674 206.008 cv
134.138 206.185 li
134.115 205.783 134.033 205.486 133.893 205.292 cv
133.753 205.099 133.551 205.001 133.289 205.001 cv
133.052 205.001 132.864 205.067 132.722 205.198 cv
132.583 205.327 132.515 205.499 132.515 205.715 cv
132.515 205.91 132.55 206.078 132.621 206.218 cv
132.692 206.357 132.822 206.509 133.01 206.671 cv
133.855 207.429 li
134.007 207.561 134.13 207.676 134.227 207.775 cv
134.323 207.875 134.425 207.998 134.533 208.145 cv
134.641 208.292 134.721 208.45 134.773 208.62 cv
134.826 208.791 134.853 208.974 134.857 209.169 cv
134.857 209.628 134.718 209.982 134.442 210.234 cv
134.166 210.485 133.792 210.61 133.319 210.61 cv
f
141.265 210.515 mo
140.546 210.515 li
140.546 205.811 li
140.546 205.483 140.496 205.256 140.395 205.128 cv
140.293 205 140.149 204.936 139.96 204.936 cv
139.579 204.942 139.203 205.149 138.831 205.558 cv
138.838 205.659 138.842 205.736 138.842 205.79 cv
138.842 210.515 li
138.134 210.515 li
138.134 205.811 li
138.134 205.483 138.082 205.256 137.977 205.128 cv
137.873 205 137.726 204.936 137.537 204.936 cv
137.156 204.942 136.784 205.149 136.419 205.558 cv
136.419 210.515 li
135.706 210.515 li
135.706 204.525 li
136.419 204.525 li
136.419 205.133 li
136.821 204.657 137.291 204.42 137.831 204.42 cv
138.33 204.42 138.643 204.683 138.771 205.209 cv
139.189 204.683 139.682 204.42 140.249 204.42 cv
140.545 204.42 140.789 204.526 140.979 204.741 cv
141.169 204.955 141.265 205.305 141.265 205.79 cv
141.265 210.515 li
f
143.865 210.61 mo
143.558 210.61 143.3 210.561 143.091 210.464 cv
142.882 210.366 142.717 210.218 142.598 210.019 cv
142.478 209.82 142.393 209.587 142.342 209.318 cv
142.291 209.051 142.267 208.727 142.267 208.35 cv
142.267 206.69 li
142.267 205.929 142.384 205.362 142.621 204.991 cv
142.857 204.62 143.271 204.435 143.865 204.435 cv
144.461 204.435 144.878 204.619 145.112 204.988 cv
145.346 205.357 145.463 205.925 145.463 206.69 cv
145.463 208.35 li
145.463 208.727 145.438 209.051 145.387 209.318 cv
145.337 209.587 145.252 209.82 145.132 210.019 cv
145.012 210.218 144.848 210.366 144.639 210.464 cv
144.43 210.561 144.171 210.61 143.865 210.61 cv
143.865 205.001 mo
143.737 205.001 143.626 205.018 143.531 205.052 cv
143.437 205.086 143.359 205.141 143.298 205.216 cv
143.152 205.459 li
143.115 205.545 143.086 205.657 143.068 205.795 cv
143.049 205.934 143.038 206.064 143.033 206.188 cv
143.028 206.311 143.025 206.465 143.025 206.65 cv
143.025 208.391 li
143.025 208.576 143.028 208.73 143.033 208.853 cv
143.038 208.977 143.049 209.106 143.068 209.245 cv
143.086 209.384 143.115 209.495 143.152 209.581 cv
143.298 209.824 li
143.359 209.9 143.437 209.955 143.531 209.988 cv
143.626 210.023 143.737 210.039 143.865 210.039 cv
144.017 210.039 144.145 210.012 144.249 209.956 cv
144.354 209.9 144.436 209.83 144.495 209.746 cv
144.553 209.661 144.598 209.542 144.628 209.387 cv
144.659 209.231 144.678 209.083 144.687 208.941 cv
144.696 208.8 144.7 208.616 144.7 208.391 cv
144.7 206.65 li
144.7 206.425 144.696 206.24 144.687 206.099 cv
144.678 205.957 144.659 205.809 144.628 205.653 cv
144.598 205.499 144.553 205.379 144.495 205.295 cv
144.436 205.21 144.354 205.141 144.249 205.085 cv
144.145 205.029 144.017 205.001 143.865 205.001 cv
f
147.84 210.61 mo
147.325 210.61 146.955 210.417 146.73 210.029 cv
146.505 209.642 146.394 208.997 146.394 208.097 cv
146.394 206.989 li
146.394 206.658 146.406 206.369 146.429 206.119 cv
146.453 205.869 146.497 205.636 146.56 205.416 cv
146.625 205.197 146.708 205.018 146.813 204.88 cv
146.917 204.741 147.053 204.633 147.218 204.554 cv
147.383 204.475 147.579 204.435 147.805 204.435 cv
148.2 204.439 148.551 204.611 148.862 204.956 cv
148.862 202.128 li
149.621 202.128 li
149.621 210.515 li
148.862 210.515 li
148.862 210.09 li
148.558 210.434 148.218 210.607 147.84 210.61 cv
147.972 205.031 mo
147.651 205.031 147.435 205.166 147.322 205.434 cv
147.209 205.702 147.152 206.14 147.152 206.746 cv
147.152 208.157 li
147.152 208.812 147.209 209.284 147.325 209.574 cv
147.439 209.864 147.662 210.009 147.992 210.009 cv
148.286 210.009 148.576 209.877 148.862 209.614 cv
148.862 205.456 li
148.558 205.173 148.261 205.031 147.972 205.031 cv
f
154.315 210.591 mo
153.907 210.591 153.626 210.479 153.47 210.254 cv
153.315 210.03 153.236 209.702 153.232 209.27 cv
153.232 205.031 li
152.509 205.031 li
152.509 204.525 li
153.232 204.525 li
153.232 202.675 li
153.991 202.675 li
153.991 204.525 li
154.988 204.525 li
154.988 205.031 li
153.991 205.031 li
153.991 209.199 li
153.991 209.503 154.027 209.711 154.097 209.824 cv
154.169 209.938 154.311 209.994 154.527 209.994 cv
154.666 209.994 154.807 209.98 154.953 209.953 cv
154.953 210.524 li
154.726 210.568 154.514 210.591 154.315 210.591 cv
f
157.299 210.61 mo
156.726 210.61 156.313 210.434 156.06 210.08 cv
155.807 209.726 155.681 209.12 155.681 208.264 cv
155.681 206.751 li
155.681 206.168 155.741 205.705 155.86 205.363 cv
155.98 205.02 156.156 204.78 156.386 204.643 cv
156.618 204.504 156.923 204.435 157.304 204.435 cv
157.557 204.435 157.773 204.468 157.952 204.533 cv
158.13 204.6 158.279 204.692 158.397 204.814 cv
158.515 204.936 158.609 205.1 158.677 205.308 cv
158.747 205.515 158.794 205.744 158.822 205.995 cv
158.849 206.246 158.862 206.549 158.862 206.903 cv
158.857 207.444 li
156.439 207.444 li
156.439 208.34 li
156.439 208.96 156.5 209.398 156.619 209.654 cv
156.739 209.911 156.963 210.039 157.294 210.039 cv
157.557 210.039 157.759 209.956 157.901 209.789 cv
158.042 209.622 158.114 209.319 158.114 208.881 cv
158.114 208.466 li
158.857 208.466 li
158.857 208.8 li
158.857 209.38 158.736 209.827 158.493 210.141 cv
158.25 210.454 157.852 210.61 157.299 210.61 cv
157.299 205.001 mo
156.979 205.001 156.755 205.112 156.629 205.335 cv
156.502 205.558 156.439 205.981 156.439 206.604 cv
156.439 207.01 li
158.114 207.01 li
158.114 206.514 li
158.114 206.305 158.109 206.131 158.098 205.992 cv
158.088 205.855 158.067 205.717 158.036 205.58 cv
158.003 205.444 157.958 205.337 157.901 205.259 cv
157.844 205.182 157.764 205.119 157.664 205.072 cv
157.562 205.024 157.441 205.001 157.299 205.001 cv
f
165.443 210.515 mo
164.724 210.515 li
164.724 205.811 li
164.724 205.483 164.673 205.256 164.573 205.128 cv
164.471 205 164.327 204.936 164.137 204.936 cv
163.756 204.942 163.38 205.149 163.009 205.558 cv
163.016 205.659 163.02 205.736 163.02 205.79 cv
163.02 210.515 li
162.312 210.515 li
162.312 205.811 li
162.312 205.483 162.259 205.256 162.155 205.128 cv
162.05 205 161.904 204.936 161.714 204.936 cv
161.334 204.942 160.961 205.149 160.597 205.558 cv
160.597 210.515 li
159.883 210.515 li
159.883 204.525 li
160.597 204.525 li
160.597 205.133 li
160.999 204.657 161.468 204.42 162.008 204.42 cv
162.507 204.42 162.821 204.683 162.949 205.209 cv
163.367 204.683 163.86 204.42 164.426 204.42 cv
164.723 204.42 164.966 204.526 165.157 204.741 cv
165.347 204.955 165.443 205.305 165.443 205.79 cv
165.443 210.515 li
f
167.32 212.487 mo
166.561 212.487 li
166.561 204.525 li
167.32 204.525 li
167.32 205.026 li
167.64 204.632 168.023 204.435 168.467 204.435 cv
168.69 204.435 168.885 204.48 169.052 204.571 cv
169.218 204.662 169.35 204.78 169.447 204.926 cv
169.542 205.07 169.62 205.251 169.679 205.467 cv
169.738 205.683 169.777 205.896 169.795 206.106 cv
169.814 206.317 169.823 206.556 169.823 206.822 cv
169.823 208.087 li
169.823 208.403 169.81 208.686 169.783 208.937 cv
169.755 209.186 169.708 209.418 169.641 209.632 cv
169.574 209.846 169.485 210.023 169.375 210.163 cv
169.266 210.303 169.128 210.413 168.963 210.492 cv
168.798 210.571 168.606 210.61 168.386 210.61 cv
167.999 210.61 167.643 210.42 167.32 210.039 cv
167.32 212.487 li
168.25 205.031 mo
167.943 205.031 167.633 205.186 167.32 205.492 cv
167.32 209.574 li
167.596 209.864 167.912 210.009 168.265 210.009 cv
168.4 210.009 168.515 209.982 168.609 209.926 cv
168.704 209.87 168.781 209.794 168.839 209.698 cv
168.898 209.602 168.945 209.471 168.978 209.306 cv
169.012 209.141 169.035 208.964 169.046 208.777 cv
169.058 208.59 169.065 208.363 169.065 208.097 cv
169.065 206.822 li
169.065 206.182 169.01 205.723 168.903 205.446 cv
168.794 205.17 168.578 205.031 168.25 205.031 cv
f
172.367 210.61 mo
172.06 210.61 171.802 210.561 171.593 210.464 cv
171.384 210.366 171.219 210.218 171.1 210.019 cv
170.98 209.82 170.895 209.587 170.844 209.318 cv
170.794 209.051 170.769 208.727 170.769 208.35 cv
170.769 206.69 li
170.769 205.929 170.886 205.362 171.123 204.991 cv
171.359 204.62 171.773 204.435 172.367 204.435 cv
172.963 204.435 173.379 204.619 173.614 204.988 cv
173.848 205.357 173.965 205.925 173.965 206.69 cv
173.965 208.35 li
173.965 208.727 173.94 209.051 173.889 209.318 cv
173.839 209.587 173.753 209.82 173.634 210.019 cv
173.514 210.218 173.35 210.366 173.141 210.464 cv
172.932 210.561 172.673 210.61 172.367 210.61 cv
172.367 205.001 mo
172.239 205.001 172.127 205.018 172.033 205.052 cv
171.939 205.086 171.861 205.141 171.8 205.216 cv
171.654 205.459 li
171.617 205.545 171.588 205.657 171.57 205.795 cv
171.551 205.934 171.54 206.064 171.535 206.188 cv
171.53 206.311 171.527 206.465 171.527 206.65 cv
171.527 208.391 li
171.527 208.576 171.53 208.73 171.535 208.853 cv
171.54 208.977 171.551 209.106 171.57 209.245 cv
171.588 209.384 171.617 209.495 171.654 209.581 cv
171.8 209.824 li
171.861 209.9 171.939 209.955 172.033 209.988 cv
172.127 210.023 172.239 210.039 172.367 210.039 cv
172.519 210.039 172.647 210.012 172.751 209.956 cv
172.856 209.9 172.938 209.83 172.997 209.746 cv
173.055 209.661 173.1 209.542 173.13 209.387 cv
173.161 209.231 173.18 209.083 173.189 208.941 cv
173.198 208.8 173.202 208.616 173.202 208.391 cv
173.202 206.65 li
173.202 206.425 173.198 206.24 173.189 206.099 cv
173.18 205.957 173.161 205.809 173.13 205.653 cv
173.1 205.499 173.055 205.379 172.997 205.295 cv
172.938 205.21 172.856 205.141 172.751 205.085 cv
172.647 205.029 172.519 205.001 172.367 205.001 cv
f
175.827 210.515 mo
175.068 210.515 li
175.068 204.525 li
175.827 204.525 li
175.827 205.351 li
176.008 205.047 176.221 204.822 176.466 204.678 cv
176.71 204.532 176.958 204.46 177.208 204.46 cv
177.338 204.465 li
177.338 205.284 li
177.231 205.241 177.109 205.219 176.974 205.219 cv
176.489 205.219 176.106 205.451 175.827 205.917 cv
175.827 210.515 li
f
181.051 210.515 mo
180.293 210.515 li
180.293 204.525 li
181.051 204.525 li
181.051 210.515 li
181.057 203.701 mo
180.293 203.701 li
180.293 202.67 li
181.057 202.67 li
181.057 203.701 li
f
185.442 210.515 mo
184.683 210.515 li
184.683 205.871 li
184.683 205.567 184.637 205.351 184.544 205.224 cv
184.452 205.096 184.307 205.031 184.112 205.031 cv
183.785 205.031 183.441 205.216 183.08 205.583 cv
183.08 210.515 li
182.321 210.515 li
182.321 204.525 li
183.08 204.525 li
183.08 205.148 li
183.522 204.673 184.002 204.435 184.522 204.435 cv
184.818 204.435 185.045 204.545 185.205 204.766 cv
185.363 204.987 185.442 205.302 185.442 205.709 cv
185.442 210.515 li
f
188.051 210.61 mo
187.779 210.61 187.544 210.57 187.348 210.489 cv
187.153 210.408 186.997 210.303 186.883 210.173 cv
186.769 210.043 186.678 209.872 186.613 209.66 cv
186.547 209.447 186.503 209.232 186.481 209.015 cv
186.459 208.798 186.449 208.54 186.449 208.243 cv
186.449 206.848 li
186.449 206.412 186.472 206.051 186.519 205.763 cv
186.566 205.475 186.65 205.228 186.769 205.021 cv
186.889 204.815 187.052 204.667 187.26 204.574 cv
187.467 204.482 187.73 204.435 188.046 204.435 cv
188.296 204.435 188.512 204.465 188.694 204.525 cv
188.876 204.587 189.024 204.67 189.136 204.776 cv
189.249 204.883 189.339 205.018 189.405 205.184 cv
189.47 205.349 189.516 205.523 189.541 205.707 cv
189.567 205.891 189.58 206.105 189.58 206.352 cv
189.58 206.635 li
188.876 206.635 li
188.876 206.352 li
188.876 205.839 188.816 205.486 188.694 205.292 cv
188.573 205.099 188.36 205.001 188.057 205.001 cv
187.712 205.001 187.485 205.123 187.374 205.368 cv
187.262 205.612 187.207 206.063 187.207 206.721 cv
187.207 208.4 li
187.207 209.014 187.267 209.44 187.386 209.68 cv
187.506 209.92 187.731 210.039 188.062 210.039 cv
188.204 210.039 188.323 210.019 188.421 209.979 cv
188.519 209.938 188.597 209.883 188.656 209.811 cv
188.715 209.741 188.761 209.643 188.795 209.519 cv
188.829 209.394 188.851 209.261 188.861 209.121 cv
188.872 208.981 188.876 208.805 188.876 208.593 cv
188.876 208.264 li
189.58 208.264 li
189.58 208.558 li
189.58 208.82 189.568 209.048 189.546 209.24 cv
189.524 209.433 189.481 209.618 189.415 209.799 cv
189.349 209.98 189.261 210.126 189.152 210.239 cv
189.043 210.352 188.895 210.442 188.71 210.51 cv
188.524 210.577 188.304 210.61 188.051 210.61 cv
f
191.43 210.515 mo
190.672 210.515 li
190.672 204.525 li
191.43 204.525 li
191.43 210.515 li
191.436 203.701 mo
190.672 203.701 li
190.672 202.67 li
191.436 202.67 li
191.436 203.701 li
f
194.036 210.61 mo
193.52 210.61 193.15 210.417 192.925 210.029 cv
192.701 209.642 192.589 208.997 192.589 208.097 cv
192.589 206.989 li
192.589 206.658 192.601 206.369 192.625 206.119 cv
192.648 205.869 192.692 205.636 192.755 205.416 cv
192.82 205.197 192.904 205.018 193.008 204.88 cv
193.113 204.741 193.249 204.633 193.414 204.554 cv
193.579 204.475 193.774 204.435 194 204.435 cv
194.395 204.439 194.747 204.611 195.057 204.956 cv
195.057 202.128 li
195.816 202.128 li
195.816 210.515 li
195.057 210.515 li
195.057 210.09 li
194.753 210.434 194.413 210.607 194.036 210.61 cv
194.167 205.031 mo
193.846 205.031 193.63 205.166 193.517 205.434 cv
193.404 205.702 193.347 206.14 193.347 206.746 cv
193.347 208.157 li
193.347 208.812 193.405 209.284 193.52 209.574 cv
193.634 209.864 193.857 210.009 194.187 210.009 cv
194.481 210.009 194.771 209.877 195.057 209.614 cv
195.057 205.456 li
194.753 205.173 194.457 205.031 194.167 205.031 cv
f
197.819 210.515 mo
197.061 210.515 li
197.061 204.525 li
197.819 204.525 li
197.819 210.515 li
197.825 203.701 mo
197.061 203.701 li
197.061 202.67 li
197.825 202.67 li
197.825 203.701 li
f
200.424 210.61 mo
199.909 210.61 199.539 210.417 199.314 210.029 cv
199.089 209.642 198.978 208.997 198.978 208.097 cv
198.978 206.989 li
198.978 206.658 198.99 206.369 199.013 206.119 cv
199.037 205.869 199.081 205.636 199.144 205.416 cv
199.208 205.197 199.292 205.018 199.397 204.88 cv
199.501 204.741 199.637 204.633 199.802 204.554 cv
199.967 204.475 200.163 204.435 200.389 204.435 cv
200.784 204.439 201.135 204.611 201.446 204.956 cv
201.446 202.128 li
202.205 202.128 li
202.205 210.515 li
201.446 210.515 li
201.446 210.09 li
201.142 210.434 200.802 210.607 200.424 210.61 cv
200.556 205.031 mo
200.235 205.031 200.019 205.166 199.906 205.434 cv
199.792 205.702 199.736 206.14 199.736 206.746 cv
199.736 208.157 li
199.736 208.812 199.793 209.284 199.909 209.574 cv
200.023 209.864 200.246 210.009 200.576 210.009 cv
200.87 210.009 201.16 209.877 201.446 209.614 cv
201.446 205.456 li
201.142 205.173 200.845 205.031 200.556 205.031 cv
f
204.244 210.605 mo
203.943 210.605 203.714 210.494 203.555 210.271 cv
203.397 210.049 203.318 209.734 203.318 209.326 cv
203.318 204.525 li
204.082 204.525 li
204.082 209.169 li
204.082 209.473 204.127 209.688 204.218 209.816 cv
204.309 209.944 204.453 210.009 204.648 210.009 cv
204.989 210.009 205.342 209.813 205.71 209.422 cv
205.71 204.525 li
206.469 204.525 li
206.469 210.515 li
205.71 210.515 li
205.71 209.852 li
205.265 210.354 204.776 210.605 204.244 210.605 cv
f
210.748 210.515 mo
209.989 210.515 li
209.989 205.871 li
209.989 205.567 209.943 205.351 209.85 205.224 cv
209.757 205.096 209.613 205.031 209.417 205.031 cv
209.09 205.031 208.747 205.216 208.385 205.583 cv
208.385 210.515 li
207.626 210.515 li
207.626 204.525 li
208.385 204.525 li
208.385 205.148 li
208.828 204.673 209.308 204.435 209.828 204.435 cv
210.123 204.435 210.351 204.545 210.51 204.766 cv
210.668 204.987 210.748 205.302 210.748 205.709 cv
210.748 210.515 li
f
213.287 210.591 mo
212.878 210.591 212.597 210.479 212.442 210.254 cv
212.287 210.03 212.208 209.702 212.204 209.27 cv
212.204 205.031 li
211.481 205.031 li
211.481 204.525 li
212.204 204.525 li
212.204 202.675 li
212.962 202.675 li
212.962 204.525 li
213.96 204.525 li
213.96 205.031 li
212.962 205.031 li
212.962 209.199 li
212.962 209.503 212.999 209.711 213.069 209.824 cv
213.14 209.938 213.283 209.994 213.499 209.994 cv
213.637 209.994 213.779 209.98 213.924 209.953 cv
213.924 210.524 li
213.698 210.568 213.486 210.591 213.287 210.591 cv
f
0 0 mo
0 86.5713 li
7.89551 92.6133 18.4355 94.2598 27.9048 90.6885 cv
75.7554 72.6406 li
83.5723 69.6924 89.7422 63.5225 92.6909 55.7051 cv
110.738 7.85449 li
111.706 5.29102 112.281 2.64746 112.5 0 cv
0 0 li
cp
.147219 .0154116 0 0 cmyk
f
600 301.404 mo
533.847 342.424 li
526.469 346.981 524.182 356.656 528.738 364.034 cv
550.951 400 li
600 400 li
600 301.404 li
cp
f
84.146 329.555 mo
82.3755 323.196 77.3477 318.265 70.9561 316.618 cv
31.9551 306.572 li
25.5635 304.926 18.7788 306.814 14.1567 311.526 cv
0 325.96 li
0 400 li
76.8457 400 li
90.3374 386.244 li
94.959 381.532 96.7158 374.712 94.9458 368.354 cv
84.146 329.555 li
cp
.657221 .328313 0 0 cmyk
f
340.386 225.472 mo
287.395 195.257 li
285.458 194.138 285.7 192.184 287.938 190.892 cv
318.427 173.288 li
320.665 171.997 324.05 171.856 325.988 172.976 cv
378.978 203.19 li
380.916 204.31 380.673 206.264 378.436 207.556 cv
347.946 225.158 li
345.708 226.45 342.323 226.591 340.386 225.472 cv
.280034 .073518 .0233463 0 cmyk
f
383.703 193.019 mo
383.703 69.3106 li
334.522 56.4395 li
325.464 51.209 li
323.385 50.0088 319.754 50.1592 317.353 51.5459 cv
308.901 56.4248 li
282.67 56.4102 li
290.438 175.833 li
290.379 176.645 290.832 177.43 291.831 178.006 cv
340.909 215.038 li
342.988 216.238 346.619 216.088 349.02 214.702 cv
381.727 195.818 li
383.112 195.019 383.78 193.983 383.703 193.019 cv
.827268 .57586 .071809 .00112917 cmyk
f
321.701 50.4052 mo
320.18 50.4423 318.601 50.8252 317.353 51.5459 cv
308.901 56.4248 li
282.67 56.4102 li
282.67 180.451 li
282.611 181.264 283.064 182.048 284.063 182.624 cv
340.909 215.038 li
341.908 215.615 343.267 215.877 344.673 215.842 cv
345.26 91.0263 li
321.701 50.4052 li
.147219 .0154116 0 0 cmyk
f
341.431 215.294 mo
343.224 216.062 345.817 216.02 347.914 215.22 cv
347.914 89.5508 li
341.431 89.5508 li
341.431 215.294 li
cp
.657221 .328313 0 0 cmyk
f
340.909 91.041 mo
284.063 58.627 li
281.984 57.4268 282.245 55.3301 284.646 53.9443 cv
317.354 35.0605 li
319.754 33.6748 323.385 33.5234 325.464 34.7236 cv
382.31 67.1377 li
384.389 68.3379 384.128 70.4346 381.728 71.8213 cv
349.02 90.7041 li
346.619 92.0908 342.988 92.2412 340.909 91.041 cv
cp
.147219 .0154116 0 0 cmyk
f
381.728 69.5205 mo
349.02 88.4043 li
346.619 89.79 342.988 89.9414 340.909 88.7402 cv
284.063 56.3271 li
283.6 56.0596 283.259 55.7451 283.026 55.4063 cv
282.312 56.5557 282.636 57.8027 284.063 58.627 cv
340.909 91.041 li
342.988 92.2412 346.619 92.0908 349.02 90.7041 cv
381.728 71.8213 li
383.593 70.7441 384.159 69.2393 383.348 68.0586 cv
383.021 68.583 382.479 69.0869 381.728 69.5205 cv
cp
.0124514 0 0 0 cmyk
f
342.518 77.9043 mo
304.671 55.9658 li
303.697 55.4033 303.819 54.4229 304.943 53.7744 cv
320.249 44.9375 li
321.372 44.2891 323.071 44.2188 324.044 44.7803 cv
361.891 66.7188 li
362.863 67.2803 362.741 68.2617 361.618 68.9102 cv
346.313 77.7471 li
345.189 78.3955 343.49 78.4658 342.518 77.9043 cv
cp
1 .866484 .240818 .0951247 cmyk
f
322.085 56.9512 mo
319.892 55.6846 li
319.757 55.6064 319.774 55.4707 319.93 55.3818 cv
322.047 54.1592 li
322.202 54.0693 322.438 54.0596 322.572 54.1367 cv
324.766 55.4033 li
324.9 55.4805 324.883 55.6162 324.728 55.7061 cv
322.61 56.9287 li
322.455 57.0186 322.22 57.0283 322.085 56.9512 cv
cp
.147219 .0154116 0 0 cmyk
f
329.412 61.1641 mo
327.219 59.8975 li
327.084 59.8193 327.101 59.6836 327.256 59.5938 cv
329.374 58.3721 li
329.529 58.2822 329.765 58.2725 329.899 58.3496 cv
332.092 59.6162 li
332.227 59.6934 332.21 59.8291 332.055 59.9189 cv
329.937 61.1416 li
329.781 61.2314 329.546 61.2412 329.412 61.1641 cv
cp
f
336.738 65.376 mo
334.545 64.1104 li
334.411 64.0322 334.428 63.8965 334.583 63.8066 cv
336.7 62.585 li
336.856 62.4951 337.091 62.4854 337.226 62.5625 cv
339.419 63.8291 li
339.554 63.9063 339.536 64.042 339.381 64.1318 cv
337.264 65.3545 li
337.108 65.4443 336.873 65.4541 336.738 65.376 cv
cp
f
344.065 69.5889 mo
341.872 68.3232 li
341.737 68.2451 341.754 68.1094 341.91 68.0195 cv
344.027 66.7969 li
344.183 66.708 344.418 66.6982 344.553 66.7754 cv
346.745 68.042 li
346.88 68.1191 346.863 68.2549 346.708 68.3447 cv
344.59 69.5674 li
344.435 69.6572 344.2 69.667 344.065 69.5889 cv
cp
f
304.671 55.9658 mo
304.716 55.9912 li
304.943 55.835 li
320.249 46.998 li
321.372 46.3496 323.071 46.2793 324.044 46.8408 cv
361.846 68.7529 li
362.742 68.1113 362.789 67.2373 361.891 66.7188 cv
324.044 44.7803 li
323.071 44.2188 321.372 44.2891 320.249 44.9375 cv
304.943 53.7744 li
303.819 54.4229 303.697 55.4033 304.671 55.9658 cv
cp
.657221 .328313 0 0 cmyk
f
355.406 115.55 mo
376.925 103.229 li
378.136 102.531 379.117 100.655 379.117 99.041 cv
379.117 91.3457 li
379.117 89.7305 378.136 88.9883 376.925 89.6875 cv
355.406 102.008 li
354.195 102.707 353.214 104.583 353.214 106.197 cv
353.214 113.893 li
353.214 115.507 354.195 116.249 355.406 115.55 cv
cp
1 .866484 .240818 .0951247 cmyk
f
377.989 89.4561 mo
378.328 89.7744 378.54 90.3184 378.54 91.0566 cv
378.54 98.752 li
378.54 100.366 377.559 102.242 376.348 102.941 cv
354.829 115.262 li
354.44 115.486 354.081 115.548 353.764 115.494 cv
354.166 115.873 354.749 115.93 355.406 115.55 cv
376.925 103.229 li
378.136 102.531 379.117 100.655 379.117 99.041 cv
379.117 91.3457 li
379.117 90.249 378.659 89.5693 377.989 89.4561 cv
cp
0 0 0 0 cmyk
f
361.878 107.19 mo
363.853 106.051 li
364.116 105.898 364.33 105.49 364.33 105.138 cv
364.33 103.029 li
364.33 102.678 364.116 102.516 363.853 102.668 cv
361.878 103.808 li
361.614 103.96 361.4 104.369 361.4 104.721 cv
361.4 106.83 li
361.4 107.182 361.614 107.344 361.878 107.19 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
368.479 103.38 mo
370.452 102.24 li
370.717 102.088 370.931 101.68 370.931 101.327 cv
370.931 99.2188 li
370.931 98.8672 370.717 98.7051 370.452 98.8574 cv
368.479 99.9971 li
368.215 100.149 368.001 100.559 368.001 100.91 cv
368.001 103.019 li
368.001 103.371 368.215 103.532 368.479 103.38 cv
cp
0 0 0 0 cmyk
f
355.406 171.157 mo
376.925 158.837 li
378.136 158.138 379.117 156.262 379.117 154.647 cv
379.117 146.952 li
379.117 145.338 378.136 144.596 376.925 145.295 cv
355.406 157.615 li
354.195 158.314 353.214 160.189 353.214 161.805 cv
353.214 169.499 li
353.214 171.114 354.195 171.856 355.406 171.157 cv
cp
1 .866484 .240818 .0951247 cmyk
f
377.989 145.063 mo
378.328 145.382 378.54 145.926 378.54 146.664 cv
378.54 154.358 li
378.54 155.974 377.559 157.849 376.348 158.548 cv
354.829 170.868 li
354.44 171.093 354.081 171.154 353.764 171.101 cv
354.166 171.479 354.749 171.536 355.406 171.157 cv
376.925 158.837 li
378.136 158.138 379.117 156.262 379.117 154.647 cv
379.117 146.952 li
379.117 145.855 378.659 145.177 377.989 145.063 cv
cp
0 0 0 0 cmyk
f
361.878 162.798 mo
363.853 161.658 li
364.116 161.506 364.33 161.097 364.33 160.745 cv
364.33 158.637 li
364.33 158.284 364.116 158.123 363.853 158.275 cv
361.878 159.415 li
361.614 159.567 361.4 159.976 361.4 160.328 cv
361.4 162.437 li
361.4 162.788 361.614 162.95 361.878 162.798 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
368.479 158.987 mo
370.452 157.848 li
370.717 157.695 370.931 157.286 370.931 156.935 cv
370.931 154.826 li
370.931 154.474 370.717 154.313 370.452 154.465 cv
368.479 155.604 li
368.215 155.757 368.001 156.165 368.001 156.518 cv
368.001 158.626 li
368.001 158.978 368.215 159.14 368.479 158.987 cv
cp
0 0 0 0 cmyk
f
355.406 198.96 mo
376.925 186.64 li
378.136 185.941 379.117 184.065 379.117 182.451 cv
379.117 174.756 li
379.117 173.141 378.136 172.398 376.925 173.098 cv
355.406 185.418 li
354.195 186.117 353.214 187.993 353.214 189.607 cv
353.214 197.303 li
353.214 198.917 354.195 199.659 355.406 198.96 cv
cp
1 .866484 .240818 .0951247 cmyk
f
377.989 172.866 mo
378.328 173.185 378.54 173.729 378.54 174.467 cv
378.54 182.162 li
378.54 183.776 377.559 185.652 376.348 186.352 cv
354.829 198.672 li
354.44 198.896 354.081 198.958 353.764 198.904 cv
354.166 199.283 354.749 199.34 355.406 198.96 cv
376.925 186.64 li
378.136 185.941 379.117 184.065 379.117 182.451 cv
379.117 174.756 li
379.117 173.659 378.659 172.979 377.989 172.866 cv
cp
0 0 0 0 cmyk
f
361.878 190.601 mo
363.853 189.461 li
364.116 189.309 364.33 188.9 364.33 188.548 cv
364.33 186.439 li
364.33 186.088 364.116 185.926 363.853 186.078 cv
361.878 187.218 li
361.614 187.37 361.4 187.779 361.4 188.131 cv
361.4 190.24 li
361.4 190.592 361.614 190.754 361.878 190.601 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
368.479 186.79 mo
370.452 185.65 li
370.717 185.498 370.931 185.09 370.931 184.737 cv
370.931 182.629 li
370.931 182.277 370.717 182.115 370.452 182.268 cv
368.479 183.407 li
368.215 183.56 368.001 183.969 368.001 184.32 cv
368.001 186.429 li
368.001 186.781 368.215 186.942 368.479 186.79 cv
cp
0 0 0 0 cmyk
f
355.406 143.354 mo
376.925 131.033 li
378.136 130.334 379.117 128.459 379.117 126.844 cv
379.117 119.148 li
379.117 117.534 378.136 116.792 376.925 117.491 cv
355.406 129.812 li
354.195 130.511 353.214 132.387 353.214 134.001 cv
353.214 141.696 li
353.214 143.311 354.195 144.053 355.406 143.354 cv
cp
1 .866484 .240818 .0951247 cmyk
f
377.989 117.26 mo
378.328 117.578 378.54 118.122 378.54 118.86 cv
378.54 126.556 li
378.54 128.17 377.559 130.046 376.348 130.745 cv
354.829 143.065 li
354.44 143.29 354.081 143.351 353.764 143.297 cv
354.166 143.676 354.749 143.733 355.406 143.354 cv
376.925 131.033 li
378.136 130.334 379.117 128.458 379.117 126.844 cv
379.117 119.148 li
379.117 118.053 378.659 117.373 377.989 117.26 cv
cp
0 0 0 0 cmyk
f
361.878 134.994 mo
363.853 133.854 li
364.116 133.702 364.33 133.293 364.33 132.941 cv
364.33 130.833 li
364.33 130.481 364.116 130.319 363.853 130.472 cv
361.878 131.611 li
361.614 131.764 361.4 132.173 361.4 132.524 cv
361.4 134.633 li
361.4 134.985 361.614 135.146 361.878 134.994 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
368.479 131.184 mo
370.452 130.044 li
370.717 129.892 370.931 129.482 370.931 129.131 cv
370.931 127.022 li
370.931 126.671 370.717 126.509 370.452 126.661 cv
368.479 127.801 li
368.215 127.953 368.001 128.362 368.001 128.714 cv
368.001 130.822 li
368.001 131.174 368.215 131.336 368.479 131.184 cv
cp
0 0 0 0 cmyk
f
336.768 107.673 mo
287.124 79.0108 li
286.012 78.3691 285.111 76.6475 285.111 75.166 cv
285.111 65.7002 li
285.111 64.2187 286.012 63.5371 287.124 64.1787 cv
336.768 92.8418 li
337.88 93.4824 338.78 95.2041 338.78 96.6855 cv
338.78 106.152 li
338.78 107.634 337.88 108.314 336.768 107.673 cv
.657221 .328313 0 0 cmyk
f
335.749 104.476 mo
335.625 104.476 335.488 104.437 335.344 104.353 cv
288.549 77.3369 li
287.985 77.0117 287.528 76.1377 287.528 75.3867 cv
287.528 68.2695 li
287.528 67.7103 287.781 67.3758 288.144 67.3758 cv
288.268 67.3758 288.405 67.4151 288.549 67.4981 cv
335.344 94.5146 li
335.907 94.8409 336.364 95.7139 336.364 96.4649 cv
336.364 103.582 li
336.364 104.142 336.111 104.476 335.749 104.476 cv
.439979 .173587 0 0 cmyk
f
298.301 79.3691 mo
291.317 75.3369 li
290.77 75.0215 290.326 74.1738 290.326 73.4434 cv
290.326 72.7139 290.77 72.3779 291.317 72.6943 cv
298.301 76.7266 li
298.848 77.042 299.292 77.8896 299.292 78.6201 cv
299.292 79.3496 298.848 79.6855 298.301 79.3691 cv
cp
.147219 .0154116 0 0 cmyk
f
304.252 81.4834 mo
304.252 82.2139 303.739 82.5098 303.107 82.1445 cv
302.475 81.7793 301.963 80.8916 301.963 80.1621 cv
301.963 79.4316 302.475 79.1357 303.107 79.501 cv
303.739 79.8662 304.252 80.7539 304.252 81.4834 cv
cp
1 .866484 .240818 .0951247 cmyk
f
308.29 83.8145 mo
308.29 84.5449 307.777 84.8408 307.146 84.4756 cv
306.513 84.1104 306 83.2236 306 82.4932 cv
306 81.7637 306.513 81.4678 307.146 81.832 cv
307.777 82.1973 308.29 83.085 308.29 83.8145 cv
cp
f
312.327 86.1465 mo
312.327 86.876 311.815 87.1719 311.183 86.8066 cv
310.551 86.4424 310.038 85.5547 310.038 84.8242 cv
310.038 84.0947 310.551 83.7988 311.183 84.1641 cv
311.815 84.5283 312.327 85.416 312.327 86.1465 cv
cp
.147219 .0154116 0 0 cmyk
f
316.365 88.4775 mo
316.365 89.207 315.853 89.5029 315.221 89.1387 cv
314.589 88.7734 314.076 87.8857 314.076 87.1563 cv
314.076 86.4258 314.589 86.1299 315.221 86.4951 cv
315.853 86.8604 316.365 87.7471 316.365 88.4775 cv
cp
1 .866484 .240818 .0951247 cmyk
f
333.375 100.391 mo
331.022 99.0322 li
330.672 98.8301 330.387 98.2852 330.387 97.8174 cv
330.387 95.3281 li
330.387 94.8594 330.672 94.6445 331.022 94.8477 cv
333.375 96.2051 li
333.727 96.4082 334.012 96.9521 334.012 97.4209 cv
334.012 99.9102 li
334.012 100.378 333.727 100.594 333.375 100.391 cv
cp
f
336.768 124.366 mo
287.124 95.7031 li
286.012 95.0624 285.111 93.3408 285.111 91.8593 cv
285.111 82.3926 li
285.111 80.9111 286.012 80.2304 287.124 80.8721 cv
336.768 109.534 li
337.88 110.176 338.78 111.897 338.78 113.379 cv
338.78 122.845 li
338.78 124.327 337.88 125.008 336.768 124.366 cv
.657221 .328313 0 0 cmyk
f
335.749 121.169 mo
335.625 121.169 335.488 121.13 335.344 121.047 cv
288.549 94.0302 li
287.985 93.7041 287.528 92.831 287.528 92.0801 cv
287.528 84.9629 li
287.528 84.4031 287.781 84.069 288.143 84.069 cv
288.268 84.069 288.405 84.1083 288.549 84.1914 cv
335.344 111.208 li
335.907 111.533 336.364 112.407 336.364 113.158 cv
336.364 120.275 li
336.364 120.835 336.111 121.169 335.749 121.169 cv
.439979 .173587 0 0 cmyk
f
298.301 96.0625 mo
291.317 92.0303 li
290.77 91.7148 290.326 90.8662 290.326 90.1367 cv
290.326 89.4072 290.77 89.0713 291.317 89.3877 cv
298.301 93.4189 li
298.848 93.7354 299.292 94.583 299.292 95.3135 cv
299.292 96.043 298.848 96.3789 298.301 96.0625 cv
cp
.147219 .0154116 0 0 cmyk
f
304.252 98.1768 mo
304.252 98.9063 303.739 99.2021 303.107 98.8379 cv
302.475 98.4727 301.963 97.585 301.963 96.8555 cv
301.963 96.125 302.475 95.8291 303.107 96.1943 cv
303.739 96.5596 304.252 97.4473 304.252 98.1768 cv
cp
0 0 0 0 cmyk
f
308.29 100.508 mo
308.29 101.238 307.777 101.534 307.146 101.169 cv
306.513 100.804 306 99.916 306 99.1865 cv
306 98.4561 306.513 98.1611 307.146 98.5254 cv
307.777 98.8906 308.29 99.7783 308.29 100.508 cv
cp
1 .866484 .240818 .0951247 cmyk
f
312.327 102.839 mo
312.327 103.569 311.815 103.865 311.183 103.5 cv
310.551 103.135 310.038 102.248 310.038 101.518 cv
310.038 100.788 310.551 100.492 311.183 100.856 cv
311.815 101.222 312.327 102.109 312.327 102.839 cv
cp
.147219 .0154116 0 0 cmyk
f
316.365 105.171 mo
316.365 105.9 315.853 106.196 315.221 105.831 cv
314.589 105.467 314.076 104.579 314.076 103.849 cv
314.076 103.119 314.589 102.823 315.221 103.188 cv
315.853 103.553 316.365 104.44 316.365 105.171 cv
cp
1 .866484 .240818 .0951247 cmyk
f
333.375 117.084 mo
331.022 115.726 li
330.672 115.522 330.387 114.979 330.387 114.51 cv
330.387 112.021 li
330.387 111.553 330.672 111.338 331.022 111.541 cv
333.375 112.898 li
333.727 113.102 334.012 113.646 334.012 114.114 cv
334.012 116.603 li
334.012 117.071 333.727 117.287 333.375 117.084 cv
cp
f
336.768 141.06 mo
287.124 112.397 li
286.012 111.755 285.111 110.034 285.111 108.553 cv
285.111 99.0859 li
285.111 97.6045 286.012 96.9238 287.124 97.5654 cv
336.768 126.227 li
337.88 126.869 338.78 128.591 338.78 130.072 cv
338.78 139.538 li
338.78 141.02 337.88 141.701 336.768 141.06 cv
.657221 .328313 0 0 cmyk
f
335.749 137.863 mo
335.624 137.863 335.488 137.823 335.344 137.74 cv
288.549 110.724 li
287.985 110.397 287.528 109.524 287.528 108.772 cv
287.528 101.656 li
287.528 101.097 287.781 100.762 288.143 100.762 cv
288.267 100.762 288.405 100.801 288.549 100.885 cv
335.344 127.901 li
335.907 128.227 336.364 129.1 336.364 129.852 cv
336.364 136.969 li
336.364 137.528 336.111 137.863 335.749 137.863 cv
.439979 .173587 0 0 cmyk
f
298.301 112.756 mo
291.317 108.724 li
290.77 108.407 290.326 107.56 290.326 106.83 cv
290.326 106.1 290.77 105.765 291.317 106.08 cv
298.301 110.112 li
298.848 110.429 299.292 111.276 299.292 112.007 cv
299.292 112.736 298.848 113.072 298.301 112.756 cv
cp
.147219 .0154116 0 0 cmyk
f
304.252 114.87 mo
304.252 115.6 303.739 115.896 303.107 115.531 cv
302.475 115.166 301.963 114.278 301.963 113.548 cv
301.963 112.818 302.475 112.522 303.107 112.888 cv
303.739 113.253 304.252 114.14 304.252 114.87 cv
cp
0 0 0 0 cmyk
f
308.29 117.201 mo
308.29 117.932 307.777 118.227 307.146 117.862 cv
306.513 117.497 306 116.609 306 115.88 cv
306 115.149 306.513 114.854 307.146 115.219 cv
307.777 115.584 308.29 116.472 308.29 117.201 cv
cp
1 .866484 .240818 .0951247 cmyk
f
312.327 119.532 mo
312.327 120.263 311.815 120.559 311.183 120.193 cv
310.551 119.828 310.038 118.94 310.038 118.211 cv
310.038 117.48 310.551 117.186 311.183 117.55 cv
311.815 117.915 312.327 118.803 312.327 119.532 cv
cp
.147219 .0154116 0 0 cmyk
f
316.365 121.864 mo
316.365 122.594 315.853 122.89 315.221 122.524 cv
314.589 122.159 314.076 121.272 314.076 120.542 cv
314.076 119.813 314.589 119.517 315.221 119.881 cv
315.853 120.246 316.365 121.134 316.365 121.864 cv
cp
1 .866484 .240818 .0951247 cmyk
f
333.375 133.777 mo
331.022 132.419 li
330.672 132.216 330.387 131.672 330.387 131.203 cv
330.387 128.715 li
330.387 128.246 330.672 128.031 331.022 128.233 cv
333.375 129.592 li
333.727 129.795 334.012 130.339 334.012 130.808 cv
334.012 133.296 li
334.012 133.765 333.727 133.979 333.375 133.777 cv
cp
f
336.768 157.753 mo
287.124 129.09 li
286.012 128.448 285.111 126.727 285.111 125.246 cv
285.111 115.779 li
285.111 114.298 286.012 113.617 287.124 114.259 cv
336.768 142.921 li
337.88 143.562 338.78 145.283 338.78 146.765 cv
338.78 156.231 li
338.78 157.713 337.88 158.394 336.768 157.753 cv
.657221 .328313 0 0 cmyk
f
335.749 154.556 mo
335.624 154.556 335.488 154.517 335.344 154.434 cv
288.549 127.416 li
287.985 127.091 287.528 126.218 287.528 125.466 cv
287.528 118.35 li
287.528 117.79 287.781 117.455 288.144 117.455 cv
288.268 117.455 288.405 117.494 288.549 117.577 cv
335.344 144.595 li
335.907 144.92 336.364 145.793 336.364 146.545 cv
336.364 153.661 li
336.364 154.221 336.111 154.556 335.749 154.556 cv
.439979 .173587 0 0 cmyk
f
298.301 129.449 mo
291.317 125.417 li
290.77 125.101 290.326 124.253 290.326 123.523 cv
290.326 122.793 290.77 122.458 291.317 122.773 cv
298.301 126.806 li
298.848 127.122 299.292 127.97 299.292 128.699 cv
299.292 129.43 298.848 129.765 298.301 129.449 cv
cp
.147219 .0154116 0 0 cmyk
f
304.252 131.563 mo
304.252 132.293 303.739 132.589 303.107 132.224 cv
302.475 131.859 301.963 130.972 301.963 130.241 cv
301.963 129.512 302.475 129.216 303.107 129.581 cv
303.739 129.945 304.252 130.833 304.252 131.563 cv
cp
1 .866484 .240818 .0951247 cmyk
f
308.29 133.895 mo
308.29 134.624 307.777 134.92 307.146 134.556 cv
306.513 134.19 306 133.303 306 132.573 cv
306 131.843 306.513 131.547 307.146 131.912 cv
307.777 132.277 308.29 133.164 308.29 133.895 cv
cp
f
312.327 136.226 mo
312.327 136.956 311.815 137.252 311.183 136.887 cv
310.551 136.521 310.038 135.634 310.038 134.904 cv
310.038 134.174 310.551 133.878 311.183 134.243 cv
311.815 134.608 312.327 135.496 312.327 136.226 cv
cp
.147219 .0154116 0 0 cmyk
f
316.365 138.557 mo
316.365 139.287 315.853 139.583 315.221 139.218 cv
314.589 138.853 314.076 137.965 314.076 137.235 cv
314.076 136.506 314.589 136.21 315.221 136.574 cv
315.853 136.939 316.365 137.827 316.365 138.557 cv
cp
1 .866484 .240818 .0951247 cmyk
f
333.375 150.47 mo
331.022 149.112 li
330.672 148.909 330.387 148.365 330.387 147.896 cv
330.387 145.408 li
330.387 144.939 330.672 144.724 331.022 144.927 cv
333.375 146.285 li
333.727 146.488 334.012 147.032 334.012 147.5 cv
334.012 149.989 li
334.012 150.458 333.727 150.673 333.375 150.47 cv
cp
.147219 .0154116 0 0 cmyk
f
336.768 174.445 mo
287.124 145.783 li
286.012 145.142 285.111 143.421 285.111 141.938 cv
285.111 132.473 li
285.111 130.991 286.012 130.31 287.124 130.951 cv
336.768 159.614 li
337.88 160.256 338.78 161.977 338.78 163.458 cv
338.78 172.925 li
338.78 174.406 337.88 175.087 336.768 174.445 cv
.657221 .328313 0 0 cmyk
f
335.749 171.249 mo
335.625 171.249 335.488 171.209 335.344 171.126 cv
288.549 144.109 li
287.985 143.784 287.528 142.911 287.528 142.159 cv
287.528 135.042 li
287.528 134.483 287.781 134.148 288.144 134.148 cv
288.268 134.148 288.405 134.188 288.549 134.271 cv
335.344 161.288 li
335.907 161.613 336.364 162.486 336.364 163.238 cv
336.364 170.354 li
336.364 170.914 336.111 171.249 335.749 171.249 cv
.439979 .173587 0 0 cmyk
f
298.301 146.142 mo
291.317 142.11 li
290.77 141.794 290.326 140.946 290.326 140.216 cv
290.326 139.486 290.77 139.15 291.317 139.467 cv
298.301 143.499 li
298.848 143.814 299.292 144.663 299.292 145.393 cv
299.292 146.123 298.848 146.458 298.301 146.142 cv
cp
.147219 .0154116 0 0 cmyk
f
304.252 148.257 mo
304.252 148.986 303.739 149.282 303.107 148.917 cv
302.475 148.552 301.963 147.665 301.963 146.935 cv
301.963 146.205 302.475 145.909 303.107 146.273 cv
303.739 146.639 304.252 147.526 304.252 148.257 cv
cp
1 .866484 .240818 .0951247 cmyk
f
308.29 150.588 mo
308.29 151.317 307.777 151.613 307.146 151.248 cv
306.513 150.884 306 149.996 306 149.266 cv
306 148.536 306.513 148.24 307.146 148.605 cv
307.777 148.97 308.29 149.857 308.29 150.588 cv
cp
0 0 0 0 cmyk
f
312.327 152.919 mo
312.327 153.648 311.815 153.944 311.183 153.58 cv
310.551 153.215 310.038 152.327 310.038 151.598 cv
310.038 150.867 310.551 150.571 311.183 150.937 cv
311.815 151.302 312.327 152.189 312.327 152.919 cv
cp
.147219 .0154116 0 0 cmyk
f
316.365 155.25 mo
316.365 155.98 315.853 156.276 315.221 155.911 cv
314.589 155.546 314.076 154.658 314.076 153.929 cv
314.076 153.198 314.589 152.902 315.221 153.268 cv
315.853 153.633 316.365 154.521 316.365 155.25 cv
cp
0 0 0 0 cmyk
f
333.375 167.163 mo
331.022 165.806 li
330.672 165.603 330.387 165.059 330.387 164.59 cv
330.387 162.101 li
330.387 161.633 330.672 161.417 331.022 161.62 cv
333.375 162.979 li
333.727 163.181 334.012 163.726 334.012 164.193 cv
334.012 166.683 li
334.012 167.15 333.727 167.366 333.375 167.163 cv
cp
.147219 .0154116 0 0 cmyk
f
336.768 191.139 mo
287.124 162.477 li
286.012 161.835 285.111 160.113 285.111 158.632 cv
285.111 149.166 li
285.111 147.685 286.012 147.003 287.124 147.645 cv
336.768 176.308 li
337.88 176.949 338.78 178.67 338.78 180.151 cv
338.78 189.618 li
338.78 191.1 337.88 191.78 336.768 191.139 cv
.657221 .328313 0 0 cmyk
f
335.749 187.942 mo
335.625 187.942 335.488 187.903 335.344 187.819 cv
288.549 160.803 li
287.985 160.478 287.528 159.605 287.528 158.852 cv
287.528 151.735 li
287.528 151.176 287.781 150.842 288.144 150.842 cv
288.268 150.842 288.405 150.881 288.549 150.964 cv
335.344 177.98 li
335.907 178.307 336.364 179.18 336.364 179.932 cv
336.364 187.048 li
336.364 187.608 336.111 187.942 335.749 187.942 cv
.439979 .173587 0 0 cmyk
f
298.301 162.835 mo
291.317 158.804 li
290.77 158.487 290.326 157.64 290.326 156.909 cv
290.326 156.18 290.77 155.844 291.317 156.16 cv
298.301 160.192 li
298.848 160.508 299.292 161.356 299.292 162.086 cv
299.292 162.815 298.848 163.151 298.301 162.835 cv
cp
.147219 .0154116 0 0 cmyk
f
304.252 164.949 mo
304.252 165.68 303.739 165.976 303.107 165.61 cv
302.475 165.245 301.963 164.357 301.963 163.628 cv
301.963 162.897 302.475 162.603 303.107 162.967 cv
303.739 163.332 304.252 164.22 304.252 164.949 cv
cp
1 .866484 .240818 .0951247 cmyk
f
308.29 167.281 mo
308.29 168.011 307.777 168.307 307.146 167.941 cv
306.513 167.576 306 166.689 306 165.959 cv
306 165.229 306.513 164.934 307.146 165.299 cv
307.777 165.663 308.29 166.551 308.29 167.281 cv
cp
f
312.327 169.612 mo
312.327 170.342 311.815 170.638 311.183 170.272 cv
310.551 169.908 310.038 169.021 310.038 168.29 cv
310.038 167.561 310.551 167.265 311.183 167.63 cv
311.815 167.994 312.327 168.882 312.327 169.612 cv
cp
.147219 .0154116 0 0 cmyk
f
316.365 171.943 mo
316.365 172.673 315.853 172.969 315.221 172.604 cv
314.589 172.239 314.076 171.352 314.076 170.622 cv
314.076 169.892 314.589 169.596 315.221 169.961 cv
315.853 170.326 316.365 171.214 316.365 171.943 cv
cp
1 .866484 .240818 .0951247 cmyk
f
333.375 183.856 mo
331.022 182.498 li
330.672 182.296 330.387 181.751 330.387 181.283 cv
330.387 178.794 li
330.387 178.326 330.672 178.11 331.022 178.313 cv
333.375 179.671 li
333.727 179.874 334.012 180.418 334.012 180.887 cv
334.012 183.376 li
334.012 183.844 333.727 184.06 333.375 183.856 cv
cp
f
336.768 207.832 mo
287.124 179.17 li
286.012 178.528 285.111 176.807 285.111 175.325 cv
285.111 165.859 li
285.111 164.377 286.012 163.696 287.124 164.338 cv
336.768 193 li
337.88 193.642 338.78 195.363 338.78 196.845 cv
338.78 206.312 li
338.78 207.793 337.88 208.474 336.768 207.832 cv
.657221 .328313 0 0 cmyk
f
335.749 204.635 mo
335.625 204.635 335.488 204.596 335.344 204.513 cv
288.549 177.496 li
287.985 177.171 287.528 176.297 287.528 175.546 cv
287.528 168.429 li
287.528 167.869 287.781 167.535 288.143 167.535 cv
288.268 167.535 288.405 167.574 288.549 167.657 cv
335.344 194.674 li
335.907 194.999 336.364 195.873 336.364 196.624 cv
336.364 203.741 li
336.364 204.301 336.111 204.635 335.749 204.635 cv
.439979 .173587 0 0 cmyk
f
298.301 179.528 mo
291.317 175.496 li
290.77 175.181 290.326 174.332 290.326 173.603 cv
290.326 172.873 290.77 172.537 291.317 172.854 cv
298.301 176.885 li
298.848 177.201 299.292 178.049 299.292 178.779 cv
299.292 179.509 298.848 179.845 298.301 179.528 cv
cp
.147219 .0154116 0 0 cmyk
f
305.528 182.546 mo
305.528 183.925 304.56 184.483 303.366 183.794 cv
302.172 183.105 301.204 181.429 301.204 180.05 cv
301.204 178.671 302.172 178.112 303.366 178.802 cv
304.56 179.491 305.528 181.168 305.528 182.546 cv
cp
0 0 0 0 cmyk
f
313.892 187.44 mo
313.892 188.17 313.379 188.466 312.747 188.101 cv
312.114 187.736 311.603 186.849 311.603 186.118 cv
311.603 185.389 312.114 185.093 312.747 185.458 cv
313.379 185.822 313.892 186.71 313.892 187.44 cv
cp
1 .866484 .240818 .0951247 cmyk
f
317.93 189.771 mo
317.93 190.501 317.417 190.797 316.785 190.433 cv
316.152 190.067 315.64 189.18 315.64 188.45 cv
315.64 187.72 316.152 187.424 316.785 187.789 cv
317.417 188.154 317.93 189.041 317.93 189.771 cv
cp
.147219 .0154116 0 0 cmyk
f
321.967 192.103 mo
321.967 192.833 321.455 193.129 320.822 192.764 cv
320.19 192.398 319.678 191.511 319.678 190.781 cv
319.678 190.051 320.19 189.755 320.822 190.12 cv
321.455 190.485 321.967 191.373 321.967 192.103 cv
cp
1 .866484 .240818 .0951247 cmyk
f
333.375 200.55 mo
331.022 199.191 li
330.672 198.988 330.387 198.444 330.387 197.977 cv
330.387 195.487 li
330.387 195.019 330.672 194.804 331.022 195.007 cv
333.375 196.364 li
333.727 196.567 334.012 197.111 334.012 197.58 cv
334.012 200.068 li
334.012 200.537 333.727 200.753 333.375 200.55 cv
cp
.147219 .0154116 0 0 cmyk
f
333.473 249.748 mo
333.306 249.748 333.136 249.706 332.979 249.617 cv
276.543 217.544 li
275.857 217.153 275.443 216.449 275.437 215.659 cv
275.43 214.87 275.833 214.159 276.512 213.758 cv
300.723 199.47 li
301.577 198.966 302.107 198.036 302.107 197.045 cv
302.107 181.298 li
302.107 180.745 302.555 180.298 303.107 180.298 cv
303.66 180.298 304.107 180.745 304.107 181.298 cv
304.107 197.045 li
304.107 198.74 303.2 200.329 301.74 201.192 cv
277.529 215.48 li
277.437 215.644 li
277.532 215.806 li
333.968 247.879 li
334.448 248.151 334.616 248.762 334.343 249.242 cv
334.159 249.566 333.82 249.748 333.473 249.748 cv
cp
.657221 .328313 0 0 cmyk
f
312.687 240.093 mo
315.354 235.441 li
325.39 241.197 li
322.723 245.848 li
312.687 240.093 li
cp
f
312.128 238.867 mo
312.124 237.658 312.969 236.186 314.014 235.578 cv
315.059 234.971 315.909 235.458 315.912 236.667 cv
315.916 237.876 315.071 239.349 314.026 239.956 cv
312.981 240.563 312.131 240.076 312.128 238.867 cv
cp
f
320.143 246.285 mo
324.464 238.749 li
340.206 247.775 li
335.884 255.312 li
320.143 246.285 li
cp
f
323.739 240.25 mo
320.343 238.303 li
318.937 239.31 317.834 241.231 317.676 242.953 cv
321.072 244.901 li
322.479 243.894 323.58 241.973 323.739 240.25 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
319.236 244.3 mo
319.231 242.341 320.6 239.955 322.293 238.97 cv
323.986 237.985 325.364 238.775 325.37 240.734 cv
325.375 242.693 324.007 245.079 322.313 246.063 cv
320.62 247.048 319.242 246.258 319.236 244.3 cv
cp
.657221 .328313 0 0 cmyk
f
315.294 237.625 mo
314.802 237.343 314.8 236.884 315.291 236.599 cv
315.781 236.313 316.577 236.312 317.069 236.593 cv
317.562 236.875 317.563 237.335 317.072 237.62 cv
316.582 237.905 315.785 237.907 315.294 237.625 cv
cp
.147219 .0154116 0 0 cmyk
f
300.482 247.469 mo
303.149 242.817 li
313.186 248.572 li
310.519 253.224 li
300.482 247.469 li
cp
.657221 .328313 0 0 cmyk
f
299.923 246.243 mo
299.92 245.034 300.764 243.562 301.81 242.954 cv
302.854 242.347 303.704 242.834 303.708 244.043 cv
303.712 245.252 302.867 246.724 301.822 247.332 cv
300.777 247.939 299.927 247.451 299.923 246.243 cv
cp
f
307.938 253.661 mo
312.26 246.124 li
328.001 255.15 li
323.68 262.688 li
307.938 253.661 li
cp
f
311.535 247.626 mo
308.139 245.678 li
306.732 246.686 305.63 248.606 305.471 250.329 cv
308.868 252.277 li
310.273 251.27 311.376 249.348 311.535 247.626 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
307.032 251.675 mo
307.026 249.716 308.395 247.33 310.089 246.346 cv
311.782 245.361 313.159 246.151 313.165 248.11 cv
313.171 250.069 311.803 252.455 310.109 253.439 cv
308.416 254.424 307.038 253.634 307.032 251.675 cv
cp
.657221 .328313 0 0 cmyk
f
303.089 245.001 mo
302.598 244.719 302.596 244.259 303.086 243.975 cv
303.576 243.689 304.373 243.687 304.865 243.969 cv
305.356 244.251 305.358 244.711 304.868 244.996 cv
304.378 245.281 303.581 245.283 303.089 245.001 cv
cp
.147219 .0154116 0 0 cmyk
f
505.551 159.924 mo
505.325 159.898 li
504.787 159.774 504.451 159.237 504.575 158.699 cv
514.328 116.356 li
514.452 115.818 514.986 115.48 515.527 115.606 cv
516.065 115.73 516.401 116.268 516.277 116.806 cv
506.524 159.148 li
506.418 159.611 506.006 159.924 505.551 159.924 cv
cp
.657221 .328313 0 0 cmyk
f
492.588 156.938 mo
492.362 156.912 li
491.824 156.788 491.488 156.251 491.612 155.713 cv
501.365 113.371 li
501.489 112.833 502.022 112.496 502.564 112.621 cv
503.103 112.745 503.438 113.282 503.314 113.82 cv
493.562 156.162 li
493.455 156.625 493.043 156.938 492.588 156.938 cv
cp
f
479.624 153.952 mo
479.398 153.927 li
478.86 153.803 478.524 153.266 478.648 152.728 cv
488.401 110.385 li
488.525 109.847 489.058 109.512 489.601 109.635 cv
490.139 109.759 490.475 110.296 490.351 110.834 cv
480.598 153.177 li
480.491 153.64 480.079 153.952 479.624 153.952 cv
cp
f
487.035 133.005 mo
481.815 131.781 li
484.455 120.517 li
489.675 121.74 li
487.035 133.005 li
cp
f
486.021 133.891 mo
484.863 134.24 483.211 133.854 482.33 133.025 cv
481.448 132.198 481.672 131.244 482.829 130.895 cv
483.986 130.545 485.639 130.933 486.521 131.76 cv
487.401 132.587 487.178 133.541 486.021 133.891 cv
cp
f
490.833 124.088 mo
482.375 122.105 li
486.516 104.438 li
494.975 106.421 li
490.833 124.088 li
cp
f
484.021 122.37 mo
483.127 126.182 li
484.495 127.24 486.651 127.746 488.348 127.405 cv
489.241 123.594 li
487.873 122.534 485.717 122.029 484.021 122.37 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
489.189 125.524 mo
487.314 126.091 484.637 125.463 483.209 124.122 cv
481.78 122.781 482.143 121.235 484.018 120.669 cv
485.894 120.103 488.571 120.73 489.999 122.07 cv
491.428 123.411 491.065 124.958 489.189 125.524 cv
cp
.657221 .328313 0 0 cmyk
f
483.925 131.213 mo
483.795 131.766 483.354 131.898 482.941 131.51 cv
482.528 131.122 482.298 130.359 482.427 129.808 cv
482.557 129.256 482.997 129.122 483.41 129.511 cv
483.823 129.898 484.054 130.661 483.925 131.213 cv
cp
.147219 .0154116 0 0 cmyk
f
499.055 140.162 mo
493.835 138.938 li
496.476 127.674 li
501.695 128.897 li
499.055 140.162 li
cp
.657221 .328313 0 0 cmyk
f
498.041 141.049 mo
496.884 141.398 495.231 141.011 494.35 140.184 cv
493.469 139.355 493.692 138.401 494.85 138.052 cv
496.007 137.703 497.659 138.09 498.54 138.917 cv
499.422 139.745 499.198 140.699 498.041 141.049 cv
cp
f
502.854 131.245 mo
494.395 129.263 li
498.536 111.596 li
506.994 113.578 li
502.854 131.245 li
cp
f
496.041 129.527 mo
495.147 133.339 li
496.516 134.398 498.672 134.903 500.367 134.563 cv
501.261 130.751 li
499.894 129.692 497.736 129.187 496.041 129.527 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
501.21 132.682 mo
499.335 133.248 496.657 132.62 495.229 131.279 cv
493.801 129.938 494.163 128.393 496.038 127.826 cv
497.913 127.26 500.591 127.888 502.02 129.229 cv
503.447 130.569 503.085 132.115 501.21 132.682 cv
cp
.657221 .328313 0 0 cmyk
f
495.944 138.371 mo
495.815 138.923 495.375 139.056 494.962 138.668 cv
494.548 138.279 494.317 137.518 494.447 136.965 cv
494.576 136.413 495.017 136.28 495.43 136.668 cv
495.844 137.057 496.074 137.818 495.944 138.371 cv
cp
.147219 .0154116 0 0 cmyk
f
511.209 147.265 mo
505.989 146.041 li
508.63 134.776 li
513.85 136 li
511.209 147.265 li
cp
.657221 .328313 0 0 cmyk
f
510.195 148.151 mo
509.038 148.501 507.386 148.113 506.504 147.286 cv
505.623 146.458 505.847 145.504 507.004 145.154 cv
508.161 144.805 509.813 145.192 510.694 146.02 cv
511.576 146.848 511.353 147.802 510.195 148.151 cv
cp
f
515.008 138.348 mo
506.549 136.365 li
510.69 118.698 li
519.148 120.681 li
515.008 138.348 li
cp
f
508.195 136.63 mo
507.302 140.441 li
508.67 141.501 510.826 142.006 512.521 141.665 cv
513.415 137.854 li
512.048 136.795 509.891 136.289 508.195 136.63 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
513.364 139.784 mo
511.489 140.351 508.812 139.723 507.383 138.382 cv
505.955 137.041 506.317 135.495 508.192 134.929 cv
510.067 134.362 512.745 134.99 514.174 136.331 cv
515.602 137.672 515.239 139.218 513.364 139.784 cv
cp
.657221 .328313 0 0 cmyk
f
508.099 145.474 mo
507.97 146.025 507.529 146.158 507.116 145.771 cv
506.702 145.382 506.472 144.62 506.602 144.067 cv
506.731 143.516 507.171 143.383 507.585 143.771 cv
507.998 144.159 508.229 144.921 508.099 145.474 cv
cp
.147219 .0154116 0 0 cmyk
f
425.982 346.556 mo
309.84 279.501 li
306.555 277.604 306.967 274.291 310.761 272.101 cv
389.845 226.457 li
393.638 224.267 399.377 224.028 402.662 225.926 cv
518.805 292.98 li
522.09 294.877 521.678 298.19 517.885 300.381 cv
438.8 346.024 li
435.007 348.215 429.268 348.453 425.982 346.556 cv
cp
.280034 .073518 .0233463 0 cmyk
f
546.007 174.194 mo
429.865 107.14 li
428.516 106.36 427.146 106.24 425.929 106.657 cv
425.937 106.645 li
425.726 106.725 li
425.674 106.744 li
421.477 108.35 li
425.244 110.194 li
425.189 110.399 li
406.272 196.512 li
405.325 200.821 407.222 205.853 410.507 207.749 cv
523.855 273.191 li
523.451 277.994 li
528.039 276.217 li
529.58 275.495 530.813 273.865 531.324 271.544 cv
550.241 185.432 li
551.188 181.122 549.292 176.091 546.007 174.194 cv
cp
1 .866484 .240818 .0951247 cmyk
f
546.007 174.194 mo
429.865 107.14 li
428.516 106.36 427.146 106.24 425.929 106.657 cv
425.937 106.645 li
425.726 106.725 li
425.674 106.744 li
421.477 108.35 li
425.244 110.194 li
425.189 110.399 li
412.722 167.152 li
469.549 211.426 li
549.676 178.822 li
548.905 176.826 547.626 175.129 546.007 174.194 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
541.628 187.431 mo
550.469 183.667 li
550.631 180.243 549.214 176.705 546.887 174.813 cv
532.893 180.701 li
541.628 187.431 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
519.417 277.538 mo
403.274 210.483 li
399.989 208.587 398.093 203.556 399.04 199.246 cv
417.957 113.134 li
418.904 108.824 422.335 106.868 425.62 108.766 cv
541.763 175.82 li
545.048 177.717 546.944 182.748 545.997 187.058 cv
527.08 273.17 li
526.133 277.479 522.702 279.435 519.417 277.538 cv
cp
.147219 .0154116 0 0 cmyk
f
516.899 271.133 mo
407.67 208.1 li
404.663 206.364 402.928 201.76 403.795 197.816 cv
421.105 119.017 li
421.972 115.073 425.111 113.283 428.118 115.02 cv
537.348 178.052 li
540.354 179.788 542.089 184.392 541.223 188.336 cv
523.911 267.135 li
523.045 271.079 519.905 272.868 516.899 271.133 cv
cp
0 0 0 0 cmyk
f
516.899 271.133 mo
407.67 208.1 li
404.663 206.364 402.928 201.76 403.795 197.816 cv
421.105 119.017 li
421.972 115.073 425.111 113.283 428.118 115.02 cv
537.348 178.052 li
540.354 179.788 542.089 184.392 541.223 188.336 cv
523.911 267.135 li
523.045 271.079 519.905 272.868 516.899 271.133 cv
cp
f
521.021 280.458 mo
505.145 278.362 li
402.662 219.194 li
399.377 217.297 393.638 217.535 389.845 219.726 cv
317.227 261.637 li
307.627 260.369 li
307.627 265.815 li
307.636 265.816 li
307.573 267.075 308.29 268.286 309.84 269.182 cv
425.982 336.236 li
429.268 338.133 435.007 337.895 438.8 335.705 cv
517.885 290.061 li
520.019 288.828 521.082 287.241 521.021 285.75 cv
521.021 280.458 li
cp
1 .866484 .240818 .0951247 cmyk
f
444.019 243.071 mo
436.738 238.867 li
356.689 238.867 li
317.227 261.637 li
307.627 260.369 li
307.627 265.815 li
307.636 265.816 li
307.573 267.075 308.29 268.286 309.84 269.182 cv
425.982 336.236 li
427.718 337.238 430.14 337.639 432.598 337.476 cv
444.019 243.071 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
311.887 260.932 mo
307.627 260.369 li
307.627 265.815 li
307.636 265.816 li
307.573 267.075 308.29 268.286 309.84 269.182 cv
311.887 270.363 li
311.887 260.932 li
cp
.657221 .328313 0 0 cmyk
f
427.151 336.779 mo
430.266 337.96 434.719 337.703 438.043 336.104 cv
438.043 323.954 li
427.151 323.954 li
427.151 336.779 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
425.982 330.796 mo
309.84 263.741 li
306.555 261.844 306.967 258.53 310.761 256.34 cv
389.845 210.696 li
393.638 208.506 399.377 208.269 402.662 210.165 cv
518.805 277.22 li
522.09 279.116 521.678 282.43 517.885 284.62 cv
438.8 330.265 li
435.007 332.454 429.268 332.692 425.982 330.796 cv
cp
.147219 .0154116 0 0 cmyk
f
517.885 282.631 mo
438.8 328.274 li
435.007 330.465 429.268 330.703 425.982 328.807 cv
309.84 261.751 li
308.763 261.13 308.091 260.354 307.798 259.518 cv
307.283 261.071 307.938 262.643 309.84 263.741 cv
425.982 330.796 li
429.268 332.692 435.007 332.454 438.8 330.265 cv
517.885 284.62 li
520.435 283.148 521.448 281.17 520.847 279.454 cv
520.473 280.586 519.482 281.708 517.885 282.631 cv
cp
0 0 0 0 cmyk
f
359.236 241.542 mo
353.981 238.508 li
353.56 238.265 353.613 237.839 354.1 237.558 cv
360.303 233.977 li
360.79 233.695 361.527 233.664 361.949 233.908 cv
367.204 236.942 li
367.626 237.186 367.573 237.611 367.086 237.893 cv
360.883 241.474 li
360.396 241.755 359.659 241.785 359.236 241.542 cv
cp
1 .866484 .240818 .0951247 cmyk
f
367.353 246.228 mo
362.097 243.193 li
361.675 242.949 361.729 242.524 362.215 242.243 cv
368.418 238.662 li
368.905 238.381 369.643 238.35 370.064 238.594 cv
375.319 241.627 li
375.741 241.871 375.688 242.297 375.201 242.578 cv
368.998 246.159 li
368.511 246.44 367.774 246.471 367.353 246.228 cv
cp
f
375.468 250.912 mo
370.212 247.879 li
369.79 247.635 369.844 247.209 370.33 246.928 cv
376.533 243.347 li
377.021 243.065 377.758 243.035 378.18 243.279 cv
383.435 246.313 li
383.856 246.557 383.804 246.981 383.316 247.263 cv
377.113 250.845 li
376.626 251.126 375.89 251.156 375.468 250.912 cv
cp
f
386.691 247.043 mo
381.437 244.009 li
381.015 243.766 381.067 243.34 381.555 243.059 cv
386.761 240.053 li
387.248 239.771 387.985 239.741 388.407 239.984 cv
393.662 243.019 li
394.084 243.262 394.031 243.688 393.544 243.969 cv
388.337 246.975 li
387.85 247.256 387.113 247.287 386.691 247.043 cv
cp
f
394.807 251.729 mo
389.552 248.694 li
389.13 248.451 389.183 248.025 389.67 247.744 cv
394.876 244.738 li
395.363 244.457 396.101 244.426 396.522 244.67 cv
401.777 247.704 li
402.199 247.947 402.146 248.373 401.659 248.654 cv
396.452 251.66 li
395.965 251.941 395.229 251.972 394.807 251.729 cv
cp
f
402.922 256.414 mo
397.667 253.38 li
397.245 253.137 397.298 252.711 397.785 252.43 cv
402.991 249.424 li
403.479 249.142 404.216 249.111 404.638 249.355 cv
409.893 252.389 li
410.314 252.633 410.262 253.059 409.774 253.34 cv
404.567 256.346 li
404.08 256.627 403.344 256.657 402.922 256.414 cv
cp
f
411.037 261.1 mo
405.782 258.065 li
405.36 257.821 405.413 257.396 405.9 257.115 cv
411.106 254.108 li
411.594 253.827 412.331 253.797 412.753 254.04 cv
418.008 257.074 li
418.43 257.318 418.377 257.743 417.89 258.024 cv
412.683 261.031 li
412.195 261.313 411.459 261.343 411.037 261.1 cv
cp
f
419.152 265.784 mo
413.897 262.751 li
413.476 262.507 413.528 262.081 414.016 261.8 cv
419.222 258.794 li
419.709 258.513 420.446 258.482 420.868 258.726 cv
426.123 261.76 li
426.545 262.003 426.492 262.429 426.005 262.71 cv
420.798 265.716 li
420.311 265.998 419.574 266.028 419.152 265.784 cv
cp
f
427.268 270.47 mo
422.013 267.436 li
421.591 267.192 421.644 266.767 422.131 266.485 cv
427.337 263.479 li
427.824 263.198 428.562 263.168 428.983 263.411 cv
434.238 266.445 li
434.66 266.688 434.607 267.114 434.12 267.396 cv
428.913 270.401 li
428.426 270.683 427.689 270.714 427.268 270.47 cv
cp
f
435.383 275.155 mo
430.128 272.121 li
429.706 271.878 429.759 271.452 430.246 271.171 cv
435.452 268.165 li
435.939 267.884 436.677 267.853 437.099 268.097 cv
442.354 271.131 li
442.775 271.374 442.723 271.8 442.235 272.081 cv
437.028 275.087 li
436.541 275.368 435.805 275.398 435.383 275.155 cv
cp
f
443.498 279.841 mo
438.243 276.807 li
437.821 276.563 437.874 276.138 438.361 275.856 cv
443.567 272.85 li
444.055 272.568 444.792 272.538 445.214 272.782 cv
450.469 275.815 li
450.891 276.06 450.838 276.485 450.351 276.767 cv
445.144 279.772 li
444.656 280.054 443.92 280.084 443.498 279.841 cv
cp
f
451.613 284.525 mo
446.358 281.492 li
445.937 281.248 445.989 280.823 446.477 280.542 cv
451.683 277.535 li
452.17 277.254 452.907 277.224 453.329 277.467 cv
458.584 280.501 li
459.006 280.745 458.953 281.17 458.466 281.451 cv
453.259 284.458 li
452.771 284.739 452.035 284.77 451.613 284.525 cv
cp
f
459.729 289.211 mo
454.474 286.178 li
454.052 285.934 454.104 285.508 454.592 285.227 cv
459.798 282.221 li
460.285 281.939 461.022 281.909 461.444 282.152 cv
466.699 285.187 li
467.121 285.43 467.068 285.855 466.581 286.137 cv
461.374 289.143 li
460.888 289.424 460.15 289.455 459.729 289.211 cv
cp
f
398.648 244.825 mo
393.394 241.791 li
392.972 241.548 393.024 241.122 393.512 240.841 cv
398.719 237.834 li
399.206 237.553 399.942 237.522 400.364 237.767 cv
405.619 240.8 li
406.041 241.044 405.988 241.47 405.501 241.751 cv
400.295 244.757 li
399.808 245.038 399.07 245.068 398.648 244.825 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
390.412 240.069 mo
385.157 237.036 li
384.735 236.792 384.788 236.366 385.275 236.085 cv
390.482 233.079 li
390.97 232.798 391.706 232.768 392.128 233.011 cv
397.383 236.045 li
397.805 236.288 397.752 236.714 397.265 236.995 cv
392.059 240.001 li
391.571 240.283 390.834 240.313 390.412 240.069 cv
cp
f
382.162 235.307 mo
370.845 228.772 li
370.423 228.528 370.476 228.104 370.963 227.822 cv
376.169 224.815 li
376.656 224.534 377.394 224.504 377.815 224.747 cv
389.134 231.282 li
389.556 231.525 389.502 231.951 389.015 232.232 cv
383.809 235.238 li
383.321 235.52 382.584 235.55 382.162 235.307 cv
cp
1 .866484 .240818 .0951247 cmyk
f
387.929 229.515 mo
378.744 224.211 li
378.322 223.968 378.375 223.542 378.862 223.261 cv
384.069 220.255 li
384.557 219.974 385.293 219.943 385.715 220.187 cv
394.899 225.489 li
395.322 225.733 395.269 226.158 394.781 226.439 cv
389.575 229.446 li
389.088 229.728 388.351 229.758 387.929 229.515 cv
cp
f
406.764 249.511 mo
401.509 246.477 li
401.087 246.232 401.14 245.808 401.627 245.526 cv
406.834 242.52 li
407.321 242.238 408.058 242.208 408.479 242.451 cv
413.734 245.485 li
414.156 245.729 414.104 246.154 413.616 246.436 cv
408.41 249.442 li
407.923 249.724 407.186 249.754 406.764 249.511 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
414.879 254.195 mo
409.624 251.162 li
409.202 250.918 409.255 250.492 409.742 250.211 cv
414.949 247.205 li
415.437 246.924 416.173 246.894 416.595 247.137 cv
421.85 250.171 li
422.271 250.414 422.219 250.84 421.731 251.121 cv
416.525 254.127 li
416.038 254.408 415.301 254.439 414.879 254.195 cv
cp
1 .866484 .240818 .0951247 cmyk
f
422.994 258.881 mo
417.739 255.847 li
417.317 255.604 417.37 255.178 417.857 254.896 cv
423.064 251.891 li
423.552 251.609 424.288 251.579 424.71 251.822 cv
429.965 254.856 li
430.387 255.1 430.334 255.525 429.847 255.807 cv
424.641 258.813 li
424.153 259.094 423.416 259.125 422.994 258.881 cv
cp
f
431.109 263.566 mo
425.854 260.532 li
425.433 260.289 425.485 259.863 425.973 259.582 cv
431.18 256.576 li
431.667 256.295 432.403 256.264 432.825 256.508 cv
438.08 259.542 li
438.502 259.785 438.449 260.211 437.962 260.492 cv
432.756 263.498 li
432.269 263.779 431.531 263.81 431.109 263.566 cv
cp
f
439.225 268.252 mo
433.97 265.218 li
433.548 264.974 433.601 264.549 434.088 264.268 cv
439.295 261.261 li
439.782 260.979 440.519 260.949 440.94 261.193 cv
446.195 264.227 li
446.617 264.471 446.564 264.896 446.077 265.178 cv
440.871 268.184 li
440.384 268.465 439.646 268.495 439.225 268.252 cv
cp
f
447.34 272.937 mo
442.085 269.903 li
441.663 269.659 441.716 269.234 442.203 268.953 cv
447.41 265.946 li
447.897 265.665 448.634 265.635 449.056 265.878 cv
454.311 268.912 li
454.732 269.156 454.68 269.581 454.192 269.862 cv
448.986 272.869 li
448.499 273.15 447.762 273.181 447.34 272.937 cv
cp
f
455.455 277.622 mo
450.2 274.588 li
449.778 274.345 449.831 273.919 450.318 273.638 cv
455.525 270.632 li
456.013 270.351 456.749 270.32 457.171 270.563 cv
462.426 273.598 li
462.848 273.841 462.795 274.267 462.308 274.548 cv
457.102 277.554 li
456.614 277.835 455.877 277.866 455.455 277.622 cv
cp
f
463.57 282.308 mo
458.315 279.273 li
457.894 279.03 457.946 278.604 458.434 278.323 cv
463.641 275.317 li
464.128 275.036 464.864 275.005 465.286 275.249 cv
470.541 278.283 li
470.964 278.526 470.91 278.952 470.423 279.233 cv
465.217 282.239 li
464.729 282.521 463.992 282.551 463.57 282.308 cv
cp
f
471.686 286.993 mo
466.431 283.959 li
466.009 283.716 466.062 283.29 466.549 283.009 cv
471.756 280.003 li
472.243 279.722 472.979 279.69 473.401 279.935 cv
478.656 282.968 li
479.079 283.212 479.025 283.638 478.538 283.919 cv
473.332 286.925 li
472.845 287.206 472.107 287.236 471.686 286.993 cv
cp
f
486.112 295.322 mo
474.646 288.703 li
474.225 288.459 474.277 288.033 474.765 287.752 cv
479.972 284.746 li
480.459 284.465 481.196 284.435 481.618 284.678 cv
493.084 291.298 li
493.506 291.541 493.453 291.967 492.966 292.248 cv
487.759 295.254 li
487.271 295.535 486.534 295.566 486.112 295.322 cv
cp
f
501.912 286.201 mo
492.234 280.613 li
491.813 280.37 491.865 279.944 492.353 279.663 cv
497.56 276.657 li
498.047 276.376 498.783 276.345 499.205 276.589 cv
508.883 282.176 li
509.305 282.42 509.252 282.845 508.765 283.126 cv
503.559 286.133 li
503.071 286.414 502.334 286.444 501.912 286.201 cv
cp
f
420.976 248.594 mo
415.721 245.56 li
415.298 245.316 415.352 244.891 415.839 244.609 cv
421.045 241.604 li
421.532 241.322 422.27 241.291 422.691 241.535 cv
427.946 244.568 li
428.368 244.813 428.315 245.238 427.828 245.52 cv
422.621 248.525 li
422.134 248.807 421.397 248.837 420.976 248.594 cv
cp
f
412.658 243.792 mo
407.403 240.758 li
406.981 240.514 407.034 240.089 407.521 239.808 cv
412.729 236.801 li
413.215 236.52 413.952 236.489 414.374 236.733 cv
419.629 239.767 li
420.051 240.011 419.998 240.436 419.511 240.718 cv
414.304 243.724 li
413.817 244.005 413.08 244.035 412.658 243.792 cv
cp
f
404.341 238.99 mo
399.086 235.956 li
398.664 235.712 398.717 235.287 399.204 235.006 cv
404.411 231.999 li
404.898 231.718 405.635 231.688 406.057 231.931 cv
411.313 234.965 li
411.734 235.209 411.681 235.634 411.194 235.915 cv
405.987 238.922 li
405.5 239.203 404.763 239.233 404.341 238.99 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
396.023 234.188 mo
390.769 231.154 li
390.347 230.91 390.399 230.484 390.887 230.203 cv
396.094 227.197 li
396.581 226.916 397.318 226.886 397.74 227.129 cv
402.995 230.163 li
403.417 230.406 403.364 230.832 402.877 231.113 cv
397.67 234.12 li
397.183 234.401 396.445 234.432 396.023 234.188 cv
cp
1 .866484 .240818 .0951247 cmyk
f
429.091 253.279 mo
423.836 250.245 li
423.413 250.001 423.467 249.576 423.954 249.295 cv
429.16 246.288 li
429.647 246.007 430.385 245.977 430.807 246.22 cv
436.062 249.254 li
436.483 249.498 436.431 249.923 435.943 250.204 cv
430.736 253.211 li
430.249 253.492 429.513 253.522 429.091 253.279 cv
cp
f
437.206 257.964 mo
431.951 254.931 li
431.528 254.687 431.582 254.261 432.069 253.979 cv
437.275 250.974 li
437.763 250.692 438.5 250.662 438.922 250.905 cv
444.177 253.939 li
444.599 254.183 444.546 254.608 444.059 254.89 cv
438.852 257.896 li
438.364 258.178 437.628 258.208 437.206 257.964 cv
cp
f
445.321 262.649 mo
440.066 259.615 li
439.644 259.372 439.697 258.946 440.185 258.665 cv
445.391 255.659 li
445.878 255.378 446.615 255.348 447.037 255.591 cv
452.292 258.625 li
452.714 258.868 452.661 259.294 452.174 259.575 cv
446.967 262.581 li
446.479 262.862 445.743 262.894 445.321 262.649 cv
cp
f
453.437 267.335 mo
448.182 264.301 li
447.759 264.058 447.813 263.632 448.3 263.351 cv
453.506 260.345 li
453.993 260.063 454.73 260.032 455.152 260.276 cv
460.407 263.311 li
460.829 263.554 460.776 263.979 460.289 264.261 cv
455.082 267.267 li
454.595 267.548 453.858 267.578 453.437 267.335 cv
cp
f
461.552 272.021 mo
456.297 268.986 li
455.875 268.743 455.928 268.317 456.415 268.036 cv
461.621 265.029 li
462.108 264.748 462.846 264.718 463.268 264.962 cv
468.522 267.995 li
468.944 268.239 468.892 268.665 468.404 268.946 cv
463.197 271.952 li
462.71 272.233 461.974 272.264 461.552 272.021 cv
cp
f
469.667 276.706 mo
464.412 273.672 li
463.99 273.428 464.043 273.003 464.53 272.722 cv
469.736 269.715 li
470.224 269.434 470.961 269.403 471.383 269.646 cv
476.638 272.681 li
477.06 272.925 477.007 273.35 476.52 273.631 cv
471.313 276.638 li
470.825 276.919 470.089 276.949 469.667 276.706 cv
cp
f
477.782 281.391 mo
472.527 278.357 li
472.105 278.113 472.158 277.688 472.646 277.406 cv
477.852 274.4 li
478.339 274.119 479.076 274.089 479.498 274.332 cv
484.753 277.366 li
485.175 277.609 485.122 278.035 484.635 278.316 cv
479.428 281.322 li
478.94 281.604 478.204 281.635 477.782 281.391 cv
cp
f
485.897 286.076 mo
480.643 283.042 li
480.221 282.799 480.273 282.373 480.761 282.092 cv
485.967 279.086 li
486.454 278.805 487.191 278.774 487.613 279.018 cv
492.868 282.052 li
493.29 282.295 493.237 282.721 492.75 283.002 cv
487.543 286.008 li
487.056 286.289 486.319 286.32 485.897 286.076 cv
cp
f
494.013 290.762 mo
488.758 287.728 li
488.336 287.484 488.389 287.059 488.876 286.777 cv
494.082 283.771 li
494.569 283.49 495.307 283.459 495.729 283.703 cv
500.983 286.737 li
501.405 286.98 501.353 287.406 500.865 287.688 cv
495.658 290.693 li
495.171 290.975 494.435 291.005 494.013 290.762 cv
cp
f
416.702 237.005 mo
411.447 233.971 li
411.025 233.728 411.078 233.302 411.565 233.021 cv
416.772 230.015 li
417.259 229.732 417.996 229.702 418.418 229.946 cv
423.673 232.979 li
424.095 233.224 424.042 233.649 423.555 233.931 cv
418.348 236.937 li
417.861 237.218 417.124 237.248 416.702 237.005 cv
cp
f
408.627 232.343 mo
403.372 229.309 li
402.95 229.065 403.003 228.64 403.49 228.358 cv
408.697 225.353 li
409.185 225.071 409.921 225.04 410.344 225.284 cv
415.599 228.318 li
416.021 228.562 415.967 228.987 415.48 229.269 cv
410.273 232.274 li
409.786 232.556 409.049 232.586 408.627 232.343 cv
cp
f
400.553 227.681 mo
395.297 224.646 li
394.875 224.403 394.929 223.978 395.415 223.696 cv
400.622 220.69 li
401.109 220.409 401.847 220.378 402.269 220.622 cv
407.523 223.656 li
407.945 223.899 407.893 224.325 407.405 224.606 cv
402.198 227.612 li
401.711 227.894 400.975 227.924 400.553 227.681 cv
cp
f
392.478 223.019 mo
387.223 219.984 li
386.801 219.741 386.854 219.315 387.341 219.034 cv
392.548 216.028 li
393.034 215.747 393.771 215.716 394.193 215.96 cv
399.448 218.994 li
399.87 219.237 399.817 219.663 399.33 219.944 cv
394.123 222.95 li
393.637 223.231 392.899 223.262 392.478 223.019 cv
cp
f
400.781 218.225 mo
395.525 215.19 li
395.104 214.947 395.157 214.521 395.644 214.24 cv
397.365 213.246 li
397.853 212.965 398.59 212.935 399.012 213.179 cv
404.267 216.212 li
404.688 216.456 404.636 216.881 404.148 217.163 cv
402.427 218.156 li
401.939 218.438 401.203 218.468 400.781 218.225 cv
cp
f
411.318 224.309 mo
406.063 221.274 li
405.642 221.031 405.694 220.605 406.182 220.324 cv
407.903 219.33 li
408.391 219.049 409.127 219.019 409.549 219.263 cv
414.804 222.296 li
415.226 222.54 415.173 222.965 414.686 223.246 cv
412.965 224.24 li
412.478 224.521 411.74 224.552 411.318 224.309 cv
cp
f
419.359 228.951 mo
414.104 225.917 li
413.683 225.674 413.735 225.248 414.223 224.967 cv
415.944 223.973 li
416.432 223.691 417.168 223.661 417.59 223.905 cv
422.846 226.938 li
423.268 227.183 423.214 227.607 422.728 227.89 cv
421.006 228.883 li
420.519 229.164 419.781 229.194 419.359 228.951 cv
cp
f
427.401 233.594 mo
422.146 230.56 li
421.724 230.316 421.777 229.891 422.265 229.609 cv
423.985 228.615 li
424.473 228.334 425.21 228.304 425.632 228.548 cv
430.887 231.581 li
431.309 231.825 431.256 232.25 430.769 232.532 cv
429.047 233.525 li
428.56 233.807 427.823 233.837 427.401 233.594 cv
cp
f
435.442 238.236 mo
430.188 235.202 li
429.766 234.959 429.818 234.533 430.306 234.252 cv
432.026 233.258 li
432.514 232.977 433.251 232.946 433.673 233.19 cv
438.928 236.224 li
439.35 236.468 439.297 236.894 438.81 237.175 cv
437.088 238.168 li
436.602 238.449 435.864 238.479 435.442 238.236 cv
cp
f
480.335 264.155 mo
475.08 261.121 li
474.658 260.878 474.711 260.452 475.198 260.171 cv
476.92 259.177 li
477.407 258.896 478.144 258.865 478.565 259.109 cv
483.82 262.143 li
484.242 262.387 484.189 262.813 483.702 263.094 cv
481.981 264.087 li
481.494 264.368 480.757 264.398 480.335 264.155 cv
cp
f
488.376 268.798 mo
483.121 265.764 li
482.699 265.521 482.752 265.095 483.239 264.813 cv
484.961 263.819 li
485.448 263.538 486.185 263.508 486.606 263.752 cv
491.862 266.785 li
492.284 267.029 492.23 267.455 491.744 267.736 cv
490.022 268.729 li
489.535 269.011 488.798 269.041 488.376 268.798 cv
cp
f
496.418 273.44 mo
491.162 270.406 li
490.74 270.163 490.794 269.737 491.281 269.456 cv
493.002 268.462 li
493.489 268.181 494.227 268.15 494.648 268.395 cv
499.903 271.428 li
500.325 271.672 500.272 272.098 499.785 272.379 cv
498.063 273.372 li
497.576 273.653 496.84 273.685 496.418 273.44 cv
cp
f
504.459 278.083 mo
499.204 275.049 li
498.782 274.806 498.835 274.38 499.322 274.099 cv
501.043 273.105 li
501.53 272.823 502.268 272.793 502.689 273.037 cv
507.944 276.07 li
508.366 276.314 508.313 276.74 507.826 277.021 cv
506.104 278.015 li
505.618 278.296 504.881 278.327 504.459 278.083 cv
cp
f
424.817 241.69 mo
419.563 238.656 li
419.141 238.412 419.193 237.987 419.681 237.706 cv
424.888 234.699 li
425.374 234.418 426.111 234.388 426.533 234.631 cv
431.788 237.665 li
432.21 237.909 432.157 238.334 431.67 238.615 cv
426.463 241.622 li
425.977 241.903 425.239 241.934 424.817 241.69 cv
cp
f
432.933 246.375 mo
427.678 243.342 li
427.256 243.098 427.309 242.672 427.796 242.391 cv
433.003 239.385 li
433.489 239.104 434.227 239.073 434.648 239.316 cv
439.903 242.351 li
440.325 242.594 440.272 243.02 439.785 243.301 cv
434.578 246.307 li
434.092 246.589 433.354 246.619 432.933 246.375 cv
cp
f
441.048 251.061 mo
435.793 248.026 li
435.371 247.783 435.424 247.357 435.911 247.076 cv
441.118 244.07 li
441.604 243.789 442.342 243.759 442.764 244.002 cv
448.019 247.036 li
448.44 247.279 448.388 247.705 447.9 247.986 cv
442.694 250.992 li
442.207 251.273 441.47 251.305 441.048 251.061 cv
cp
f
449.163 255.746 mo
443.908 252.712 li
443.486 252.469 443.539 252.043 444.026 251.762 cv
449.233 248.756 li
449.72 248.475 450.457 248.443 450.879 248.688 cv
456.134 251.722 li
456.556 251.965 456.503 252.391 456.016 252.672 cv
450.81 255.678 li
450.322 255.959 449.585 255.989 449.163 255.746 cv
cp
f
457.278 260.432 mo
452.023 257.397 li
451.602 257.154 451.654 256.729 452.142 256.447 cv
457.349 253.44 li
457.835 253.159 458.572 253.129 458.994 253.373 cv
464.249 256.406 li
464.671 256.65 464.618 257.076 464.131 257.357 cv
458.925 260.363 li
458.438 260.645 457.7 260.675 457.278 260.432 cv
cp
f
465.394 265.117 mo
460.139 262.083 li
459.717 261.839 459.77 261.414 460.257 261.133 cv
465.464 258.126 li
465.951 257.845 466.688 257.814 467.109 258.058 cv
472.364 261.092 li
472.786 261.336 472.733 261.761 472.246 262.042 cv
467.04 265.049 li
466.553 265.33 465.815 265.36 465.394 265.117 cv
cp
f
473.509 269.802 mo
468.254 266.769 li
467.832 266.524 467.885 266.099 468.372 265.817 cv
473.579 262.812 li
474.066 262.53 474.803 262.5 475.225 262.743 cv
480.479 265.777 li
480.901 266.021 480.849 266.446 480.361 266.728 cv
475.155 269.733 li
474.668 270.015 473.931 270.046 473.509 269.802 cv
cp
f
481.624 274.487 mo
476.369 271.453 li
475.947 271.21 476 270.784 476.487 270.503 cv
481.694 267.497 li
482.182 267.216 482.918 267.186 483.34 267.429 cv
488.595 270.463 li
489.017 270.706 488.964 271.132 488.477 271.413 cv
483.271 274.419 li
482.783 274.7 482.046 274.731 481.624 274.487 cv
cp
f
489.739 279.173 mo
484.484 276.139 li
484.063 275.896 484.115 275.47 484.603 275.188 cv
489.81 272.183 li
490.297 271.901 491.033 271.87 491.455 272.114 cv
496.71 275.148 li
497.132 275.392 497.079 275.817 496.592 276.099 cv
491.386 279.104 li
490.898 279.386 490.161 279.416 489.739 279.173 cv
cp
f
378.421 242.269 mo
362.944 233.333 li
362.522 233.09 362.575 232.664 363.063 232.383 cv
368.27 229.377 li
368.757 229.096 369.494 229.064 369.916 229.309 cv
385.393 238.244 li
385.814 238.487 385.761 238.913 385.274 239.194 cv
380.067 242.2 li
379.58 242.481 378.843 242.512 378.421 242.269 cv
cp
f
478.119 299.829 mo
462.643 290.894 li
462.221 290.65 462.273 290.225 462.761 289.943 cv
467.968 286.938 li
468.455 286.656 469.191 286.625 469.613 286.869 cv
485.09 295.805 li
485.512 296.048 485.459 296.474 484.972 296.755 cv
479.765 299.761 li
479.277 300.042 478.541 300.072 478.119 299.829 cv
cp
f
445.665 291.441 mo
440.41 288.407 li
439.988 288.163 440.041 287.738 440.528 287.457 cv
446.73 283.876 li
447.218 283.595 447.955 283.563 448.377 283.808 cv
453.632 286.842 li
454.054 287.085 454.001 287.511 453.514 287.792 cv
447.311 291.373 li
446.824 291.654 446.087 291.685 445.665 291.441 cv
cp
f
386.731 257.416 mo
378.327 252.563 li
377.905 252.32 377.959 251.895 378.445 251.613 cv
384.648 248.032 li
385.136 247.751 385.873 247.721 386.295 247.964 cv
394.698 252.816 li
395.121 253.06 395.067 253.485 394.58 253.767 cv
388.378 257.348 li
387.891 257.629 387.153 257.659 386.731 257.416 cv
cp
f
437.846 286.927 mo
429.441 282.074 li
429.02 281.831 429.072 281.405 429.56 281.124 cv
435.763 277.543 li
436.25 277.262 436.986 277.231 437.408 277.475 cv
445.813 282.327 li
446.234 282.57 446.182 282.996 445.694 283.277 cv
439.492 286.858 li
439.005 287.14 438.268 287.17 437.846 286.927 cv
cp
f
398.44 264.176 mo
390.036 259.324 li
389.614 259.08 389.667 258.654 390.154 258.373 cv
396.357 254.792 li
396.844 254.511 397.581 254.48 398.003 254.724 cv
406.407 259.576 li
406.829 259.82 406.776 260.245 406.289 260.526 cv
400.086 264.107 li
399.6 264.389 398.862 264.42 398.44 264.176 cv
cp
f
398.061 254.757 mo
434.599 275.853 li
435.053 276.114 435.053 276.539 434.599 276.801 cv
428.273 280.452 li
427.82 280.714 427.085 280.714 426.632 280.452 cv
390.093 259.356 li
398.061 254.757 li
cp
f
468.346 299.937 mo
474.199 303.315 li
474.545 303.516 474.502 303.864 474.103 304.095 cv
471.564 305.56 li
471.166 305.79 470.562 305.815 470.216 305.615 cv
464.362 302.236 li
464.017 302.036 464.06 301.688 464.459 301.457 cv
466.996 299.992 li
467.396 299.762 468 299.736 468.346 299.937 cv
cp
f
460.163 295.212 mo
466.017 298.592 li
466.362 298.791 466.319 299.14 465.92 299.37 cv
463.383 300.835 li
462.983 301.065 462.379 301.091 462.033 300.892 cv
456.18 297.512 li
455.834 297.313 455.877 296.963 456.276 296.732 cv
458.813 295.268 li
459.213 295.037 459.817 295.013 460.163 295.212 cv
cp
f
452.048 290.526 mo
457.901 293.906 li
458.247 294.105 458.204 294.454 457.805 294.686 cv
455.268 296.15 li
454.868 296.381 454.264 296.405 453.918 296.206 cv
448.064 292.826 li
447.719 292.627 447.762 292.278 448.161 292.048 cv
450.698 290.582 li
451.098 290.352 451.702 290.327 452.048 290.526 cv
cp
f
464.645 292.625 mo
470.498 296.004 li
470.844 296.204 470.801 296.553 470.401 296.783 cv
467.864 298.248 li
467.465 298.479 466.86 298.504 466.515 298.304 cv
460.661 294.925 li
460.315 294.725 460.358 294.376 460.758 294.146 cv
463.295 292.681 li
463.694 292.45 464.299 292.425 464.645 292.625 cv
cp
f
453.893 149.005 mo
446.127 144.521 li
445.406 144.105 444.982 143.075 445.179 142.222 cv
445.376 141.367 446.12 141.013 446.841 141.428 cv
454.606 145.912 li
455.327 146.328 455.751 147.357 455.554 148.212 cv
455.356 149.065 454.613 149.421 453.893 149.005 cv
cp
.147219 .0154116 0 0 cmyk
f
472.391 159.685 mo
460.939 153.073 li
460.22 152.657 459.795 151.628 459.992 150.774 cv
460.189 149.92 460.934 149.564 461.653 149.98 cv
473.104 156.592 li
473.825 157.008 474.249 158.037 474.052 158.892 cv
473.854 159.746 473.111 160.101 472.391 159.685 cv
cp
f
440.355 185.254 mo
432.59 180.771 li
431.869 180.354 431.445 179.324 431.643 178.471 cv
431.84 177.616 432.583 177.261 433.304 177.677 cv
441.069 182.161 li
441.79 182.577 442.214 183.606 442.018 184.461 cv
441.82 185.314 441.076 185.67 440.355 185.254 cv
cp
f
456.845 194.774 mo
445.395 188.163 li
444.674 187.747 444.25 186.718 444.447 185.863 cv
444.644 185.009 445.388 184.654 446.108 185.07 cv
457.56 191.682 li
458.279 192.098 458.704 193.127 458.507 193.98 cv
458.31 194.835 457.565 195.19 456.845 194.774 cv
cp
f
430.984 143.122 mo
426.133 140.321 li
425.412 139.905 424.988 138.876 425.186 138.021 cv
425.382 137.168 426.126 136.813 426.847 137.229 cv
431.698 140.029 li
432.418 140.445 432.843 141.475 432.646 142.329 cv
432.448 143.184 431.704 143.538 430.984 143.122 cv
cp
f
445.936 159.099 mo
431.113 150.541 li
430.393 150.125 429.969 149.096 430.165 148.241 cv
430.362 147.388 431.106 147.032 431.827 147.448 cv
446.649 156.006 li
447.37 156.422 447.794 157.451 447.597 158.306 cv
447.399 159.159 446.656 159.515 445.936 159.099 cv
cp
f
432.973 166.303 mo
428.121 163.502 li
427.4 163.086 426.977 162.057 427.174 161.202 cv
427.371 160.349 428.114 159.993 428.835 160.409 cv
433.687 163.21 li
434.407 163.626 434.831 164.655 434.634 165.51 cv
434.437 166.363 433.693 166.719 432.973 166.303 cv
cp
f
459.341 210.903 mo
446.384 203.423 li
445.663 203.007 445.239 201.977 445.437 201.123 cv
445.634 200.269 446.377 199.913 447.098 200.329 cv
460.055 207.811 li
460.775 208.227 461.2 209.256 461.003 210.11 cv
460.806 210.964 460.062 211.319 459.341 210.903 cv
cp
f
428.243 178.261 mo
425.13 176.463 li
424.409 176.047 423.984 175.018 424.182 174.163 cv
424.379 173.309 425.123 172.954 425.844 173.37 cv
428.957 175.168 li
429.678 175.584 430.103 176.613 429.905 177.468 cv
429.708 178.321 428.964 178.677 428.243 178.261 cv
cp
f
426.005 191.656 mo
422.138 189.424 li
421.417 189.008 420.993 187.979 421.19 187.124 cv
421.388 186.27 422.131 185.915 422.852 186.331 cv
426.719 188.563 li
427.439 188.979 427.863 190.009 427.666 190.863 cv
427.47 191.717 426.726 192.072 426.005 191.656 cv
cp
f
441.049 200.342 mo
430.854 194.456 li
430.133 194.04 429.709 193.01 429.906 192.156 cv
430.103 191.302 430.847 190.947 431.567 191.363 cv
441.763 197.249 li
442.483 197.665 442.907 198.694 442.71 199.549 cv
442.514 200.403 441.77 200.758 441.049 200.342 cv
cp
f
427.973 200.137 mo
420.642 195.904 li
419.922 195.488 419.497 194.459 419.694 193.604 cv
419.892 192.75 420.636 192.396 421.355 192.812 cv
428.687 197.044 li
429.407 197.459 429.831 198.489 429.634 199.343 cv
429.437 200.197 428.693 200.553 427.973 200.137 cv
cp
f
470.459 217.354 mo
465.751 214.636 li
465.03 214.22 464.606 213.19 464.804 212.336 cv
465.001 211.482 465.744 211.127 466.465 211.543 cv
471.173 214.261 li
471.894 214.677 472.317 215.707 472.12 216.561 cv
471.923 217.415 471.18 217.77 470.459 217.354 cv
cp
f
451.019 176.722 mo
438.061 169.24 li
437.341 168.824 436.916 167.795 437.113 166.941 cv
437.311 166.087 438.055 165.731 438.774 166.147 cv
451.732 173.629 li
452.452 174.045 452.877 175.074 452.68 175.929 cv
452.482 176.782 451.738 177.138 451.019 176.722 cv
cp
f
452.2 170.06 mo
429.617 157.021 li
428.896 156.605 428.473 155.576 428.67 154.722 cv
428.867 153.868 429.61 153.513 430.331 153.929 cv
452.914 166.967 li
453.635 167.383 454.059 168.412 453.861 169.267 cv
453.664 170.121 452.921 170.476 452.2 170.06 cv
cp
f
439.583 177.463 mo
426.625 169.982 li
425.905 169.566 425.48 168.537 425.678 167.683 cv
425.875 166.828 426.619 166.474 427.339 166.89 cv
440.297 174.37 li
441.017 174.786 441.441 175.816 441.244 176.67 cv
441.047 177.524 440.303 177.879 439.583 177.463 cv
cp
f
460.846 182.396 mo
456.138 179.678 li
455.417 179.262 454.993 178.232 455.19 177.378 cv
455.388 176.523 456.132 176.169 456.852 176.585 cv
461.56 179.303 li
462.28 179.719 462.704 180.748 462.507 181.603 cv
462.31 182.456 461.566 182.812 460.846 182.396 cv
cp
f
507.316 179.85 mo
479.438 163.754 li
478.718 163.338 478.293 162.309 478.49 161.454 cv
478.688 160.6 479.432 160.245 480.151 160.661 cv
508.03 176.757 li
508.751 177.173 509.175 178.202 508.978 179.057 cv
508.781 179.91 508.037 180.266 507.316 179.85 cv
cp
f
439.209 191.936 mo
423.634 182.943 li
422.913 182.527 422.489 181.498 422.687 180.644 cv
422.883 179.789 423.627 179.435 424.348 179.851 cv
439.923 188.843 li
440.644 189.259 441.067 190.288 440.871 191.143 cv
440.674 191.997 439.93 192.352 439.209 191.936 cv
cp
f
439.079 140.452 mo
427.629 133.841 li
426.908 133.425 426.483 132.396 426.681 131.541 cv
426.878 130.688 427.622 130.332 428.343 130.748 cv
439.793 137.359 li
440.514 137.775 440.938 138.805 440.741 139.659 cv
440.544 140.513 439.8 140.868 439.079 140.452 cv
cp
f
425.932 206.303 mo
412.67 198.646 li
411.949 198.229 411.525 197.2 411.723 196.346 cv
411.919 195.491 412.663 195.137 413.384 195.553 cv
426.646 203.209 li
427.366 203.625 427.79 204.655 427.594 205.509 cv
427.396 206.363 426.652 206.719 425.932 206.303 cv
cp
f
515.683 234.255 mo
507.917 229.771 li
507.197 229.354 506.772 228.325 506.97 227.472 cv
507.167 226.617 507.911 226.262 508.631 226.678 cv
516.397 231.161 li
517.117 231.577 517.542 232.607 517.345 233.461 cv
517.147 234.315 516.403 234.671 515.683 234.255 cv
cp
f
521.263 208.1 mo
506.44 199.542 li
505.72 199.126 505.296 198.097 505.493 197.242 cv
505.69 196.388 506.434 196.033 507.154 196.449 cv
521.977 205.007 li
522.697 205.423 523.121 206.452 522.924 207.307 cv
522.728 208.16 521.983 208.516 521.263 208.1 cv
cp
f
508.3 215.304 mo
503.448 212.503 li
502.729 212.087 502.304 211.058 502.501 210.203 cv
502.698 209.349 503.442 208.994 504.163 209.41 cv
509.014 212.211 li
509.734 212.627 510.158 213.656 509.962 214.511 cv
509.765 215.364 509.021 215.72 508.3 215.304 cv
cp
f
503.571 227.262 mo
500.457 225.464 li
499.736 225.048 499.313 224.018 499.51 223.164 cv
499.706 222.31 500.45 221.955 501.171 222.371 cv
504.285 224.169 li
505.005 224.585 505.43 225.614 505.232 226.468 cv
505.035 227.322 504.291 227.678 503.571 227.262 cv
cp
f
526.346 225.723 mo
513.389 218.241 li
512.668 217.825 512.243 216.796 512.44 215.941 cv
512.638 215.088 513.382 214.732 514.103 215.148 cv
527.06 222.63 li
527.78 223.046 528.204 224.075 528.007 224.929 cv
527.81 225.783 527.066 226.139 526.346 225.723 cv
cp
f
527.527 219.061 mo
504.944 206.022 li
504.225 205.606 503.8 204.577 503.997 203.723 cv
504.194 202.868 504.938 202.514 505.658 202.93 cv
528.241 215.968 li
528.962 216.384 529.386 217.413 529.189 218.268 cv
528.992 219.121 528.248 219.477 527.527 219.061 cv
cp
f
514.91 226.464 mo
501.953 218.983 li
501.232 218.567 500.809 217.537 501.005 216.684 cv
501.202 215.829 501.946 215.475 502.667 215.891 cv
515.624 223.371 li
516.345 223.787 516.769 224.816 516.571 225.671 cv
516.374 226.525 515.631 226.88 514.91 226.464 cv
cp
f
514.536 240.937 mo
498.961 231.944 li
498.24 231.528 497.816 230.498 498.014 229.645 cv
498.211 228.79 498.954 228.436 499.675 228.852 cv
515.251 237.844 li
515.971 238.26 516.396 239.289 516.198 240.144 cv
516.001 240.997 515.257 241.353 514.536 240.937 cv
cp
f
549.397 147.635 mo
561.636 142.766 li
558.883 124.762 li
552.942 130.025 li
549.397 147.635 li
cp
.657221 .328313 0 0 cmyk
f
467.492 63.6914 mo
497.058 51.877 li
491.602 63.6914 li
475.814 67.3457 li
467.492 63.6914 li
cp
f
560.212 112.682 mo
558.65 111.779 557.031 111.253 555.421 111.035 cv
557.053 100.153 552.352 88.668 543.33 83.4551 cv
540.616 81.8877 537.665 80.9795 534.876 80.7988 cv
538.411 67.6094 532.95 52.6201 521.821 46.1904 cv
516.009 42.832 509.722 42.4346 504.185 44.4912 cv
504.189 44.4805 li
503.918 44.5898 li
503.775 44.6445 503.633 44.7012 503.492 44.7598 cv
494.229 48.4043 li
497.923 51.582 li
492.913 53.1611 488.581 57.2119 486.293 63.2002 cv
482.074 74.2432 486.401 87.6709 495.959 93.1924 cv
552.77 141.081 li
559.946 145.227 564.303 143.496 567.47 135.203 cv
570.638 126.911 567.389 116.828 560.212 112.682 cv
cp
f
488.88 58.3379 mo
520.747 45.6064 li
515.24 42.793 509.382 42.5605 504.185 44.4912 cv
504.189 44.4805 li
503.918 44.5898 li
503.775 44.6445 503.633 44.7012 503.492 44.7598 cv
494.229 48.4043 li
497.923 51.582 li
494.421 52.6855 491.253 55.001 488.88 58.3379 cv
cp
f
533.243 106.11 mo
554.286 97.7178 li
552.342 91.7021 548.507 86.4463 543.208 83.3848 cv
542.507 82.9795 541.798 82.625 541.084 82.3164 cv
512.096 93.8936 li
533.243 106.11 li
cp
f
500.691 49.7324 mo
509.723 54.9502 li
525.395 48.71 li
524.279 47.7705 523.09 46.9229 521.821 46.1904 cv
519.819 45.0332 517.76 44.2354 515.694 43.7607 cv
500.691 49.7324 li
cp
.147219 .0154116 0 0 cmyk
f
552.896 94.2158 mo
537.749 100.246 li
542.218 106.524 li
555.215 101.356 li
554.748 98.8682 553.964 96.4619 552.896 94.2158 cv
cp
f
550.083 116.663 mo
548.521 115.761 546.902 115.234 545.292 115.017 cv
546.923 104.135 542.102 92.5781 533.079 87.3662 cv
530.365 85.7979 527.535 84.96 524.747 84.7803 cv
528.282 71.5908 522.821 56.6016 511.692 50.1719 cv
499.725 43.2568 485.739 48.8623 480.456 62.6914 cv
480.277 63.1602 480.112 63.6338 479.958 64.1084 cv
470.826 60.0469 460.73 64.624 456.767 74.998 cv
452.548 86.041 456.876 99.4688 466.433 104.99 cv
538.611 146.692 li
545.787 150.838 554.173 147.478 557.341 139.185 cv
560.509 130.893 557.26 120.81 550.083 116.663 cv
cp
f
551.572 115.83 mo
550.011 114.928 548.392 114.401 546.781 114.184 cv
548.413 103.302 543.591 91.7451 534.568 86.5322 cv
531.855 84.9648 529.025 84.127 526.236 83.9473 cv
529.771 70.7578 524.311 55.7676 513.182 49.3379 cv
506.033 45.208 498.166 45.5479 491.862 49.4355 cv
497.89 46.3594 505.096 46.3604 511.692 50.1719 cv
522.821 56.6016 528.282 71.5908 524.747 84.7803 cv
527.535 84.96 530.365 85.7979 533.079 87.3662 cv
542.102 92.5791 546.923 104.135 545.292 115.017 cv
546.902 115.234 548.521 115.761 550.083 116.663 cv
557.26 120.81 560.509 130.893 557.341 139.185 cv
556.117 142.388 554.11 144.845 551.7 146.428 cv
554.769 144.96 557.363 142.193 558.83 138.352 cv
561.998 130.06 558.749 119.977 551.572 115.83 cv
cp
0 0 0 0 cmyk
f
479.958 64.1094 mo
480.093 63.6934 480.239 63.2813 480.393 62.8711 cv
475.444 61.0391 470.305 61.667 466.062 64.332 cv
470.306 62.2314 475.256 62.0176 479.958 64.1094 cv
cp
f
471.8 66.2695 mo
470.459 66.2695 469.173 66.5254 467.993 67.0391 cv
465.127 68.29 462.649 71.1904 461.195 74.998 cv
457.488 84.7002 461.451 96.9961 469.848 101.847 cv
542.026 143.549 li
544.295 144.858 546.643 145.189 548.466 144.46 cv
550.291 143.728 551.912 141.805 552.913 139.185 cv
555.588 132.183 552.728 123.309 546.668 119.807 cv
545.558 119.165 544.402 118.761 543.235 118.603 cv
540.306 118.207 li
540.682 115.695 li
542.188 105.66 537.553 95.0684 529.664 90.5098 cv
527.491 89.2539 525.258 88.5439 523.024 88.4004 cv
519.392 88.165 li
520.208 85.1182 li
523.45 73.0234 518.21 59.0537 508.277 53.3154 cv
503.659 50.6475 498.793 50.1084 494.58 51.7959 cv
490.366 53.4854 486.923 57.3545 484.884 62.6914 cv
484.726 63.1055 484.581 63.5225 484.445 63.9414 cv
482.498 69.9199 li
476.837 67.4023 li
475.141 66.6475 473.43 66.2695 471.8 66.2695 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
507.17 112.654 mo
509.656 111.653 li
507.723 110.166 li
507.17 112.654 li
cp
.657221 .328313 0 0 cmyk
f
505.927 85.7129 mo
508.342 84.7344 li
508.172 85.748 li
505.927 85.7129 li
cp
f
514.979 106.356 mo
517.499 105.341 li
513.825 101.642 li
514.979 106.356 li
cp
f
509.003 111.589 mo
499.371 106.028 li
498.882 105.746 498.587 105.035 498.713 104.44 cv
501.021 93.5088 li
512.424 100.092 li
510.115 111.023 li
509.99 111.618 509.492 111.871 509.003 111.589 cv
cp
f
508.316 84.7461 mo
495.3 91.3086 li
494.747 91.5869 494.932 92.625 495.602 93.0117 cv
506.227 99.1465 li
516.852 105.281 li
517.522 105.668 518.057 105.045 517.729 104.258 cv
510.011 85.7246 li
509.678 84.9248 508.878 84.4629 508.316 84.7461 cv
cp
f
506.478 112.608 mo
496.846 107.048 li
496.356 106.766 496.062 106.055 496.188 105.46 cv
498.495 94.5283 li
509.898 101.111 li
507.59 112.043 li
507.465 112.638 506.967 112.891 506.478 112.608 cv
cp
.147219 .0154116 0 0 cmyk
f
505.791 85.7656 mo
492.774 92.3281 li
492.222 92.6064 492.406 93.6445 493.076 94.0322 cv
503.701 100.166 li
514.326 106.301 li
514.997 106.688 515.531 106.064 515.204 105.277 cv
507.485 86.7441 li
507.152 85.9443 506.353 85.4824 505.791 85.7656 cv
cp
f
262.14 330.543 mo
300.65 308.418 li
303.687 306.673 308.984 306.903 312.483 308.933 cv
391.458 354.751 li
394.956 356.78 395.33 359.84 392.293 361.585 cv
353.783 383.711 li
350.746 385.456 345.448 385.225 341.95 383.195 cv
262.976 337.378 li
259.477 335.349 259.103 332.288 262.14 330.543 cv
cp
.280034 .073518 .0233463 0 cmyk
f
355.318 376.397 mo
394.753 353.74 li
396.479 352.748 397.348 351.426 397.392 350.034 cv
397.393 350.034 li
397.426 343.245 li
396.159 345.43 li
395.553 344.72 394.729 344.042 393.685 343.438 cv
314.272 297.365 li
309.773 294.756 302.959 294.459 299.053 296.703 cv
259.618 319.36 li
259.2 319.601 258.835 319.861 258.517 320.137 cv
257.005 318.2 li
256.973 324.582 li
256.974 324.579 li
256.918 326.337 258.176 328.206 260.687 329.663 cv
340.099 375.734 li
344.598 378.345 351.412 378.642 355.318 376.397 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
259.646 314.315 mo
299.081 291.657 li
302.987 289.413 309.801 289.71 314.301 292.32 cv
393.713 338.392 li
398.212 341.002 398.692 344.938 394.787 347.182 cv
355.352 369.839 li
351.445 372.083 344.632 371.787 340.133 369.177 cv
260.721 323.105 li
256.221 320.495 255.74 316.56 259.646 314.315 cv
cp
.147219 .0154116 0 0 cmyk
f
394.787 347.182 mo
355.352 369.839 li
351.445 372.084 344.632 371.786 340.133 369.177 cv
260.721 323.104 li
258.541 321.841 257.314 320.266 257.062 318.723 cv
256.748 320.609 257.988 322.682 260.721 324.268 cv
340.133 370.339 li
344.632 372.949 351.445 373.246 355.352 371.001 cv
394.787 348.344 li
396.801 347.187 397.64 345.58 397.371 343.937 cv
397.168 345.157 396.32 346.3 394.787 347.182 cv
cp
0 0 0 0 cmyk
f
262.14 315.228 mo
300.65 293.102 li
303.687 291.357 308.984 291.588 312.483 293.617 cv
391.458 339.435 li
394.956 341.465 395.33 344.524 392.293 346.27 cv
353.783 368.395 li
350.746 370.14 345.448 369.909 341.95 367.88 cv
262.976 322.063 li
259.477 320.032 259.103 316.973 262.14 315.228 cv
cp
f
324.182 323.277 mo
309.926 315.046 li
309.397 314.741 309.464 314.208 310.074 313.855 cv
310.685 313.503 311.607 313.465 312.137 313.771 cv
326.393 322.001 li
326.921 322.306 326.854 322.839 326.244 323.191 cv
325.634 323.544 324.711 323.582 324.182 323.277 cv
cp
.280034 .073518 .0233463 0 cmyk
f
310.67 320.489 mo
305.584 317.553 li
305.056 317.248 305.122 316.715 305.732 316.362 cv
306.343 316.01 307.266 315.972 307.795 316.277 cv
312.88 319.213 li
313.408 319.519 313.342 320.051 312.731 320.403 cv
312.121 320.756 311.198 320.794 310.67 320.489 cv
cp
f
319.204 325.416 mo
314.118 322.48 li
313.59 322.175 313.656 321.642 314.267 321.29 cv
314.877 320.938 315.8 320.898 316.329 321.204 cv
321.414 324.14 li
321.942 324.445 321.876 324.979 321.266 325.331 cv
320.655 325.684 319.732 325.722 319.204 325.416 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
336.46 335.379 mo
322.652 327.407 li
322.124 327.103 322.19 326.569 322.801 326.217 cv
323.411 325.864 324.334 325.826 324.863 326.131 cv
338.671 334.104 li
339.199 334.408 339.133 334.941 338.522 335.294 cv
337.912 335.646 336.989 335.685 336.46 335.379 cv
cp
.280034 .073518 .0233463 0 cmyk
f
319.054 330.344 mo
301.242 320.06 li
300.714 319.755 300.78 319.222 301.391 318.869 cv
302.001 318.517 302.924 318.479 303.453 318.783 cv
321.265 329.067 li
321.793 329.372 321.727 329.905 321.116 330.258 cv
320.506 330.61 319.583 330.648 319.054 330.344 cv
cp
f
340.476 347.727 mo
296.9 322.566 li
296.372 322.262 296.438 321.729 297.049 321.376 cv
297.659 321.023 298.583 320.985 299.111 321.29 cv
342.686 346.45 li
343.215 346.756 343.148 347.289 342.538 347.642 cv
341.928 347.993 341.004 348.032 340.476 347.727 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
353.19 340.025 mo
328.117 325.549 li
327.589 325.244 327.655 324.711 328.266 324.358 cv
328.876 324.006 329.799 323.968 330.328 324.272 cv
355.401 338.749 li
355.93 339.054 355.863 339.587 355.253 339.939 cv
354.643 340.292 353.719 340.33 353.19 340.025 cv
cp
.280034 .073518 .0233463 0 cmyk
f
322.477 363.662 mo
318.81 361.547 li
318.445 361.337 318.149 360.771 318.149 360.285 cv
318.149 359.799 318.445 359.575 318.81 359.785 cv
322.477 361.9 li
322.842 362.111 323.138 362.677 323.138 363.163 cv
323.138 363.649 322.842 363.873 322.477 363.662 cv
cp
.147219 .0154116 0 0 cmyk
f
328.246 367.004 mo
324.579 364.889 li
324.215 364.678 323.919 364.112 323.919 363.626 cv
323.919 363.14 324.215 362.916 324.579 363.127 cv
328.246 365.242 li
328.611 365.452 328.907 366.018 328.907 366.504 cv
328.907 366.99 328.611 367.214 328.246 367.004 cv
cp
f
108.81 222.507 mo
108.558 222.156 108.432 221.553 108.432 220.698 cv
108.432 219.186 li
108.432 218.601 108.495 218.133 108.612 217.791 cv
108.738 217.449 108.909 217.215 109.143 217.071 cv
109.368 216.936 109.674 216.864 110.061 216.864 cv
110.313 216.864 110.529 216.9 110.709 216.963 cv
110.88 217.026 111.033 217.125 111.15 217.242 cv
111.267 217.368 111.366 217.53 111.429 217.737 cv
111.501 217.944 111.546 218.178 111.573 218.43 cv
111.6 218.673 111.618 218.979 111.618 219.33 cv
111.609 219.879 li
109.197 219.879 li
109.197 220.77 li
109.197 221.391 109.251 221.832 109.377 222.084 cv
109.494 222.345 109.719 222.471 110.052 222.471 cv
110.313 222.471 110.511 222.39 110.655 222.219 cv
110.799 222.057 110.871 221.751 110.871 221.31 cv
110.871 220.896 li
111.609 220.896 li
111.609 221.229 li
111.609 221.814 111.492 222.255 111.249 222.57 cv
111.006 222.885 110.61 223.038 110.052 223.038 cv
109.476 223.038 109.071 222.867 108.81 222.507 cv
109.386 217.764 mo
109.26 217.989 109.197 218.412 109.197 219.033 cv
109.197 219.438 li
110.871 219.438 li
110.871 218.943 li
110.871 218.736 110.862 218.565 110.853 218.421 cv
110.844 218.286 110.817 218.151 110.79 218.007 cv
110.754 217.872 110.709 217.764 110.655 217.692 cv
110.601 217.611 110.52 217.548 110.421 217.503 cv
110.313 217.458 110.196 217.431 110.052 217.431 cv
109.737 217.431 109.512 217.539 109.386 217.764 cv
102.042 222.894 mo
101.835 222.795 101.673 222.651 101.556 222.453 cv
101.43 222.255 101.349 222.021 101.295 221.751 cv
101.25 221.481 101.223 221.157 101.223 220.779 cv
101.223 219.123 li
101.223 218.358 101.34 217.791 101.574 217.422 cv
101.808 217.053 102.222 216.864 102.816 216.864 cv
103.419 216.864 103.833 217.053 104.067 217.422 cv
104.301 217.791 104.418 218.358 104.418 219.123 cv
104.418 220.779 li
104.418 221.157 104.391 221.481 104.337 221.751 cv
104.292 222.021 104.202 222.255 104.085 222.453 cv
103.968 222.651 103.806 222.795 103.59 222.894 cv
103.383 222.993 103.122 223.038 102.816 223.038 cv
102.51 223.038 102.258 222.993 102.042 222.894 cv
102.483 217.485 mo
102.393 217.521 102.312 217.575 102.249 217.647 cv
102.105 217.89 li
102.069 217.98 102.042 218.088 102.024 218.223 cv
102.006 218.367 101.988 218.493 101.988 218.619 cv
101.979 218.745 101.979 218.898 101.979 219.078 cv
101.979 220.824 li
101.979 221.004 101.979 221.157 101.988 221.283 cv
101.988 221.409 102.006 221.535 102.024 221.679 cv
102.042 221.814 102.069 221.922 102.105 222.012 cv
102.249 222.255 li
102.312 222.327 102.393 222.39 102.483 222.417 cv
102.582 222.453 102.69 222.471 102.816 222.471 cv
102.969 222.471 103.095 222.444 103.203 222.39 cv
103.311 222.327 103.392 222.264 103.446 222.174 cv
103.509 222.093 103.554 221.976 103.581 221.814 cv
103.617 221.661 103.635 221.517 103.644 221.373 cv
103.653 221.229 103.653 221.049 103.653 220.824 cv
103.653 219.078 li
103.653 218.853 103.653 218.673 103.644 218.529 cv
103.635 218.385 103.617 218.241 103.581 218.088 cv
103.554 217.926 103.509 217.809 103.446 217.728 cv
103.392 217.638 103.311 217.575 103.203 217.512 cv
103.095 217.458 102.969 217.431 102.816 217.431 cv
102.69 217.431 102.582 217.449 102.483 217.485 cv
97.794 222.471 mo
97.794 222.948 li
97.029 222.948 li
97.029 214.56 li
97.794 214.56 li
97.794 217.449 li
98.109 217.062 98.487 216.864 98.937 216.864 cv
99.153 216.864 99.351 216.909 99.522 216.999 cv
99.684 217.089 99.819 217.215 99.918 217.359 cv
100.008 217.503 100.089 217.683 100.143 217.899 cv
100.206 218.115 100.242 218.322 100.26 218.538 cv
100.278 218.745 100.287 218.988 100.287 219.249 cv
100.287 220.518 li
100.287 220.833 100.278 221.121 100.251 221.364 cv
100.224 221.616 100.179 221.85 100.107 222.066 cv
100.044 222.273 99.954 222.453 99.846 222.597 cv
99.738 222.732 99.603 222.84 99.432 222.921 cv
99.27 223.002 99.081 223.038 98.856 223.038 cv
98.46 223.038 98.109 222.849 97.794 222.471 cv
97.794 217.926 mo
97.794 222.003 li
98.064 222.291 98.379 222.435 98.73 222.435 cv
99.054 222.435 99.27 222.291 99.369 221.994 cv
99.477 221.697 99.531 221.202 99.531 220.527 cv
99.531 219.249 li
99.531 218.61 99.477 218.151 99.369 217.881 cv
99.27 217.602 99.045 217.458 98.721 217.458 cv
98.415 217.458 98.109 217.62 97.794 217.926 cv
93.087 222.651 mo
92.853 222.399 92.745 222.075 92.745 221.697 cv
92.745 221.499 92.763 221.319 92.79 221.166 cv
92.826 221.004 92.889 220.86 92.988 220.716 cv
93.078 220.581 93.177 220.455 93.285 220.356 cv
93.393 220.248 93.555 220.131 93.753 220.014 cv
93.96 219.897 94.158 219.78 94.365 219.681 cv
94.563 219.582 94.833 219.456 95.157 219.312 cv
95.157 218.88 li
95.157 218.331 95.103 217.953 95.004 217.746 cv
94.896 217.539 94.698 217.44 94.41 217.44 cv
93.861 217.44 93.582 217.782 93.582 218.466 cv
93.582 218.682 li
92.835 218.655 li
92.835 218.556 92.835 218.493 92.835 218.475 cv
92.862 217.908 93.006 217.503 93.276 217.251 cv
93.546 216.99 93.942 216.864 94.455 216.864 cv
94.986 216.864 95.355 217.026 95.58 217.332 cv
95.805 217.647 95.913 218.151 95.913 218.844 cv
95.913 221.76 li
95.913 222.237 95.931 222.633 95.967 222.948 cv
95.301 222.948 li
95.184 222.12 li
95.094 222.381 94.941 222.597 94.725 222.777 cv
94.509 222.957 94.248 223.038 93.951 223.038 cv
93.6 223.038 93.312 222.912 93.087 222.651 cv
95.058 219.861 mo
94.896 219.951 94.77 220.023 94.68 220.068 cv
94.59 220.113 94.491 220.176 94.365 220.248 cv
94.239 220.311 94.149 220.374 94.086 220.419 cv
93.879 220.59 li
93.708 220.779 li
93.6 220.986 li
93.519 221.229 li
93.51 221.319 93.501 221.418 93.501 221.517 cv
93.501 221.814 93.564 222.03 93.699 222.174 cv
93.834 222.318 93.996 222.39 94.194 222.39 cv
94.401 222.39 94.581 222.318 94.752 222.183 cv
94.923 222.039 95.058 221.877 95.157 221.679 cv
95.157 219.816 li
95.058 219.861 li
81.729 222.705 mo
81.576 222.48 81.495 222.165 81.495 221.76 cv
81.495 216.954 li
82.26 216.954 li
82.26 221.598 li
82.26 221.904 82.305 222.12 82.395 222.246 cv
82.485 222.372 82.629 222.435 82.827 222.435 cv
83.169 222.435 83.52 222.246 83.889 221.85 cv
83.889 216.954 li
84.645 216.954 li
84.645 222.948 li
83.889 222.948 li
83.889 222.282 li
83.439 222.786 82.953 223.038 82.422 223.038 cv
82.116 223.038 81.891 222.921 81.729 222.705 cv
86.382 222.687 mo
86.229 222.462 86.148 222.129 86.139 221.697 cv
86.139 217.458 li
85.419 217.458 li
85.419 216.954 li
86.139 216.954 li
86.139 215.109 li
86.904 215.109 li
86.904 216.954 li
87.894 216.954 li
87.894 217.458 li
86.904 217.458 li
86.904 221.634 li
86.904 221.931 86.94 222.138 87.003 222.255 cv
87.075 222.372 87.219 222.426 87.435 222.426 cv
87.579 222.426 87.714 222.408 87.867 222.381 cv
87.867 222.957 li
87.633 223.002 87.426 223.02 87.228 223.02 cv
86.814 223.02 86.535 222.912 86.382 222.687 cv
105.525 222.948 mo
105.525 216.954 li
106.281 216.954 li
106.281 217.782 li
106.461 217.476 106.677 217.251 106.92 217.107 cv
107.163 216.963 107.415 216.891 107.658 216.891 cv
107.793 216.891 li
107.793 217.719 li
107.685 217.674 107.559 217.647 107.424 217.647 cv
106.938 217.647 106.56 217.881 106.281 218.349 cv
106.281 222.948 li
105.525 222.948 li
90.918 222.948 mo
90.918 214.56 li
91.683 214.56 li
91.683 222.948 li
90.918 222.948 li
92.673 211.392 mo
92.853 211.284 92.979 211.167 93.051 211.032 cv
93.132 210.897 93.168 210.726 93.168 210.519 cv
92.709 210.519 li
92.709 209.385 li
93.564 209.385 li
93.564 210.438 li
93.564 210.771 93.51 211.032 93.393 211.23 cv
93.285 211.428 93.096 211.59 92.826 211.725 cv
92.673 211.392 li
111.186 210.033 mo
110.961 209.646 110.853 208.998 110.853 208.098 cv
110.853 206.991 li
110.853 206.658 110.862 206.37 110.889 206.118 cv
110.907 205.866 110.952 205.632 111.015 205.416 cv
111.078 205.2 111.168 205.02 111.267 204.876 cv
111.375 204.741 111.51 204.633 111.672 204.552 cv
111.843 204.471 112.032 204.435 112.266 204.435 cv
112.653 204.435 113.004 204.615 113.319 204.957 cv
113.319 202.131 li
114.075 202.131 li
114.075 210.519 li
113.319 210.519 li
113.319 210.087 li
113.013 210.438 112.671 210.609 112.293 210.609 cv
111.78 210.609 111.411 210.42 111.186 210.033 cv
111.78 205.434 mo
111.663 205.704 111.609 206.136 111.609 206.748 cv
111.609 208.161 li
111.609 208.809 111.663 209.286 111.78 209.574 cv
111.897 209.862 112.122 210.006 112.446 210.006 cv
112.743 210.006 113.031 209.88 113.319 209.61 cv
113.319 205.452 li
113.013 205.173 112.716 205.029 112.428 205.029 cv
112.104 205.029 111.888 205.164 111.78 205.434 cv
104.796 210.033 mo
104.571 209.646 104.463 208.998 104.463 208.098 cv
104.463 206.991 li
104.463 206.658 104.472 206.37 104.499 206.118 cv
104.517 205.866 104.562 205.632 104.625 205.416 cv
104.697 205.2 104.778 205.02 104.877 204.876 cv
104.985 204.741 105.12 204.633 105.291 204.552 cv
105.453 204.471 105.651 204.435 105.876 204.435 cv
106.272 204.435 106.623 204.615 106.929 204.957 cv
106.929 202.131 li
107.685 202.131 li
107.685 210.519 li
106.929 210.519 li
106.929 210.087 li
106.623 210.438 106.29 210.609 105.912 210.609 cv
105.39 210.609 105.021 210.42 104.796 210.033 cv
105.39 205.434 mo
105.273 205.704 105.219 206.136 105.219 206.748 cv
105.219 208.161 li
105.219 208.809 105.282 209.286 105.39 209.574 cv
105.507 209.862 105.732 210.006 106.056 210.006 cv
106.353 210.006 106.641 209.88 106.929 209.61 cv
106.929 205.452 li
106.623 205.173 106.326 205.029 106.038 205.029 cv
105.723 205.029 105.507 205.164 105.39 205.434 cv
100.746 210.078 mo
100.494 209.727 100.368 209.124 100.368 208.26 cv
100.368 206.748 li
100.368 206.172 100.431 205.704 100.548 205.362 cv
100.665 205.02 100.845 204.777 101.079 204.642 cv
101.304 204.507 101.61 204.435 101.997 204.435 cv
102.249 204.435 102.465 204.471 102.645 204.534 cv
102.816 204.597 102.969 204.696 103.086 204.813 cv
103.203 204.939 103.302 205.101 103.365 205.308 cv
103.437 205.515 103.482 205.74 103.509 205.992 cv
103.536 206.244 103.554 206.55 103.554 206.901 cv
103.545 207.441 li
101.124 207.441 li
101.124 208.341 li
101.124 208.962 101.187 209.394 101.304 209.655 cv
101.43 209.907 101.655 210.042 101.988 210.042 cv
102.249 210.042 102.447 209.952 102.591 209.79 cv
102.735 209.619 102.807 209.322 102.807 208.881 cv
102.807 208.467 li
103.545 208.467 li
103.545 208.8 li
103.545 209.376 103.428 209.826 103.185 210.141 cv
102.942 210.456 102.537 210.609 101.988 210.609 cv
101.412 210.609 100.998 210.438 100.746 210.078 cv
101.322 205.335 mo
101.196 205.56 101.124 205.983 101.124 206.604 cv
101.124 207.009 li
102.807 207.009 li
102.807 206.514 li
102.807 206.307 102.798 206.127 102.789 205.992 cv
102.78 205.857 102.753 205.713 102.726 205.578 cv
102.69 205.443 102.645 205.335 102.591 205.263 cv
102.537 205.182 102.456 205.119 102.357 205.074 cv
102.249 205.02 102.132 205.002 101.988 205.002 cv
101.664 205.002 101.448 205.11 101.322 205.335 cv
96.957 210.15 mo
96.669 209.844 96.507 209.43 96.462 208.908 cv
97.101 208.71 li
97.146 209.169 97.245 209.502 97.416 209.718 cv
97.587 209.934 97.821 210.042 98.127 210.042 cv
98.388 210.042 98.595 209.961 98.748 209.808 cv
98.892 209.655 98.964 209.457 98.964 209.214 cv
98.964 209.178 li
98.955 208.773 98.712 208.377 98.235 207.981 cv
97.425 207.288 li
97.137 207.045 96.93 206.811 96.795 206.586 cv
96.669 206.361 96.606 206.1 96.606 205.803 cv
96.606 205.371 96.732 205.029 96.993 204.786 cv
97.254 204.552 97.596 204.435 98.037 204.435 cv
98.478 204.435 98.811 204.579 99.054 204.858 cv
99.288 205.146 99.423 205.524 99.45 206.01 cv
98.91 206.181 li
98.892 205.785 98.811 205.488 98.667 205.29 cv
98.532 205.101 98.325 205.002 98.064 205.002 cv
97.83 205.002 97.641 205.065 97.497 205.2 cv
97.362 205.326 97.29 205.497 97.29 205.713 cv
97.29 205.911 97.326 206.082 97.398 206.217 cv
97.47 206.361 97.596 206.505 97.785 206.667 cv
98.631 207.432 li
98.784 207.558 98.91 207.675 99 207.774 cv
99.099 207.873 99.198 207.999 99.306 208.143 cv
99.414 208.296 99.495 208.449 99.549 208.62 cv
99.603 208.791 99.63 208.971 99.63 209.169 cv
99.63 209.628 99.495 209.979 99.216 210.231 cv
98.937 210.483 98.568 210.609 98.091 210.609 cv
97.623 210.609 97.236 210.456 96.957 210.15 cv
81.81 210.078 mo
81.558 209.727 81.432 209.124 81.432 208.26 cv
81.432 206.748 li
81.432 206.172 81.486 205.704 81.612 205.362 cv
81.729 205.02 81.9 204.777 82.134 204.642 cv
82.368 204.507 82.674 204.435 83.052 204.435 cv
83.304 204.435 83.52 204.471 83.7 204.534 cv
83.88 204.597 84.024 204.696 84.141 204.813 cv
84.267 204.939 84.357 205.101 84.429 205.308 cv
84.492 205.515 84.546 205.74 84.573 205.992 cv
84.6 206.244 84.609 206.55 84.609 206.901 cv
84.609 207.441 li
82.188 207.441 li
82.188 208.341 li
82.188 208.962 82.251 209.394 82.368 209.655 cv
82.485 209.907 82.71 210.042 83.043 210.042 cv
83.304 210.042 83.511 209.952 83.646 209.79 cv
83.79 209.619 83.862 209.322 83.862 208.881 cv
83.862 208.467 li
84.609 208.467 li
84.609 208.8 li
84.609 209.376 84.483 209.826 84.24 210.141 cv
83.997 210.456 83.601 210.609 83.043 210.609 cv
82.476 210.609 82.062 210.438 81.81 210.078 cv
82.377 205.335 mo
82.251 205.56 82.188 205.983 82.188 206.604 cv
82.188 207.009 li
83.862 207.009 li
83.862 206.514 li
83.862 206.307 83.853 206.127 83.844 205.992 cv
83.835 205.857 83.817 205.713 83.781 205.578 cv
83.754 205.443 83.709 205.335 83.646 205.263 cv
83.592 205.182 83.511 205.119 83.412 205.074 cv
83.313 205.02 83.187 205.002 83.043 205.002 cv
82.728 205.002 82.503 205.11 82.377 205.335 cv
90.414 210.258 mo
90.261 210.033 90.18 209.7 90.18 209.268 cv
90.18 205.029 li
89.46 205.029 li
89.46 204.525 li
90.18 204.525 li
90.18 202.671 li
90.936 202.671 li
90.936 204.525 li
91.935 204.525 li
91.935 205.029 li
90.936 205.029 li
90.936 209.196 li
90.936 209.502 90.972 209.709 91.044 209.826 cv
91.116 209.934 91.26 209.997 91.476 209.997 cv
91.611 209.997 91.755 209.979 91.899 209.952 cv
91.899 210.528 li
91.674 210.564 91.458 210.591 91.26 210.591 cv
90.855 210.591 90.576 210.483 90.414 210.258 cv
87.813 210.519 mo
87.813 204.525 li
88.569 204.525 li
88.569 210.519 li
87.813 210.519 li
85.734 210.519 mo
85.734 202.131 li
86.499 202.131 li
86.499 210.519 li
85.734 210.519 li
87.813 203.697 mo
87.813 202.671 li
88.578 202.671 li
88.578 203.697 li
87.813 203.697 li
107.712 200.061 mo
107.712 192.096 li
108.468 192.096 li
108.468 192.6 li
108.792 192.204 109.17 192.006 109.62 192.006 cv
109.836 192.006 110.034 192.051 110.205 192.141 cv
110.367 192.231 110.502 192.348 110.601 192.492 cv
110.691 192.636 110.772 192.816 110.826 193.032 cv
110.889 193.248 110.925 193.464 110.943 193.68 cv
110.961 193.887 110.97 194.121 110.97 194.391 cv
110.97 195.66 li
110.97 195.975 110.961 196.254 110.934 196.506 cv
110.907 196.758 110.862 196.983 110.79 197.199 cv
110.727 197.415 110.637 197.595 110.529 197.73 cv
110.412 197.874 110.277 197.982 110.115 198.063 cv
109.953 198.144 109.755 198.18 109.539 198.18 cv
109.152 198.18 108.792 197.991 108.468 197.604 cv
108.468 200.061 li
107.712 200.061 li
108.468 193.059 mo
108.468 197.145 li
108.747 197.433 109.062 197.577 109.413 197.577 cv
109.548 197.577 109.665 197.55 109.755 197.496 cv
109.854 197.442 109.935 197.361 109.989 197.271 cv
110.052 197.172 110.097 197.037 110.124 196.875 cv
110.16 196.713 110.187 196.533 110.196 196.344 cv
110.205 196.155 110.214 195.93 110.214 195.669 cv
110.214 194.391 li
110.214 193.752 110.16 193.293 110.052 193.014 cv
109.944 192.735 109.728 192.6 109.404 192.6 cv
109.089 192.6 108.783 192.753 108.468 193.059 cv
112.257 197.721 mo
111.978 197.415 111.816 197.001 111.771 196.479 cv
112.41 196.281 li
112.446 196.74 112.554 197.073 112.725 197.289 cv
112.896 197.505 113.13 197.604 113.427 197.604 cv
113.697 197.604 113.904 197.532 114.057 197.379 cv
114.201 197.226 114.273 197.028 114.273 196.776 cv
114.273 196.74 li
114.264 196.344 114.021 195.948 113.544 195.552 cv
112.725 194.859 li
112.446 194.616 112.23 194.382 112.104 194.157 cv
111.969 193.932 111.906 193.671 111.906 193.374 cv
111.906 192.933 112.041 192.6 112.302 192.357 cv
112.563 192.123 112.905 192.006 113.337 192.006 cv
113.778 192.006 114.12 192.15 114.363 192.429 cv
114.597 192.708 114.732 193.095 114.759 193.581 cv
114.219 193.752 li
114.201 193.356 114.111 193.059 113.976 192.861 cv
113.832 192.672 113.634 192.573 113.373 192.573 cv
113.13 192.573 112.95 192.636 112.806 192.771 cv
112.662 192.897 112.599 193.068 112.599 193.284 cv
112.599 193.482 112.635 193.644 112.707 193.788 cv
112.77 193.923 112.905 194.076 113.094 194.238 cv
113.94 194.994 li
114.093 195.129 114.21 195.246 114.309 195.345 cv
114.408 195.444 114.507 195.57 114.615 195.714 cv
114.723 195.858 114.804 196.02 114.858 196.191 cv
114.912 196.362 114.939 196.542 114.939 196.74 cv
114.939 197.199 114.804 197.55 114.525 197.802 cv
114.246 198.054 113.877 198.18 113.4 198.18 cv
112.923 198.18 112.545 198.027 112.257 197.721 cv
92.979 197.649 mo
92.727 197.298 92.601 196.686 92.601 195.831 cv
92.601 194.319 li
92.601 193.734 92.664 193.275 92.781 192.933 cv
92.898 192.591 93.078 192.348 93.312 192.213 cv
93.537 192.069 93.843 192.006 94.23 192.006 cv
94.482 192.006 94.698 192.033 94.878 192.105 cv
95.049 192.168 95.202 192.258 95.319 192.384 cv
95.436 192.501 95.535 192.672 95.598 192.879 cv
95.67 193.086 95.715 193.311 95.742 193.563 cv
95.769 193.815 95.787 194.121 95.787 194.472 cv
95.778 195.012 li
93.357 195.012 li
93.357 195.912 li
93.357 196.533 93.42 196.965 93.537 197.226 cv
93.663 197.478 93.888 197.604 94.212 197.604 cv
94.482 197.604 94.68 197.523 94.824 197.361 cv
94.968 197.19 95.04 196.893 95.04 196.452 cv
95.04 196.038 li
95.778 196.038 li
95.778 196.371 li
95.778 196.947 95.661 197.397 95.418 197.712 cv
95.175 198.027 94.77 198.18 94.221 198.18 cv
93.645 198.18 93.231 198 92.979 197.649 cv
93.555 192.906 mo
93.42 193.131 93.357 193.554 93.357 194.175 cv
93.357 194.58 li
95.04 194.58 li
95.04 194.085 li
95.04 193.878 95.031 193.698 95.022 193.563 cv
95.013 193.428 94.986 193.284 94.959 193.149 cv
94.923 193.014 94.878 192.906 94.824 192.825 cv
94.77 192.753 94.689 192.69 94.581 192.645 cv
94.482 192.591 94.365 192.573 94.221 192.573 cv
93.897 192.573 93.681 192.681 93.555 192.906 cv
86.211 198.036 mo
86.004 197.937 85.842 197.784 85.725 197.586 cv
85.599 197.388 85.518 197.154 85.464 196.884 cv
85.419 196.623 85.392 196.299 85.392 195.921 cv
85.392 194.256 li
85.392 193.5 85.509 192.933 85.743 192.564 cv
85.977 192.186 86.391 192.006 86.985 192.006 cv
87.588 192.006 88.002 192.186 88.236 192.555 cv
88.47 192.924 88.587 193.491 88.587 194.256 cv
88.587 195.921 li
88.587 196.299 88.56 196.623 88.506 196.884 cv
88.461 197.154 88.371 197.388 88.254 197.586 cv
88.137 197.784 87.975 197.937 87.759 198.036 cv
87.552 198.135 87.291 198.18 86.985 198.18 cv
86.679 198.18 86.427 198.135 86.211 198.036 cv
86.652 192.618 mo
86.562 192.654 86.481 192.708 86.418 192.789 cv
86.274 193.032 li
86.238 193.113 86.211 193.23 86.193 193.365 cv
86.175 193.5 86.157 193.635 86.157 193.761 cv
86.148 193.878 86.148 194.031 86.148 194.22 cv
86.148 195.957 li
86.148 196.146 86.148 196.299 86.157 196.425 cv
86.157 196.542 86.175 196.677 86.193 196.812 cv
86.211 196.956 86.238 197.064 86.274 197.154 cv
86.418 197.397 li
86.481 197.469 86.562 197.523 86.652 197.559 cv
86.751 197.595 86.859 197.604 86.985 197.604 cv
87.138 197.604 87.264 197.577 87.372 197.523 cv
87.48 197.469 87.561 197.397 87.615 197.316 cv
87.678 197.226 87.723 197.109 87.75 196.956 cv
87.786 196.803 87.804 196.65 87.813 196.515 cv
87.822 196.371 87.822 196.182 87.822 195.957 cv
87.822 194.22 li
87.822 193.995 87.822 193.806 87.813 193.671 cv
87.804 193.527 87.786 193.374 87.75 193.221 cv
87.723 193.068 87.678 192.951 87.615 192.861 cv
87.561 192.78 87.48 192.708 87.372 192.654 cv
87.264 192.6 87.138 192.573 86.985 192.573 cv
86.859 192.573 86.751 192.591 86.652 192.618 cv
101.646 198.081 mo
101.646 193.383 li
101.646 193.05 101.592 192.825 101.493 192.699 cv
101.394 192.573 101.25 192.501 101.061 192.501 cv
100.674 192.51 100.305 192.717 99.927 193.131 cv
99.936 193.23 99.945 193.302 99.945 193.356 cv
99.945 198.081 li
99.234 198.081 li
99.234 193.383 li
99.234 193.05 99.18 192.825 99.081 192.699 cv
98.973 192.573 98.829 192.501 98.64 192.501 cv
98.253 192.51 97.884 192.717 97.515 193.131 cv
97.515 198.081 li
96.804 198.081 li
96.804 192.096 li
97.515 192.096 li
97.515 192.699 li
97.92 192.231 98.388 191.988 98.928 191.988 cv
99.432 191.988 99.747 192.249 99.873 192.78 cv
100.287 192.249 100.782 191.988 101.349 191.988 cv
101.646 191.988 101.889 192.096 102.078 192.312 cv
102.267 192.528 102.366 192.87 102.366 193.356 cv
102.366 198.081 li
101.646 198.081 li
89.685 198.081 mo
89.685 192.096 li
90.45 192.096 li
90.45 192.924 li
90.63 192.618 90.846 192.393 91.089 192.249 cv
91.332 192.105 91.575 192.033 91.827 192.033 cv
91.962 192.033 li
91.962 192.852 li
91.854 192.807 91.728 192.789 91.593 192.789 cv
91.107 192.789 90.729 193.023 90.45 193.482 cv
90.45 198.081 li
89.685 198.081 li
/0 /CSA get_res setcolorspace
gsave
eclp
[1 0 0 -1 0 400 ]ct
[34.08 0 0 31.92 81.12 176.56 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 142 
/H 133 
/M[142 0 0 -133 0 133 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rrE"CL]HoErBlnOi;ifgV>u2J_Z9X\_uTZ7s*=D?s*;TarBo$6li@&Qq#LF^`W5rLiW.d7rt5&,rt2O:
LB.9u!!)Wkpj)`:rH\DCr-A5@pj)`:rHSACqK`&?qK_W3rH\>ArHSACqK_l:rH\?eqZ-R^o)SPQqZ-R^
rrDsar;cU[qZ-R^!!)j_rW)d^nc8VUr;cd`!!)sbr^6J]q*Y#Zr=SW$p_!B'r=T&0r"8l-p_!B'r=K#0
q@W],q@W8urt58Cr;cd.!!)j-q#L4&U]AO;rH\#8p3HQ9rHSACqg&/@p3HQ9pj)g`!!)e>o)S`7r;cJ8
qZ-A9quH[_oDnSPquH[_!!)m`rW)[[!(6YaoKrTYpd=WQrBpM`oL&KUpI"iYr=SZ%p(@3&r=K#0r=T&A
rW)X(quH@$!!)d+o)S_$r;cI%qZ-@&i;el<rH\2=r;cJ8r;cP:rrD_;quGu,oDni8r;cG7r;cM9!!)uu
rBp5XoL&QWp-\i[ogAWWksP(CrBpM`o0`NXrrD^Zr;cd.o`4Urr;cO'rrD^(quGsnoDnh%r;Zg0oF_$%
ob!erd/a,jo`4o8rW)kAr;cP:rrDtBrW)kAr;c_?rW)e?rW)kAoDni8r;c_?rW)kAr;cb@rW)nBr;cd`
o`4nWrW)j`r;cOYrrDsarW)j`r;Zgbr'UG`qEt5^r'U)VrBpM`qa:>_r'UD_r'UG`rBpM`r=S]&r"8o.
r"8l-p(@<)rXo/BrW)j.r;c^,rW)d,rW)j.oDnh%r;c^,rW)j.r;ca-rW)m/gAmK=rH\&9rcnKhquH\@
r;c_?q>gJ>quH\@r;cb@quHY?quH\@oDni8r;cb@quH\@r;ceAquH_Ar;cd`o`4qXquH[_r;c^^q>gI]
quH[_r;ca_quHX^quH[_oDnhWr;ca_quH[_r;cd`!!)rtr^6Var=S]&r=Sr-r=Su.q[rZ)r=Sr-r=Su.
r"8i,r"8i,r=SZ%r=Su.r"8o.rrE!0r;cd.quH^.QiPh?rrE"Co`4r9quH\@r;cb@q#LA=quH\@r;ceA
qZ-S?qZ-S?oDni8r;ceAqZ-P>rr<$!rH\;@rH\ABrBp5XrBpJ_rBpM`r'U8[rBpJ_rBpM`rBpG^rBpG^
rBp2WrBpM`s$QfRqZ-O]rW)maquH[_rW)m/o`4q&quH[-r;ca-q#L@*quH[-r;cd.qZ-R,qZ-R,q#L<m
r=Su.r=So,r"8o.r=Sr-r=Q14_Z9X\p&P#9quH\@r;ceAq#L><quH\@r;ckCs*=JArH\8?rH\#8rH\>A
rH\8?r-A8ArH\;@rH\ABrBp8Yr'UA^rBpM`rBpA\r'UA^rBpM`rBpG^rBpG^rBp2WrBpM`rBpG^r'UG`
rBpJ_rBpPar=S`'r"8i,r=Su.rt58Cq#L=)quH[-r;cd.qZ-R,qZ-R,oDnh%r;cd.qZ-O+rW)m/quH[-
l2ZS>rHSACpAk,:quHY?rW)nBq#L><quHY?rW)nBqZ-S?qZ-S?oDni8r;ceAq>gJ>rW)kA!!)uus*=MB
rBp8Yr'UA^r'UG`rBpA\r'UA^r'UG`rBpG^rBpG^rBp2WrBpM`rBpJ_rrE!brW)j`r;cjbquH[-p&P"&
quHX,rW)m/q#L=)quHX,rW)m/qZ-R,qZ-R,oDnn'rt520r=Sl+r=T#/r"8l-rt2(-aoMBcp&P&:qZ-P>
rW)nBq#L><quHY?rW)nBqu?]srH\8?rH\#8rH\>ArH\5>rH\ABr-@u9rBp8YrBpG^r'UG`rBpA\r'UA^
s$QcQrW)maqZ-R^qZ-R^oDnhWr;cd`q>gI]rW)j`p&P%'p&P%'qZ-O+rW)m/quH]rr"8i,r"8o.r=So,
r=So,r=SZ%r=Su.r=Sl+r=T#/r"7Z`NWB$'q#LBorH\8?r-A8ArH\2=r-A2?r-A8ArH\8?rH\8?rH\#8
rH\>ArH\5>rH\>Ar-A,=rW)map&P%YqZ-O]rW)maq#L=[quHX^rW)maqZ-R^qZ-R^oDnhWr;cd`q>gI]
!!)uur'U2Yr=S`'r=So,r"8o.r=Si*r"8i,r"8o.r=So,r=So,r=SZ%r=Su.!"o2Bq>gI+r;ca-R/kV7
rH\):rH\8?r-A8ArH\2=np137rH\8?rH\DCr;ceAoDni8r;ceAq>gJ>r;c\>q#L@\p&P%YqZ-O]rW)ma
q#KtQrVupcr^6P_rBpG^rBp2WrBpM`rBpD]rBpM`qEt&Yr=S`'r=So,r"8o.r=Si*r=S`8rW)m/qZ-R,
qZ-R,oDnh%r;cd.q>gI+r;c[+f)V'9rH\):rH\8?r-A8ArH\2=np137rH\8?rH\8?rH\#8rH\>ArH\5>
rH\;@qK_o;rBp8YrBpG^r'UG`rBpA\njEBVrBpG^rBpG^rBp2WrBpM`rBpD]rBpJ_r^6WOq>gI+p&P%'
qZ-O+rW)m/q#KstrW)m/qZ-R,qZ-R,oDnh%r;cd.r;cfsr=Sr-q@Stmg&V-QrH\):rH\8?r-A8ArH\2=
np137rH\8?rH\8?rH\#8rH\>ArH\5>rH\DCr;c\>qZ-R^p&P%YqZ-O]rW)maq#KtQrW)maqZ-R^qZ-R^
oDnhWr;cjbs$QV_rBpG^qEt,[r=S`'r=So,r"8o.r=Si*ne(j$r=So,r=So,r=Si*quH[-r;cd.q>gI+
qZ-I)WrU$;rH\):rH\8?r-A8ArH\2=r-@o7s*=WiqZ-S?qZ-S?oDni8r;ceAq>gJ>q>gA;quH[_p&P%Y
qZ-O]rW)maq#L=[oDnhWqZ-R^qZ-R^oDnhWr;cd`q>gI]q>g@ZquH[-p&P%'qZ-O+rW)s1rt5&,r"8Q$
r=So,r=So,r=SZ%r=Su.r=Sl+r=Sl+q@VokLB.9u!!)`nrH\8?r-A8ArH\2=r-@o7rH\8?rH\8?rH\#8
rH\>ArH\5>rH\/<qg&,?rBp8YrBpG^r'UG`rBpA\r'U)VrBpG^rBpG^rBp2WrBpM`rBpJ_rrE!bp]11Y
r;cd.p&P%'qZ-O+rW)m/q#L=)oDnh%qZ-R,qZ-R,oDnn'rt520r=Sl+r=Sf)q[o\*aoMBcp&P&:qZ-P>
rW)nBq#L><oDni8qu?]srH\8?rH\#8rH\>ArH\5>rH\,;r-A5@rBp8YrBpG^r'UG`rBpA\r'U;\qZ-R^
qZ-R^qZ-R^oDnhWr;cd`q>gI]pAk+Yr;cd.p&P%'qZ-O+rW)m/quH]rr"8Q$r=So,r=So,r=SZ%r=Su.
r=Sl+r=Sc(r"7ogNWB$'q#LBorH\8?r-A8ArH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\):
r-A8ArBp8YrBpG^r'UG`rBpA\r'UA^r'UG`rBpG^rBpG^rBp2WrBpM`rBpD]rBgPbpAk+YrW)m/p&P%'
qZ-O+rW)m/q#L=)quHX,rW)m/qZ-R,qZ-R,oDnh%r;Zg0rXnu,r=S`'r"5S%d/a,jp&P&:qZ-P>rW)nB
q#L><quHY?rW)nBqZ-S?rrDutrH\#8rH\>ArH\5>rH\>As*=JArH\ABrBp8YrBpG^r'UG`rBpA\r'UA^
r'UG`!(6`QqZ-R^qZ-R^oDnhWr;cd`q>gI]r;cjbqZ-R^rW)m/p&P%'qZ-O+rW)m/q#L@*!"o,/r"8o.
r=So,r=So,r=SZ%r=Su.r=Sl+r=Su.rt5,.r=RfbPlUc.p&P&:!."JBr-A8ArH\2=r-A2?r-A8ArH\8?
rH\8?rH\#8rH\>ArH\5>rH\DCrH\8?rH\ABrBp8Yr'UA^r'UG`rBpA\r'UA^r'UG`rBpG^rBpG^rBp2W
rBpM`rBpD]rBpSbrBpSbr;cd`rW)m/p&P"&quHX,rW)m/q#L=)quHX,rW)m/qZ-R,qZ-R,oDnh%r;cd.
r;cfsr=T&0r=So,r=PFtg&V-QrH\):r-A2?rH\>ArH\/<rH\;@r-A8ArH\8?rH\8?rH\#8rH\>ArH\8?
r-A;BrH\5>rd"JCrBp8Yr'UA^rBpM`rBp>[rBpJ_r'UG`rBpG^rBpG^rBp2WrBpM`s$QfRqZ-O]rrE!b
q>gL^rW)m/p&P"&quH[-r;cd.p]17)quHX,rW)m/qZ-R,qZ-R,q#L<mr=Su.r=So,r"8r/r=Sl+rXl:5
_Z9X\o`4r9quH\@r;ceAp]18<quH\@r;ckCs*=JArH\8?rH\#8rH\>ArH\8?r-A;Br-A2?rH\ABrBp5X
rBpJ_rBpM`rBp>[rBpJ_rBpM`rBpG^rBpG^rBp2WrBpM`rBpG^r'UJar'UA^rBpPar=S]&r=Sr-r=Su.
rt58Cp]17)quH[-r;cd.qZ-R,qZ-R,oDnh%r;cd.qZ-O+rrDs/quH[-l2ZS>rHSACp&P&:quH\@r;ceA
p]18<quH\@r;ceAqZ-S?qZ-S?oDni8r;cb@quH\@r;ceArrE#urH\ABrBp5XrBpJ_rBpM`rBp>[rBpJ_
rBpM`rBpG^rBpG^rBp2WrBpM`r'UD_!!)sbr;cd`quH[_rW)m/o`4q&quH[-r;cd.p]17)quH[-r;cd.
qZ-R,qZ-R,oDnn'rt520r"8i,r=Su.r=Sr-r=Pq-aoM$YrrDtBrW)kAr;ceAp]12:rrDtBr;ceAqu?]s
rH\8?rH\#8rH\>AqKW&@qg&,?r-A8Ar-A8Ao0`NXr'UG`r'UD_rBp>[qa:A`r^6]Qr;cd`qZ-R^qZ-R^
oDnhWr;c[]!!)m`r;ca_rW)j`rW)O%rrDs/rW)j.r;cd.quHZqq[ri.r"8l-r=So,r=So,r=SZ%r=Su.
q@N]-q[rc,r"8o.r"7rhNWA`ts*=SDp3HQ9rH\,;om-K9rH\8?rH\8?rH\#8rH\>AoQg<6om-N:o0`KW
p-\`XrBp;ZogAZXrBpG^rBpG^rBp2WrBpM`oL&TXrW)UYrW)O%rW)X(quH[-pAjjur;cd.qZ-R,qZ-R,
oDnh%r;Zg0ob%'$ob!hsd/`c`rW)\<qZ-S?pAjo4quH\@qZ-S?rrDutrH\#8rH\>AoQg<6p3HT:o0`KW
pI"fXrBp;Zp-\`X!(6`QqZ-R^qZ-R^oDnhWr;cIWqZ-=Wr;cF$rW)[)qZ-R,pAk4*p_!E(r=So,r=So,
r=SZ%r=Su.oF^s#p(?$ZPlUE$quHS=q>gJ>o`4f5qZ-S?qZ-S?qZ-S?oDni8r;ceA!!)k@p]1/9qZ-R^
pI"iYqEt)ZrBp5Xq*Y#ZrBpG^rBpG^rBp2WrBpM`rBgPbqEt#Xs$Q]OqZ-4"quHR*q>gI+o`4e"qZ-R,
qZ-R,qZ-R,oDnh%r;cd.!!*!1r=Sf)q@T"ng&R<:rH\#8KE2$>s$MG>oDnh%P5p17ec>YoYlMfErBn@#
\,cI>cN&OsRK3;3m/W%ErBpJ_JcPZJr=OtgJcOU,rHYCCc2df1\H'AEr=R*NJcMJErH[N*OoYGJo`0UE
!"o2BK`H])j8f.(UB&gErBmjj`W5rL_#T&eVuZdAhZ0&ErBouQM?*Ser;_ELg&R<:rH\#8KE2$>s$MG>
oDnh%P5p17JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&g&Q^)
JcLB&JcLB&JcLB&JcLB&o`4r9XT8<Fl2^d.l2^cMXT8;eq#KscrBoiMr=Q76rW)m/l2^bpU]@q*rHZZg
huN_$l2^d.l2^cMh#Ph&rBoiMrBoiMr=SAr_>sNHl2^bphuJ?/quH\@r;cb@quH\@^B"4Xl2^d.rW)<c
rBpM`r'UA^rBn="rBp,Uq#L@\l2^bpr;ca-quH[-^B"3El2^bpSH-G*rH\>Ar-A2?rH[&rk5bI+l2^d.
l2^cMr;ca_quH[_kQ'68rBoiMrBoiMr=Su.r"8i,r=Sc(aT28Ol2^bpf`6[*s*=Wir;cb@quH\@^B"4X
l2^d.pAjgcrBpM`r'UA^rBn="rBolN!!)sbl2^bpr;ca-quH[-^B"3Eq>g$cr=P=qg&UO@rH\>Ar-A2?
rHZ-XrH[o5q>gJ>l2^cMr;ca_quH[_^B"4"!!)<brBoiMr=Su.r"8i,r=R-OpAk.(l2^bpWrTF*rH\>A
r-A2?rH[Q+f`:trl2^d.l2^cMr;ca_quH[_p&N58rBoiMrBoiMr=Su.r"8i,r=QdEr=S;pr=S2mJcPHD
rH[u7rHZ-XrH[Z.rH[Z.rBp/VrBn="rBpA\nc8VUl2^bpo)S_$_>sQ8r=S;pr=Ph*\H)SRo)S`7huM[8
rH[Z.rH[Z.rBp/VrBp#Rd/a,4l2^cMl2^bpo)S_$rW'e8r=S;pr=RrfM?*U#r;c`qrH[u7rH[N*r-@r8
rH\#8rd"MDrH[l4rd"JCrH\ABq>gI]p]17[o)S_VjoG<Ho`4qXoDnkXrrE!bnc8[ir^6YbrBp;Zr=Sf)
r=SW$r=S/lr"8T%r=SZ%rXo/1r=SN!rXo,0r=PS#ciEidq>gJ>r;cb@rrD_;m/Zp,qZ$Trpj)Z8om-*.
om-B6pd=lXrBpM`r'UJaogA*Hpd=lXpd=iWogA9MogAQUp_!?&r=Su.r"8r/ob%*%nc8Fsq>g:&q#L("
nc8=pf`79;p3HN8s*=Wir;cb@rrD_;mJus+quHG9qZ-86o)SE.qZ-R^qEt,[rBpM`r'UJaogA-Ip-\`X
p-\]WoL&3Mq*Y'IqZ-=%qZ-R,r;ca-rrD^(mJuqmquHF&qZ-7#q>g?loF[Ahg&V-Qom-H8rH\>Ar-A;B
om-!+om-H8om-H8oQg'/rd"3_qZ-:VquH[_r;ca_rrD^Zmf<#JquHCWquH@V!!)Zlo0`BTob%*%r=Su.
r"8r/ob$Wmob%*%ob%-&!!)X'oDnIpWrU'<r-A5@rH\;@rH\>Ar-A2?rH[Z.rd"NhrW)nBr;cb@r;ceA
r;cb@r;cb@oDnf7rW)h@quHX^r;cd`quH[_r;ca_quH[_p&Oacr'UG`rBpM`r'UD_rBpM`r'UD_r'U)V
r'UG`qa:8]r"8l-r=Sr-r=Su.r"8i,r=S;pr"8o.r=Su.r"8l-r=Su.r"8l-r"8Q$r"8o.q[qukL]I?u
!!)uur-A5@rH\>Ar-A2?rH[Z.rH\;@rH\ABrH\;@r-A8Ar-A2?rH\#8rH\8?rH\;@r'UD_r'UD_rBpM`
r'UA^rBoiMrBpJ_rBpParBpJ_r'UG`r'UA^rBpA\quH[_qZ-R^quHX,r;ca-r;cd.r;ca-quH[-l2^bp
quH[-rW)m/quHX,rW)j.rrE#ur=SZ%r=So,r=Ph*b5hKdqZ-S?r;ceAr;cb@quH\@l2^d.qu?_Brd"JC
rH\8?rH\ABrH\8?rH\#8rH\8?rH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6gk$Q!<#:_!<#:a!<#:^!<#:a
!<#:^!<#:W!<#:^!<#:a!!,Fer=So,r=Su.r=Su.r"8i,r=T#/m/[(squH[-rW)m/qZ-R,rW)m/qZ-R,
oDnh%qZ-R,rVup1j8b5@rH\8?rcnKhr;ceAr;cb@quH\@l2^d.qZ-V@rW)nBqZ-S?rW)nBqZ-S?oDni8
qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:M!<#:^!<,@b!<#:^!<#:a!<#:^!<#:W!<5Fd6i-l^6iI&d
6NI&sqZ-R,r;cd.r;ca-quH[-l2^bpqZ-U-rW)m/qZ-R,rW)m/qZ-R,oDnh%qZ-R,rVup1T`EL@rH\8?
rH\>ArH\>Ar-A2?rH[Z.r-A2?!."JB!."QhqZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`
!;o4^!<#:M!<5Fc6i6oa6i6r_6i-l^6iI)a6i-l^6hLHW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-
pAjgcr"8i,!"o,/r=So,r=T#/r=So,r=S]&r"8f+r=T#/!"n#eQ2pl/qZ-S?r;ckCs*=PCr-A2?rH[Z.
qg%o9rH\8?rH\ABrH\8?rH\&9r-A/>rH\AB!I4\D6N@,a!<#:`!<#:`!;o4^!<#:M!;f.X!<#:^!<#:a
!<#:^!<#:X!;o4^!!!#t6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-l2^\npAk.(qZ-R,rW)m/qZ-R,q>gEn
r"8f+r=T#/!"kY"g&M*QrH\8?rH\>ArH\>Ar-A2?rH[W-qg%r:rH\8?rH\ABrH\8?rH\&9rHSBgqZ-S?
rVutE!<#:^!<#:`!<#:`!;o4^!<#:L!;f.Y!<#:^!<#:a!<#:^!<#7b!;6Ej6i-l^6iI&d6NI&sqZ-R,
r;cd.r;ca-quH[-klCSmp]17)qZ-R,rW)m/qZ-R,o`4n%qZ-R,rVup1Y5lK@o6L97rH\>Ar-A2?rH[T,
!."Kfq#L#3rW)nBqZ-S?o`4o8qZ-S?rVutE!:rSV!<#:`!;o4^!<#:Y!:p3f6hp`R6iI)a6i-l^6hLHW
6i-l^6iI&d6NH]ir;cd.r;ca-quH[-kQ(Jlq#L!urW)m/qZ-R,o`4n%qZ-R,rVup1lMu_@qg&!_r;ceA
r;cb@quH\@k5bC)q>g,4rW)nBqZ-S?o`4o8qZ-S?rVutE!:rSV!<#:`!;o4^!<#:J!;f.[!:rSW!<#:^
!<#:\!;uoq6i-l^6iI&d6NH]ir;cd.r;ca-quH[-k5bAkq>g+!rW)m/rW)otr=S]&r"8f+r=T#/!"l.0
b5h-Zr;ceAr;cb@quH\@joG:(qZ-55rW)nBqZ-S?o`4o8qZ-S?rVutE!:rSV!<#:`!;o4^!<#:R!;HQk
6i-lT6iI)a6i-l^6hLHW6i-l^6iI&d6NH]ir;cd.r;ca-quH[-rW)0_q[r]*o+Cs%r=So,r=S]&r"8f+
r=T#/!"n8lNr]-(p]13lrH\>Ar-A2?rH[K)qg&)>rH\#8rH\8?rH\&9r-A/>rH\AB!I4\D6h:<V6i@#_
6i6r_6fe=F6i6r_6hCBW6i-l^6hLHY6iTON!<#:a!!,Fer=SW$r=Su.r"8i,r=S,kq[r`+r=SZ%r=So,
r=S]&r"8f+r=T#/!"kn)dK'5ko)S`7r;cb@quH\@j8f(&r;ZhCrd",9rH\8?rH\&9r-A/>rH\AB!I4\D
6h:<V6i@#_6i6r_6g+OK!;f.^!<#:W!<#:^!<#:X!;o4]!<#:a!!,Fer=SW$r=Su.r"8i,r=Sc(mK!+r
r;cd.oDnh%qZ-R,o`4n%qZ-R,rVup1h#N`@rH[u7s*=Wir;cb@quH\@irJt%rW)nBoDni8qZ-S?o`4o8
qZ-S?rVutE!<#7b!;$9i6i@#_6i6r_6fS1D6iI)a6hCBW6i-l^6hLHW6i6oa!<#:a!!,Fer=SW$r=Su.
r"8i,r=S&iq[rf-r=SZ%r=So,r=Sl+quHX,qZ-R,rVup1RK2%A!!)tCqZ-S?r;ceAr;cb@quH\@iW/n%
rW)nBqZ-S?rW)nBqZ-S?o`4r9!."GArH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6fJ+D6iI)a6i-l^6iI)a
6i-l^6N@,[!;o4]!<#:a!!,Fer=So,r=Su.r=Su.r"8i,r=S#hr"8o.r=So,r=T#/r=So,r=S]&r"8f+
r=T#/!"lC7_uTa]qZ-S?r;ceAr;cb@quH\@klCa/qZ-S?rW)nBqZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE
!<#:^!<#:`!<#:`!;o4^!<#:Y!;$9k6i-l^6iI)a6i-l^6iI)a6i-l^6hLHW6i-l^6iI&d6NI&sqZ-R,
r;cd.r;ca-quH[-klC_qqZ-R,rW)m/qZ-R,rW)m/qZ-R,o`4n%qZ-R,rVup1lMu_@rH\DCr;ceAr;ceA
r;cb@quH\@lN$m/qZ-P>rrE"CqZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:N
!<#:^!;o4a!<#:^!<#:a!<#:^!<#:\!;uoq6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-lN$kqqZ-O+
rrE!0qZ-R,rW)m/rW)otr=S]&r"8f+r=T#/!"l.0b5hKdqZ-S?r;ceAr;cb@quH\@l2^d.qZ-S?rrE"C
qZ-S?rW)nBqZ-S?oDni8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:R!;liq6i-l^6iR/b6i-l^6iI)a
6i-l^6hCBW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-rW)<cr=So,r=T&0r=So,r=T#/r=So,r=SZ%
r=So,r=T#/!"n8lNr]-(qZ-V@!."MCrH\>Ar-A2?rH\5>rH\&9rH\8?rH\DCrH\8?rH\ABr-A2?rH\#8
rH\8?rH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6i$f]6hLHX6i-l^6iR/b6i-l^6iI)`6i6r_6hCBY6iTON
!<#:a!!,Fer=So,r=Su.r=Su.r"8i,r=Sl+r=S]&r=So,r=T&0r=So,r=T#/r"8i,r=SZ%r=So,r=T#/
!"kn)dK'2jr;cb@r;ceAr;cb@quHY?qZ-S?o`4o8r;ceArVuqDrH\>Ar-A8Ar-A5@r-@o7r-A5@r-A2?
r'UD_r'UD_rBpM`r'UA^r'U>]rBp5Xs$QcQr;cd`rW)j`r;ca_rW)j`r;ca_oDneVr;ca_quHX,r;ca-
r;cd.r;ca-quHX,qZ-U-!"nl(r"8l-r=T#/r"8l-r"8o.r"8l-r"8Q$r"8l-r"7T^PlU`-rrDtBquHbB
s*=PCr-A2?q0Dr>rH\&9qg&2Ar-A5@r-A;Br-A2?oQg'/o6L35rBgWR!!)paquH[_r;ca_quHO[rW)ma
o`4kVrrDsar;ca_rrDsaquH@VoDnYRr'U>]r"8r/r"8i,r=Su.r"8i,q%<T+r=S]&q[ri.r"8l-r"8r/
r"8i,oF^p"qZ-4"Q2oV=rrD_;quH\@r;cb@qZ-J<rW)nBoDnQ0r;cM9quHA7o)Sf9p3HN8ogAWWrBpM`
r'U>]qEt5^rBp2WogAZXogAWWoKrTYoDnMNqZ-:$quH[-r;ca-qZ-I)rW)m/oDnOrr;cL&r;ZftoF^Zp
oF\,(_>s=UqZ-S?r;cb@qZ-J<rW)nBo)Jc9pj)`:pNcT8om--/oQg95pI"fXrBpM`r'U>]qEt5^rBp/V
pI"fXpI"cWogA<NoL&HTpC[9&r=Su.r"8i,!!)j-rW)m/o)SLsqZ-@&q>g1#o)SCpk5^29rd"Eeq>gJ>
r;cb@q>gD<rW)nBnGrH3p]1,8p]12:!!)tCnGrH3!!)tCq#L4Xq>gI]r;ca_q>gC[rW)manGrGRp]1+W
p]11Y!!)sbq#L3jqa1>`rBpA\q%<H'r=Su.r"8c*q[rf-r=SQ"q[rT'q%<B%r=K)C&HMbAnGrFu!!)s0
U]?kard!f0Mu`iEq>c*IquH^.M?&5.hZ3V#VuY0ErBn$o_#XEG`W1SjUB(7<j8bDErBp/VK`M)a!"jh`
JcOp5rct.:f)Ye;Y5lWDrXljEJcOL)d/a2lZiIrCs$O[(ZN1";dK"k!JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOL)JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&k5bF*li@!0\cC@_r'TfNrBn[,aT25Nli?trfDpL'WrW'Cli@!0p&LT_r'TfNrBl\Ir"8f+
nc8V#PlQC9mK!01li@!0ZN/k_r'TfNrBnF%ciEtUli?trd/\aug&UL?r-@i5r-@W/rHZHah>mI@nc8ST
li?uOf)X+sr"8K"r"88qr=S/lJcN%Ur-@i5r-@W/!."QhV#^E\nc8STq>g*erBmC]r"8T%rW)j.li?tr
UB#lGoDnf7nc8T5li@!0_#WQsr'U#Tr'TfNrBnp3ec>U[nc8S"li?trhZ/6.\,cGPnc8T5li@!0r;`es
r'U#Tr'U&Uq>gI]V#^E*nc8V#!"nPtr=PP"JcPZJr-@i5r-@W/rHYsSli?rNnc8STli?uOaT1,sr"8K"
r"88qr=RZ^JcNOcr-@i5r-@W/rH\):YQ4Sgnc8STli?uOV#^E*nc8S"qZ-0er=P:pK)bmsrH[r6r-@W/
rHY^Lo)S\Unc8STli?uO_>rWsr"8K"r"88qr=REWJcOL)!!)tCqZ-S?rrD_;p&P#9q>gA;q>gJ>rrE"C
p&Or7q>gJ>rW)nBquHS=rW)HgrBpG^rBpSbogAEQr'U;\qEt)ZrBpSbrBp8YqEt)ZrBpParBpJ_qEsZN
r=So,r=T&0ob$ltr"8c*q@WQ(r=T&0r=S`'q@W],r;cd.rW)m/quHR*SH-S.rH\8?rH\DCom-62r-A2?
pNcW9!."9`q#L28qZ-S?!!)nAr;cV<mf<;RqZ-R^rrD^Zp&P"XquHaaq*Y#ZogANTpd=oYrBgPbqa:;^
pd=KMr=So,r=T&0ob%!"rW)j.quHI'qZ-:$q#L1%qZ-R,!!)m.r;cU)g&Qp/rH\DCr;ceArrD_;p&P#9
quHG9quHA7qZ->8quHG9rW)Y;q#L0irBpG^rBpSbogAEQr'UA^p-\`XoL&KUp-\`Xp-\fZrBpEKn,WD!
qZ-R,rrD^(p&P"&quHF&quH@$qZ-=%quH^.q%<T+p(<Ylb5hKdqZ-S?rrD_;p&P#9r;cM9quHP<r-A2?
oQgB8p3HZ<oQfs,rBpG^rBpSbogAEQr'UD_pI"sJquH@VquH@Vr;cOYrrD[YnGrM"qZ-R,rrD^(p&P%'
!"o/0ob%*%oF_!$oF_$%p(@<)oF]URNr]-(qZ-V@!."JBr-@i5r-A5@rH\>Ar-A5@r-A5@r-A5@rH\>A
r-A5@q0<)CH$KAir-A5@rH[u7rrE!bqZ-R^quHX^nc8STr;cd`r;ca_r;ca_r;ca_r;cd`r;ca_r;cX\
"9:eV!!)par;cga!(68Vr=So,r=Sr-r"8K"r"8l-r=Su.r"8l-r"8l-r"8l-r=Su.r"8l-q%3W-&HWOE
!;mH-!<!Lm!7ClGH2@U?H2I[?H1Ct5H2[gAH2I[@H2RaAH2@U?GlRjD!<%3@!<%3A!;h'<!<%3@!<%35
!<#:^!<#:_!;o4T!;o4`!;o4^!<#:`!<#:^!<#:`!<#:_!<#:`!;f.[!<#:_!<#:T!<!N,!<!N-!;mH"
!;mH.!<*T1&c;Y-&cD_.&c2S,&cD_.&c;Y-&cD_,&c)M+&c;Y-&^CBB!<%3?!<%3@!!%<CH1Ct5H2[gA
H2I[@H2RaAH2@U?H2[gAH2I[@H2Ra@H27O=H2I[@H1:n56N@,a!<#:_!;o4T!;o4`!;o4^!<#:`!<#:^
!<#:a!;o4^!<#:`!;o4\!;o4^!<#:^!;?Kl&c2S,&c;Y,&b5r"&cMe.&c;Y-&cD_.&c2S,&cMe.&c;Y-
&cD_-&c)M*&c;Y-&W6YC!!!#tH2@U?H2I[?H1Ct5H2[gBH2@U?H2RaAH2@U?H2[gAH2I[?H2[gBH2.I<
H2I[@H1:n56i-l^6i6r^6h16T6iI)a6i-l^6i@#`6i-l^6iI)`6i6r^6iI)a6i$c_!;o4^!<#:T!<!N,
!<!N-!;mH"!;mH.!<!N,!<!N.!<!N,!<!N/!;mH,!<!K0&cMe/&buG)&c;Y-&YK-B!<%3?!<%3@!;q-5
!;q-A!<%3?!<%3A!!%<DH2@U?H2[gBH2@U>H2[gBH2.I<H2I[?H1Ct66i-l^6i6r^6h16T6iI)a6i-l^
6i@#`6i-l^6iI)a6i-l]6iI)a6hp`[6i6r^6h16U&c2S,&c;Y,&bQ/'!;mH.!<!N,!<!N.!<!N,!<!N/
!<!N,!;mH.!<!N*!;mH,!;mGb!/LXRH2dmC!<%3@!;q-5!;q-7!<%3A!<%3?!<%3B!<%3?!;q-A!<%3=
!<%3?!;q->!;HQm6i-l^6i6r^6h16T6hCBW6i@#`6i-l^6iI)a6i-l]6iI)a6hp`\6iR/b!;o4T!<!N,
!<!N-!;mH"!;mH$!<!N.!<!N,!<!N/!<!N,!;mH.!<*Q1&buG*&c2S+&Xi^C!<%3?!<%3@!;q-5!;q-7
!<%3A!<%3A!<3&tH2[gBH2@U>H2[gBH2.I=H2@U>H1Ct66i-l^6i6r^6h16T6hC?Y6iKIO!<#:^!<#:a
!<#:^!;o4`!<#:\!<#:^!;o4T!<!N,!<!N-!;mH"!<!K0&bH)%&cD_.&c2S,&cMe/&c2S+&cMe/&buG*
&c2S+&_6rC!<%3?!<.6DH2I[?H1Ct5H1q=8H2RaAH2@U?H2[gBH2@U>H2[gBH2.I2H1V+:!<#:^!<#:_
!;o4T!;o4Y!;](]!<#:^!<#:a!<#:^!;o4`!<#:\!;&YY6h16U&c2S,&c;Y,&b5r"&bc;%&cD_.&c2S,
&cMe/&c2S+&cMe/&c2S.!:g_c!7ClGH2@U?H2I[?H1Ct5H2.I8H2RaAH2@U?GlRjE!<%3?!;q-A!<%3=
!:kF+!<#:^!<#:_!;o4T!;o4[!;Jq[!<#:^!<#:a!<#:^!;o4`!<#:\!:iMJ!<!N,!<!N-!;mH"!;mH+
!<3&o&cD_.&c2S,&cMe/&c2S+&cMe/&buFt&^LHC!<%3?!<%3@!!%<CH1Ct5H27O8H2RaAH2@U?H2[gB
H2@U>H2[gBH2.I2H1Ct66N@,a!<#:_!;o4T!;o4\!;AkZ!<#:^!<#:a!<#:^!;o4`!<#:\!:iMT!;?Kl
&c2S,&c;Y,&b5r"&c)M%&cD_.&c2S,&cMe/&c2S+&cMe/&buG)&bclr!87DQ!<%3?!<%3@!;q-5!;q-?
!;^s@!<%3A!<%3?!<%3B!<%3?!;q-A!<%3=!<%3;!:^'f6i-l^6i6r^6h16T6i6r\6N@,b6i@#`6i-l^
6iI)a6i-l]6iI)a6i$c_!<#:J!<!N,!<!N-!;mH"!;mH,!;[9-!<!N.!<!N,!<!N/!<!N,!<!K0&cMe/
&buG*&XEF8!<%3?!<%3@!;q-5!;q-@!;h'@!<%3A!!%<DH2@U?H2[gBH2@U>H2[gBH2.I=H052+6i-l^
6i6r^6h16T6i@#a6iKIP!<#:`!<#:^!<#:a!<#:^!;o4`!<#:\!<#:J!<!N,!<!N-!;mH%!<)ur&cD_,
&cMe/&cD_.&c2S,&cMe/&c2S+&cMe/&buG*&^gZ8!<%3C!;uorH2I[?H1Ct5H2Ra@H2RaAH2RaAH2@U?
H2[gBH2@U>H2[gBH2.I=H11h/!<#:^!<#:_!;o4T!;o4_!;o4_!<#:`!<#:^!<#:a!<#:^!;o4`!<#:\
!<#:b!9jL^&c2S,&c;Y,&b5r"&cD_-&cD_.&cD_.&c2S,&cMe/&c2S+&cMe0&HEF=!<!Lj!6YB@H2@U?
H2I[?H1Ct5H2[gAH2I[@H2RaAH2RaC!<%3B!<%3?!;q-A!<%3=!<%3?!;q-5!<#:^!<#:_!;o4T!;o4`
!;o4^!!#Cc6i@#`6i-l^6iI)a6i-l]6iI)a6hp`\6i-l]6h16U&c2S,&c;Y,&b5r#&HEFB!;mH,!<!N.
!<!N,!<!N/!<!N,!;mH.!<!N*!<!N,!;mG[!07-YH2@U@GlW-f!;q-5!;q-A!<%3?!<%3A!<%3?!<%3B
!<%3?!;q-A!<%3=!;q-?!;q-7!<3&t6i-l^6i6r^6h16T6iI)a6i-l^6i@#`6i-l^6iI)a6i-l]6iI)a
6hp`[6i6r`6iTOE!<!N,!<!N-!;mH"!;mH.!<!N,!<!N.!<!N,!<!N/!<!N,!;mH.!<!N,!<3&s&c;Y,
&X*4C!<%3?!<%3@!;q-5!;q-A!<%3?!<%3A!<%3?!<%0C!<3&sH2I[@H2RaAH2.I<H2I[?H1Ct66i-l^
6i6r^6h16T6iI)a6i-l^6i@#`6i-l^6iI)`6i6r_6i@#`6hp`[6i6r^6h16U&c2S,&c;Y,&b5r"&cMe0
&HEF?!<!N.!<!N,!<!N/!;mH,!<!N.!<!N*!;mH,!;mGT!1!W`H2@U?H2IXBH2W$Z!;q-A!<%3?!<%3A
!<%3?!<%3B!;q-?!<%3A!<%3<!<%3@!<%35!<#7b!;liq6i6r^6h16T6iI)a6i-l^6i@#`6i-l^6iI)`
6i6r_6i@#`6hgZ[6i6r_6i-lX!<!N,!<!N-!;mH"!;mH.!<!N,!<!N.!<!N,!<!N/!;mH,!<!N.!<!N)
!<!N-!<!Lf!87DQ!<%3@!;q-?!;q-5!;q-A!<%3@!;q-@!<%3?!<%3A!<%3@!<%3A!<%3<!<%3@!<%35
!<#:_!;o4^!;o4T!;o4`!<#:_!;o4_!<#:^!<#:`!<#:_!<#:`!<#:]!<3&t6i6r_6h(0T&c;Y,&c;Y,
&b5r"&cMe/&c;Y,&cD_.&c2S,&cD_.&c;Y-&cD_.&blA)&c;Y-&YK-B!;q-A!;h'>!;q-5!;q-A!;h'A
!;h'?!!%<CH2Ra@H2Ra@H2[gAH2RaAH2%C;H2[gAH1:n46iI)_6i6r^6h16T6iI)a6iTOR!;f.^!;o4_
!;o4_!;o4`!;o4_!<#:[!;o4`!;o4S!;mH.!;dB+!;mH%!<)ur&cMe-&cVk.&cD_-&cD_-&cD_-&cMe.
&cD_.&blA(&cMe.&_mAB!;h';H2@U;H1h79H2[g8H2Ra8H2I[7H2RaAH2%C3H27O9!:rST!;T"U!;o4`
!:rSV!;&YV!;&YW!<#:[!;o4[6h(0J&c2S(&bZ5&&cMe%&cD_%&c;Y$&cD_/&HEF<!;$kk!6P<6H2@U;
H1h79H2Ra8H2Ra=H2Msb!;:^9!<%3;!;:^,!;&YU!;T"U!;o4_!;Ak[6i@#W6i-lW6i6r_6h^TS6gk$I
&c2S(&bZ5'&HEFA!;$m%!;$m#!;7$&!<!N(!;7#S!0.'TGlRjDGlW-d!;_!7!;q-?!;^s@!<%3A!;1X5
!;Lj:!<%3:!;Lj0!<)uo6N@,b6i$fZ6hUNX6i6r\6N@,b6i@#X6hp`W6i-l^6hUNT6N@,T!;R3,!<!N+
!;[<$!;mH,!;[9-!<!N.!;-s"!;I0'!<!N,!;lil&Wd">!;q-5!;q--!;q-4!<%3@!;ccnH0>8*H0bP/
6h16T6g=[L6h^TX!<#:Y!;f.I!;f.M!;mH"!;mGo!;mH!!<!N'!;dAl!;dAO!.k3&!.k3&!.k4)!.Y~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (cloud_technology_02.eps)
%%CreationDate: 12/18/2018 1:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B3Q=sdP1TJ^9?l##C2kZ5b8t2!<n-J"p<-O&(1G56Ga)dj7D7*m;I^HSfYjZch^1Aj^!tHl07Vn>ub1ZF8'RWeSEb$c*LmF
%h^c6K2mdVKG$mDB&3_,hrn%2+^&,*a&9n!*R<_$h4_efr?/+jh6/F@JLMnCChHOktH^A`Y]AIL+j%cN%C:)]cQ!EQTeBI;LB5f0>
%I>Ai%et9K^,H>(c4bZW)\5I7`Pudc;lK5al5sY=7DLU&c]:]9(0&W5DC84jgpYl+][Wr224*8G+VEYRNDAOW0URF0;ddDm-I5WT9
%,O[^fDjg+6o0Y<Uk_fHqp_"LBj8-<_:S4?"BA`AGqi1iP%Xbj[IGa*](OlkkroF0@;V:Vd^5)5Ye;h-5<YOTr;h4n6i*ri/T16L`
%QP%=cXl+!h5n:MOPhWf:8;HX(EX(>.ZP<H0?Y5r2o"S`Ls%f'mI`(VTcH\F4cMi81a0<()BB1$K/mI<>F'o!$/C>`"/a_->A^nHX
%>XL.5^8(JoWY'A`Q7*./[.mDBG4Gjo3=I<S"p*[%IFH@90!u"&1N294VA85fNs<"/2]jC@-1VoQXN,gnjBfi'/T(s$/$upDp&BPe
%Gm4hr0Eh0Df8/1"Re8;+BFue+k3fZmEJ*@Fgg4\_-tt`Yl*k>G'Xc9H/uV^Ld6lcnj8q3]X5;r5oIFg'A;B.6hGr>nC;$I#/pj`S
%C$Sk%e(2[rJ?<b%\^5Jq/=6qF=LsU8+g=2t9oe6Ys7\fLp=f2GH?3XX!7C<f;lJ#3]3\.;a1$'is!!EmJbBc"+#.aX6an!n,poL3
%>hVnu15u/!TbuhR]Q\YLN9Wr'/'%n`5>J3q_gKU(2Zg5JR6L-)hmqaM/uc8[s(iX(HQN.r6i:4>8LQ:K`nu$k[dgA7o@6HeDWfb:
%&"@hcroJFXbk&',k>a";dkJ]u@>Jbepd_fK+Z9]qCkgj:2`<1OYZ[rY\!BX2V,Y;iPmUj"<'64ZY>h_lV8>1]Uj:*F,9E&PiiVc4
%=_%BFAr%9&`b($n`0RSM;YV3c+B&!(E0oYDRh7=ONIN*Lp`$hS@WC"U'`KH7nI'p\0-$6katphFL`6942O+Wd,aW389PL@MP6ug2
%Xc,Cf^shK"nb=qdaXYtss'[_%&V":lbXfaDY6i5-(Mngc8kq0Vph%GVJ)aml+Njfb(6_6"rl/Q+,Q;:eZFDT.Gm67*PQdMgPU+@3
%Sg)W)RkaFYD&@UhJ0rT@j,pljaYn#\s'Zj7:s(118@LD;Hl6qBhq3m!*H>W$nBL_IgE;)e]9I?88PD;hK-af\ZP4<,G;OR\)&<RY
%,a,W1I@_P0Sk!DPdGuT`,^qk(CaR3cm^WG6cMtiD=]&>-RJ0Atm\3&J=HjKdkBl-1WP+.[8R`ul^lg<m+H]('4cq(jq$FMVXV5U1
%S0U,Zp4O]3\oPr6AF>h'2,/`&iMSApVYFe,Hn"mPIu_Er-_L;IDKf@j-(k+]p\F:=PQ(deruD5WoK`=)'_kSsao@5er]Br:IrKbF
%bb4$\s/iKrhoR8G1XnWtkE1PpS,(6WbJ3fcEO;7!j&RW5pp1NDr[`Bsh-L?pQ0\A;N<SSSD\lb.Iu52QXtktH[hXWB6DKUWX\bFA
%aM@$![YtL^ka=ogLTj[?0AD3I%(!=UjmBlA7k[mUg]Q09rH38)KM+Vh\:q^-*/'\KAK:,jr2&97Dms+Sn3=A^"&SaS^uU2+)3sP:
%^^u&THD,r>2*<C2D6!`10Ois4KM3RAcbqEF+i*'29qHGTa3@##JQRUe6cJ,K*<($fe-nk>$'d2`Cr<!epfSbd\-3^ir>HRZUI)G@
%K*Vbj_,h[@YQB:p`XWD!HPX*+6qoaWarJ27i*:6lFF,1hM.BIcX2'o(M')o<PQqVjcOd>l*;m/Q&=A?LJr+!j*o,nnp`@`^5LBKf
%n9-!YfdLLl4B(-E%pZUbq+^VkrZ`/>s#:g\2#IY"(1)J2"t?6>i-f^Z`-i&tf3)pGOY5Wg="CYD'g`lPPt'V`F;D_]*1'o+Ig-CF
%DA(g!cmJ@SM2013\!5*pVF%S*6]S>@48l.@%N'ot0+M_TN9s/Ro8if%E+]gBmt@`>NH?d/egN<K2bF:t4=L;j?E-P)@@UW?fjVP`
%5CX\d9!jBN`8olH,`/YNgP0X<eG6nf4_]$G!R;#?EBIj'Qr8MXNksU!X&,&90^5/?75mJPd4ImF+E&F2#h_$pKSGKe>V2/V199&(
%U!:P2aL[*sUkE#?I,0I(P4',"?!cVi'bljJm<aD#+lXU'pc&P>*oOCr'n#.&-mu8l)@jD[Z4>S#V0F[L(F1gc[V?Mp&hO)e+lin-
%#M0&iUW%QB$!YG<iFsJ.R:Uo%_a`&DGXPM<NAj*Mj?!a&9pS1\P=1*(_,V7b^S6ic)!XKih1@K$`%"u+))FqLL<HOcCl.VtHJ50+
%*ik-KI!3J&>jdn*YNq_rSV3,ofH-)H<^>qplGrUO=G:4L&[G`/_FSbP-"YiR.[@HHJ1)!Lh*TOITUWk]7*1W.KpQCG/jh(S$0-i:
%/1r=d-jdPhTKP^U0`kS\:t%sC/?*5<3`+7jg88RfQkiLcfH+WRc@GOmY#k0Q2j[^7/0Qu"arF9UQnXO'PNf7fVsKt-+A!.kS68;%
%Lqk#Y_RD=r;QOpQQE`%XfME4^25q8K+TtenL5[]U)?iAs:>(@kB;*7M@9eR:O/#jCKU>Yb=e15A#[8+FO]!EuG@sp/.<VKSkB4h-
%lat(D9r/P%3L1t%g^6sCWD=43$1aHg/;9Ba8D&WHm#-iA=(*%5c3eLu8<0HtO(Jt((Fl(G8@O:$eL1O@)=.Q)@9p[Z0h6o-8;s5h
%h\DAo2^C8H1N\cpaD_f\:KUQ(!(k)Gal/W>)/pn;,m$0/@&ICP=c@=j2I6G'#H[YFI2,Cg(13=Vb_eaN'XYt,5T#(as7=k>'W%O/
%f*]V%:r*dlU5*8FiXr=OIRgY.MB`IA:(YQcWt-0o8167I!`L%V_'[%EM=lg.>*hpZ.h/:BL1EKAVj'=.iCj%@IqNf=3k1c?*hoLo
%$Z>0c`=f*;Y60)A_?*LNN=1lU+:L,;bB1bmP0\d;9HkR7Nl<cW'NRuA,(q5ke0bq<GF@Z(ZZHi;;-7h$8:0<tP>'H_!Q+@k^KdGb
%TraI=#=@QMOsFJgiD3.Ee3LHj.3HW..r7QD6Jp9#M1XaHLmf@jV/_0$,qYNb8\%3^VWYp_)']Y6QP6kL3J]1FXn+0JEo`IXEdI]<
%-RULX;P?oRDiA%bX736Y3/NoX`YH$l\AGGu9T\*nd$jgZf's(hO<A?$6MaEh4B`Z#daOl"Oi]q2L3"$O">2hC`)#r+*=NGQLBX$]
%P(;<XFo9X):Mu:]Mla`p7CoE[M"%t%^p)$]=I3@M6B+Q%8eP4t[KBt&7Cn$I3XI8]WZ%f_@IbkAXap@Tr9Q5)*;o=nLo)$6Q`F@)
%BrD\*9f$Zm/]o\90k/9n&KEAF/'h0,UZ5GO_bE[A*;MO?f.rO5IrHH>BlP]t@M6LS$`,@;Mjhb.39n>JdH&8+'fe_!?T6q,7l,0r
%KX&G7UT_"&-CIl,#R1B*WV\Gl6=,s_Y_jpt_is+R[$HkP,*lX?M`1bIB-'V_#[>?&;GK_1(M`6HUe/9Q;PD5S#`/m%m!+4#dB*s"
%@[YE3"f^s,iE4iZ#)PK7F<(<P9:HKSKbh?.7lUU%dVV"2MTh?A`'B#UL)+S;KF7(gq>qs]__IjG$@@0KmoF3DVjSr*K]Q?-PS@W5
%JS<&oU0Mp'E[$YW1nDFVKih#C:/M-#]$qH/-!Y%%o^'c"7BrZ0H&BO.1>XiQBW6Xf3i/DuVU%Q,7L+&t1XICST=mE&C)UB,*W.2I
%'2\sX7@m4M&P4CfS`5E$jc1fQ4V"ui^4JC&Gs*<['K)Mk:dN.?>aMtLIhP"Ck)7/RiADob0@N!<Vj'`G$s>.h7ViP9)&maY32MoR
%-]2b8ZMGD2O;0=f<%".D+n:8:8&-J(PQ\P@8Zp!7a(n*=iOL.;"uu-!>]RZ%%*KqGKrIc:K*K@oK$-,>SgGhQUfAPe!hlj8SejA<
%`G#ZBk?N9l3eo+]?Hd+]*pAO4;+a$hBSf9->OmO<)r-I;jRJY4BO/t=Z6bi::?X>m&=.K;C,*gNZHLNG1&dIh/6tZX';!&hU7&56
%2kEX\Uji/l&Ms^%,`-UqFX4:b_ig/!Y@A+j=]mJTp!L:P"_>,NE7Zpll'Md6pF7ABT[Lq,Ih^q=RPK/i+>I1"aUWV_R1OI=LiGD[
%YbIXTYV?AD8l2n@:c"B<B*.O`h-OgGK\V8*bFu$DG^IN;9KDZ9Ot@aHUX5h'JSmj.?o&$UP*o?u*gQ=gSC&$$/14LgEE<)JaR0@U
%@LIla\;MM-JUL[]c_Z;]Ou6%RPWIho@nA1hQpgIZr<\i`[)1gU3(@kF\>#jKG597\4)mSU*trf".;hW47Z>Of#A!(8OnO?g7A,^Q
%/_u&DM\`Opa-dlPO@S;jZ'rn!&4t9dfXu,i=k/+C8ng]PO<T-/nPu!m7PQr%QD]Qg!6S\KjF0Wd5%ud6WO=7BO&Xtjc*3<#%&3'k
%$`B5@?f;\lYH"8Hp;GNlON+B08X)VhT:9o]?>XG:<)n+i0\5:/6q?Z/8ZO2_F8mVu/BU[uKe3R#:C@:<#E?VE6>i$mU/B;D1>R46
%B%kPXH8jb-&Dn-4m5KlY8`.'D19%AUQ%W>X2<(0W61GM<W_enb+PR/p4%Q1>-[F@?.O%RYeTRO+I&40Aq!0I;19$nOFb(L3n=QRh
%%5%rb<(;@XSsII:@A'+k/^Z=g']tNF!R5]k_R&6$,:SLM)(KF>BgST\+NfDKdWZAknsBZV1QHD8&ijW(7(/h_@Yk+/P!:.7Oi7XG
%[GMTI0lOS.bkl/"OqpMhFr<1-B:i@]8mrC[Gi;5a-d/^7pmn`u\pY=8jJ(9bFd'=tk[7KgE?>m^EP`naKq5[S[^)Fn:K2s%JoZ?[
%PZLH-AKnk`8[L.Tho/4m#N->o4]/[JSAPH?:mBAG=DfKd&=gFr9Vq(oa)P^:dX!YU.?<Fd+>R%M2@aA_<*1-]=C2J>)7`.Ids3Z/
%K*lY"4CHR!;&*RmPc(630/:ro[!V:@,TA>/Y]<6)L1PDUZc4M3<i'rX:8,oO9Y>q:QA*l*ElYG(&-Xsm6a.an^ojV`$DAScVhRtG
%3gs(uH\S?o:jpJQG9O?M#eHn`A'>:<R!Ae"9R\>AZMmX'@3oX#iH-_SYbI4!<O1t8f:+WK^(t'KX\5a`a3n`Ubhd9I)Qbf82>Mm-
%*QHple\AWNS,gU5>&ZjBM8eBPqS-*Z/NDU*o\e^u]@FOICnA*7om]Vg>3dHZmF7VFN\BPYl@[m?BA57,6`e3j^A$=S9_bmN#N-*i
%GQ;gDe+]gD\7`,`8',6dq5Ac8@)C!?(NHp1ra1Z0?2UPHho=2aX'Pa$>g)N*I"sq"CeGkjj<#?L@4mN)^ie8GlT)];pu6mnh!!\R
%0#1aQ;<V5DQXt3&7b!`/JU?WWq3g@DEdS4I836N^)]$a)kN*Z)gftL)E<HpDkt0#Z3UU[rq(loqY&JdV2Tl6s)c8D+CJ=]mj8T-=
%"*&a9:_H"pQii?_)+/&a+##HF,jrCm2!;C)\H4D6Ih!mF`!4ql9LD8)o3AO42f"uaSiWap2\K-[e!9<_!';k\*\!:Jrjk4+2<paU
%6keB5h.['g,2f%=[)Gj?k-!VmkseEH%$P<npUGIabU#;>]is1mEHD?-23>UN]3DHsiko,oDOa9$92VH]5ANbjkOiSmf^<n-F%<?5
%j):U"V$WY+3a8p0Nj'Ca0;]FS+gLftCF!H`M,F+sBt?:YN5F)(gWdDY9@_pUWF[F]cBB(_$.$Y";eUB#6N:"ae6RR-m"qRY[tFrh
%4B(NaJ];B8<[GlQ8&CK'Tc#idgZQ-*U;I7.]AuMh-863!JM1l-`CN>a@`Y#u9qeGpoi`A`RLtJ>fJ\M77c:fDe5%Em9$$5FHF!f4
%3UG;.0fs)]RN.>mo`ZdhBlPuQ/?H0r/$tM#&!Im@a5C=jrq#^O7*jRDpu:8e%<+SEph]70of]bcJ%aaqH.Aq6oY"M5icD%qqq$Ko
%X1>'V?T+?lE>]&8Y+P?t1&)*:TjaYNNr%L0cg-Qo4)Rq(/,*S\fhF*YYO4(9i8ETmMnE?_q=4d$-\jBBo.5=1c`#5)\""'doL/,'
%`m*_1gVTIYXWL=FbJNBrfI0+U*gR&O3&W-o>H_U'&fXOQ2rj=:,^s=?iR_n@0M4$A'`L6Y'MK_Z''F95m(Aeg'A7?5dJ:+Tl^hb)
%7^RN4D8rno,-At?B_F(QWnllOSAc];NMjbQDQeID)6J);kr#c&X)'aQ"-PUualo6_S[d+.J+V`422aoiCHjE3R]XJFSJ#.j&F<4T
%4Im^T*2Zn8;\49b+E0F\4hb\U?E3VsB%H+S=\j4'ihK(iBepf+q\cgQp#[[WQu\4ke[4E'YgmMjisebZAAKZ-6IWhbj9.=c>$#]*
%JhS\W.S8)<lV"4"H.D1V9UA%NIa]hr<1,k"-ft+[\%7C^Ai[/<(6RDsZ<K_?IheN(7V%k%81YssBh*=aEcd5TDY=.Ddrkkod!4*@
%G8?n.//c,iBX\97(89PhLN]h___RTq80;AG1UOU>P5g#0^tMj:jiGk"lW@uR)kmbX'I=?sZ:Gb2LoNu>Dr8I&7mF^.?fCP8P6hiO
%C3?W#b<V)`l1EPZ>'sLlN]*CVJ,UpX]&d7aKgBK92<Sq1A^X^.7t*lT9]fQjrUdtn%(OhCnZ+QB:,Q8#/:(<up+C]:SpV:`BoT%1
%St*?+)*-0"haS*)<oH,fY2Y$"POYKQ=dC&\E*@L0Xr?sa%'2pX.\<Q1!MuUVe8bU.<9kenbN//NG1/c(CA\tJb(*5KmW>4I`e4f1
%S/+`app)btKh_G^NGM?oA',rge?!"h12SfamJC%L9=8g<ZVE/=acp)ZRnl!<0/TiWUDjd@T/9#`!qVedc%aO$*L6Q*r5D.TlZDDh
%ZT&l(fsUq5:6a"Nl7\o_c+;X/cA^X[&?<lPhd15cSbb#,g&**NB?^coa:hii;>c>$l@"D_kJ\i3;`L.C$p?E)?t[<lSo$ZMg0@G4
%i67/c3V.%Goka*@YDlDkhEAW4]3.7^\QpF9fReV>+ut]'&_H+2Fd-j64Pc"OB/($?RQJ#AMo?b.@LmahL\uAb+_Q&<D6\jI*L"G`
%nmW,TZ%p!E6`(S4GEFIe2</F42uCV)CE-nVYqGa0(]241IH+0?D6\#lfJfCQIB^])nJ%5f#4*:AaC*Q`Vl.4'>\Z-)ok7s"Z%5!6
%k.YE2E4tro`.Wp(\n(>Md`n\Df<;^3B`0q/\HY6Q$4W<%X[]2;H2e=P$]D;o]W?KR[@VBm2sVuW;"#@1-tUD3OWdq>aCZnhQH@#$
%J2E\+8<_;;RZ.3-e['E=2cjFQMcW4+l=[6LTCl50m]O"Yg1mZ/2+R*%/b3P4r7N9DQ=5&FjNhGY=n4?7#/guG.qA9HCHJqH2TUDI
%oUktk0@S<7Wo]Jo2!$bE,'L8_ht6\f:4r\.*T=ENV:_7r26-dbaph+FglUS!^2sUmh=bc6qHup,!#]lN@"+)'m,0JE$fJ<8\GkqI
%#a;EF?ujF7nZk]u/.sUo`61@inKQC4S9PWK(s9TE&hf0]b9HJ^8A$Jd0E:gcbOjSbRoAK+1C9jE&b+"e#3i!JQ@#a(`6;jrDVU'`
%^HH-b:!5BN#?G@qA73t!XN5G7_lOq^ObF=(""Ru_&8h,B`LD$oqi*b@U/CCI8+i#?p;Q#N_[FYh091t>S/.%CPesMi?Qc]0h8S)-
%D&t9(EOo;N3*h0?M\DTr-TFgn9`JO6*P%b$_T:bINUX"of7T!A_hTAn)+T_+T6TL\.h4u<8,6MAEN`e#A6:a.^tW8'+Yi<OK6;+`
%qd;4RZZmRnN&0Vjd#4BWD-J!,0k#p-VQ2`Oa'N;\!jsRp<,IMN<#-IZ3"*,CH4)[mTnM"]Bd`>C2RMLJ`k$o80jTanbqWOOj7&IR
%ZZXu8[;&rd^2hYXWY_]r#.:V.C;'L[`Q2]_Dgl8E.Z<%U9C=PNf$B<sA]/4fe>RtN2j[_?=02'7CaWbYY?>4+Dd<7oNV3iCk>AAS
%BBa$][MrR4YW1*Mk+4d:o/tK3P&pNuq;Or[).%A#8,E1$CXT;d#2Tf:=N\pn#gD&@;H%g)bO9JDB'*g,RrI0._V^bWJ*2Q2"ul1e
%SIA+Jf>m8`j#j#bic.$fVeA8aU4lD8[ngQ)"SnubG4>_2,(i*+-YSY/ri<,'4@).M&'6Dp+J4XKj;(OQcgJAhj.DK=/<7'E3%gdF
%T8gg0nHAZ(/<5W9a;8XPm.0?^]/IrE#5PG;O_.\3BeoC.:Qj$BB7>n=S0*4Xelg4n7,4j[JnNckC\BCTWnllOVXrU9`m[9>W7O5t
%2<&56=('7s/p#mjYU+K+FlH"Trm:i/ZTPDBf7$o52-YjlHFGqM.l$_,&[jd$2_k\LWqE`\4)IK\&<0bnHBq5Ch_u-'ebq=kP)4KC
%gQpX=)</D>h\9TVcfXA$(Y:C#1V\$K^tkP9<GM,=j=_bA0#P4^o4002ELu!+Ls<Ar\ClXbg_<9PpHK6K9c]]"1GY87_BBf?)*IDV
%5:,@aAXTEIcJJTbH.ZhGru<+9nQ4@!#C@cKn3(DjK5OqF*H!0r`*p#oo8LMU(D5`74G#DNme$1JDW\'QN_Y>,$0P$@k2)fG8Lk@p
%gAB@/?)b;_;_hu,2heA=L:s!mFOH!&B$EQ;>#1(21l7]eii;X>eUtCh,C)Ldj;)2_5@V&UT42CbN7g<b=`LI\+V`qo,Jcn;W7a2U
%ncjgdPkf)ZE%pldO6cUU1[fMDaM\<Vh/kgE7I"A"GGsT)ctFsSSA-PWM\=4j;e#QlB!?N*dX8bkan3PFP8s+1,^aT0#5A(n++@;i
%S)<\C./<bq3:iUpeC/\$0$>$PU<rY,<p2WOMKRCmIO9J*D7;.(/Fq;,HBuOr+IB2];V@K[(@Cms&S7qLNbYtJ\,J1AQ6f8'Q].l^
%VtFZ!@k<04ERZRQft#Ve:(+H\CR*1'3Vk6m@l!N$mAGZ74)1>7MZYc?X>Wdb2-\<VW`?1p/piR+9.D:=GZnc<lHM<2E.hs`C/fC]
%=X&'ll*QP0)Lk5k15Hrq[,%[OdJ)agdkgEYXcXA\*F"RsV"FoANQdF'mn&."c2(uu4o'M_R!F0Xl_Y]LR)uD#ogH[cgc_'t9nl+%
%FL%]=;UN>tY2bShM+->$CjQr4FPUs,Q0gIgn8*Om48q4ZEJEXGDL)<Z5Bm0FRL49+;Tsj?rFVVDO<qF$3gYC#$_:Mcgh<6G<UpUM
%2:(3?1tPa=2sPq-IuoP!+@/)heU(His0CUjSDfr\\8892-FYeo%fU@HI<FC][*CGnRk62Kher8&L#pKCJq`;j=MBLNRhs6Q(=0Cu
%BZepYT$%nspQ%?(Or&N/3(kjN29b!#cGQlF]9CX`;P#Y_P*BcRA3$)hMC4UT:)5,#j(pB-;@R7XSNlGJ9Q)!dmH2o$=<'O_%rObC
%(NdsW!uH%YPl+68FXdb/Z[V,f%=*G?E_cMVe+G^bA1IPDk*:lYKC3i2AUD<P\!r]-h:,MLh[l!%Dh2'(c8pU)/RE'Q-NOGT`:.\#
%NW,,m.0#]E>]44AA(K*BDC-p?k9m.kA*g\iMml_?MB`)4KllH_JfAp:`,G<gVJ2+Rq`p"W$TU'a(,+bHm<k:V(NSAsQZ:lhD=tje
%3WHXJj#dO^f?*[Ab[ZKAN?a??EW3s\/F%d%a$a4FlKPbn1sP'TOl<Rj7B+;V?-u*?`_<Q(Mc,O'WQ&jri"thc]?0$bms12Sr.G6[
%`gP_O\=+M:/7Q"UX>\8,g>@:Xj-8gjgq3/bh2r##=b$4b?9ETj&tA]Gpa!b@Wf)hUe75%<7UmcNiSXoN1pZ&DaCre6bWB`(^W:(>
%1)dL=R70STOjR9A1hJJ;6,sc#GoJ)[GO6[!iH]h1ORN5*B<=n+5'-^E*B2rE%HD&33\mE#ccC3=#^#4s[926kqr@rEQtk]A`LF-p
%o$(:m8adbJd,V_bih\].V@U@bYJPgN1sLe&ZIujX:\63pXK[NT(@g6gO7tCh$&a%H2GdMoHaALQ59o%.:o_-`pSJu"ARNq1gmbur
%n+XO%GnKNt!kq+=[g;aE!T2-3pfp!Z++l]RF<"/lN.9`@e+5BGREg&=[sSkSQZ(O8q;rmD;maVYGgp0IhR.E'Wg8//Rs(ZMcI!)Y
%^U"4!hgD09n+&lMq<"H+)4S'>/WA:<$KZ2fn]I"2=;\7A9q68<SftWF2X;VUe3#tl4b`L)I[>Z4nZ,_HZ!l2u,=B;_h!G9:AFUN"
%7G3YOrpO;Dn=R-&34"K"0+6*rDeE[,Yc!]XSQJg>)-.NHRf33;)rV6rA.YfP=ZNf21\3\>#8st;9'9'X))i&c7U43(D]-3!>5/gf
%C]duc^VO-O]\8V9SZ>4ZNA'=(G;m+%b9b3Mao?A`?d7*PaZQE'=^3u?E2JW9ba\86BrJQsl^&3*Q_F1a5!8*=S=(1S\qG!ph&XP,
%fsYg%?N)sG#C^6IZ'dOZ)%oqjA&>MoF44J5O?qVrgTAXMFaMVS>.i(pb&/`Q3n0T>%dfXRe&dtF[9C7Js-[G(9q"fbWsm!O7njKm
%MNF3a?b63c`,CkRXm[rU3CJs59acqmX-lESWn#s;DbTgiMEtG+Bqa(U2rc=(!IWFr;;H)#3KHdJ3\@.d$mKm.T4N$l7([0,&iKZI
%IUtbL*/8@\cKJGNbA!Ylg5b4nAC.1%HD?V).)%Fta<GBM0/KU*j52_H)fQqcnr5WRoEGFReXKNpOp.8!8RK\],t]LBbdq8N):HNG
%=,Knh=f!O)6c^%N-o7#Hc_=S6ZLl@d/P66!E_^@H1'uLtf:q%+J"V+OC/M8ZZ`$;qe=ujo<gt%2MdlYfC/H`(OdS/oMcu?Jor&\7
%-o5AjDJCaq-5i:u'6]RS;6h<#03\C"maB<h9hcs@?:2?%aijL/EE8qDY6?<9n&14]@Dm)T`AD4HUJ<\BoDWQm%sOqXrqt[Hnud7C
%dB_g5kN2'&htStGWSeH!8"6555J?`Ya3H4Eh1')$1;%B#VAm)T,ZknpKqV]f3\YZ"$_+#5]\]_=K1@U36-$04c$efP$QUfP$[<8a
%N:e_$qS-*5F=lEdqi)ZphP1a]d8ne$-ZQ<AmWHfr]2:@F"-^=JY/))*?-Mih;UfC0cWC39e"]sEnH==8Wol`%5C&@6M[9Csl08*M
%e4.Xm0c2c8]S8KuQBO*6K7<;SMg&A(roo2cXjHJWG(2C/%VWb'Zh7spr^)lP.PtASS7gai%mGV3$?K=a]P>BbNKMtJ?[:Bb%,8_V
%TY0H4Sq16Re*p$M^=Y_Zfe+J22dJ*+m+hIDmki!)dedDHf+rc2%^8.uoA"6Odha61q\NL"i25sY0_g)"31tdK9ChR$RhM\no<K>D
%aIBY4gBp[3c,tC,@>5hPnH0#8qX&@3-Bm&dIG8mXH?Nut[Z@3m%GqPTc5'567#5RSQA]T"f*I#d4nE&*O`A*dk;e*G7!=O)`;(=F
%CXP$K8SJQo1@^:o59Y;+RGqt*'E@sce$18.5[aC'1Y[*UUm0i-JUpKR%+DTQMZl.2?QAm\_ghZ(SGoG4^?L.@>qbs*pMBWai#hFj
%h`\L-)"?@8+8GKA07S]@3$D,?^bU:88]U?tQomJ"%$Vpm%NSRTP^S4P8f]J7$$5PCf>?AaNBN\'0XI4aS8<KFUIO&+`f/^P$"DpV
%Tl6'inO#)XCjZ=mn-'NCEIBQC,d1c773.;clMrejP<U@)*>^+s>l,'',jS2)qS3!o0WHdSp'o[p39_Z#:"fBX@g;[Fq:rS0j<HP!
%;X#&Q"b&YNch9.s#/u;p@R>$&f'BGX47uAC0?EN'n%#4.\F>)c72HJa?(SDAf[^#"]3Kd2;'Q@rb,oChlV,Gu(PmG4pk]-H>2c)&
%(ENRFIm<#bBNH&i.qe[-e]lu.asa1amd\r6jR2Qd]k6I&B@Q@N:(0mj0j^4a4f[1WdXTP*WD;aNg6g"ZlHg;;H5Lk449nP9d[NIm
%$"PhT9ag>,Xm/>;0sO&$O\PjNU%n'_0fJI4H^p)Ip#mYg.6gQP$[8Mor9G;UQ(QaS!k+X/+\+Yq]hZ%Z3<SF4[u0BA-UN"kf2+.X
%fd6<@Tf7aj+.<"5cf\o>Ep*)@)3F;IYiM?E]m=bDpp(pmG2BV90DFNMNZ)C=T:!3dC&FD3]=mQcB&4'sa`pO]guMV^#[W)N9Z/@6
%Hdl^Ag7-ThO.0iDPEF&\<]-=6nm8^A5V;`+fP6D`l_N&7+(HZ^mI%CJ),<&_aUI#_1[YD!8`$2:QYFa"568s_9[)NPmRB'Q[/Pg%
%K`C^UDV%:b,a6GdXU/N/Pq=oR\;%<a<pSO!eFg[jR+pqLYBo$[6.G/=mJ;=29K[M1G?TutWYc!;\uD0Bj3IIr>F%I$[Om]Pr>dhB
%QRR?,F5hefo`2:[00ZY79AdKt,UdJtAkjY8^uO`djXL^9W43_SF8P@7'6eM$4Dk@T'>n_CM4/(jkUb$H\#t$Y;A]5tOKFhLX/K(b
%[iM$?Q:>tN7?)Vk+*JNE/d0B1;l[8ED4MmSXBjBJ$""(0\O*LS;M:?L\X$_OR"`)Lh*#I@m96ZM%mT-Vge#A"2$G1T'U7BA'>jS]
%nGTHE;TMZ#pT,AGB\Zu_dD0g/gE#+>R;8k1_Si;i65(`7FDGU8]'ZHL\Vf*cec=W*YN7eO5pq\r,<g^RFV+SO)oGWb8iR9g%Wb_!
%(!(*e:8a:ib*D7S`45b%c5jn(mcN)9oknkLDq)DIO#&rg&Ck<f:m[p=c_to`$&Oo$NCN4ZC)k/n]ga@e1Mn?Hd-&c87/HIOlUnoO
%Cp@%:?F]W<rSL\YFr-pZ63gJqZQ9&aJuYG)ls3lt[[l3co/_tNmq:Fi_JHMG+]-Y?O5$5+\;KGVD?09gdAX2I],PBs9?<qJ3uY;V
%rBU8N\ecN\F$&p<\1qO27da4n)pfTfj"8mI[TaP_.:9C)]TLef4hN1Z<dKa[,gT\^)c.$I%[!VsrHCO57ZkC1EB&mr0;C.Y"LuG<
%c#SRl%sKd.gRVA&C7r[B[FSP%+Wk^fTqYC0J#?(a'Ln[K;:Os`F$SYSZ]<Hn>K;M,8bq&A<c,W@l_@1^;831_`72lC6/Bk;-F-E3
%;<-.XD).g.5NtJh*9]aXB.f,`k"7+49?LfY49GniX`c;!%:N!!afAH$I6I)=[!#gu"^t[pbJR@kYQ4"dLUeF95-tHue^tLn?^&HG
%)d!/rjp5nc<P&4=oOq88<gd_67X&D\lhV!nWS>U./"qBohB\]%3q]ZHP<SBR[<h:>)n=4"TS\\M&^o*b.kZ]n!Q?lMihe'%fOh<o
%+ES3i(*s[BOq?#nOWqqAj7WAm>8GND8E&X\HbqNXVC[eU56KU*-nuk@aOFhW^hL[D^r%R1N1?ItY1\m*AGQa*E\bD?s)AI>UoMim
%4\=Y?-f8,Uq3-.!1.%1dQ>iZ8HMabLbDZ9)R`F"DBq@[Yl"Z/nIi5XI3Wnco+k'#,hs84R=Cd@P\r%$Rp@#&0HXQijqM0gU<YK`-
%jjd'a!Q,hJAaU;?iqGkHI=jCU8j3GND2B:\Y]Wr_9kmPkNGjBk?^+S4CO"$_n;@35Vl4_qC#I9u^b-obSUBT_Wl=A8J)Td5'mFZf
%CVnHY)`CAH`6gQ=5qAUGQaS-Z2/:-DOZG%>9NRQKOmrJW%8Z8ff4-j'D0CKE-QP3kHN](l#<8`Q>2uW2g.H0`#0h%$WP)^WE4;0j
%#F(q.XtCl]9T_Mi%"1(Mb>+or<4)KI#1_GGqL/rTfS2$h(]Cu8h=FdGV>>6"eM-ZM\-pVV!Ij@^r"+a.\rD(h5)jlJ/hJKVoW*cA
%Mp4[Pbrgr!HW<FN1n**1EE/L\.rS`@/Vcss<ElgL-h5PSN%8'8NgUE[TtGucWSI&`EIh0`95r$qhRfJN+5*Q`e"+is,-#."jMnd0
%NlR%3VcM%gO?sXB5J=kZg0nc4#d,U)Uh5W+a@4.'Q-$;@TmU[qF[cWec69mR%*l2JM,`#A9]BY9EGXm85u[0*/NN%NOA_U)XRJcS
%U^ei;18YY,=,T05Z_j>S(f!,.4(4[\ZYQ,_)jqU6*VS%'+jt&e2)@=oM$cFA)GsK]n19'&o6)_CC1B4;V7jd?*D?,6JmM#@G=8>C
%n4`$XR[o%GFl$m5B<45B*7+1R#0l*:"#cq7q"!I!<V6!+N.KukW_KnX:)rif"?\crX%)d6`-DB+)q!3ShR`AL.[Ct0g\I5nB]4o>
%Qn'&h!)Q%klk9Mj>'@-OF)m$Yr7u[CEd-RNa@:Hu*U*[AZ@W*ZT?/#..AgJq;OAa)N-TcO7n[^%^n0/IVlard8c(C!@PrIBbV#GS
%m8!@m]4:$XY-g?>/0ER3[+DC>o;&mY#[9B]E@Q+!Q\h^,jfaS^!hQc8FjH=c1nmpn*%nqH+6IY5ifdWH'm1ZRrk*@JDK#RHKA97<
%Pf&5ckn\Tt63E4ooh#k0_ttW]7*T<o6aN#8j:ASj&0n%#IB+jDN`i31CmiaMS:aD"1&7>2$&)g[:=cF76Z+f(`aVSbi$2l3o5)'&
%^m;9%^%J<]'7K8H4/l6CU4*9H@.Rid'^8^okcP?q<kB$Skjc2lI+`8*Ck;u7V%_1</!c;C'DLhmNZ7k8q_TAThdJ=PH?TisGmK=$
%.\G=:ICJk_/g#;s1[K0*/_/_gK&?1INQUYPcd]6EZ<oUQ6)0b+#NToml-:SZ,8tl`dEd%RSGG:&>G4hTQ:0TJiYW$Y=l0fe+7>IG
%\.Z0O\h'K<9IPuZ\&Xj-KU<ha>*_)&9\WA>.s\IIo:jXsJqWf]b"F@*2D9+G0L;>bWGS';>k(hD*8H_Ahrm?1aOq?pEi+Q.dcP0"
%Q=73ZHH>9Po4%1FVajP?4hJHI]mm\+hqM?fY-g2@cWAD\\$dcq*\Z>&eY@NTNq_\t\p&L4mENZB?0B2LcKG):C[GHYYH1s?_-PN0
%DAu'Cr4RLOfXS8rqDJ:lmHNZ3c<=l8H32!cXmXtZb>qj'in;N,4)7W_pom_Ip:OSSkO5#PN3uU]!!E)Zb2!g4j$pNUrCbQ6\GWjU
%g"P\@>]e:64nijg.V7eg]AiS)rHBqhq:+%X);<gc5<SVr^Adc8E)aup*BgFZDWT'qdu2A8[?XMdnko5Qh-OZ,UNR!^&A9RNNq[k]
%dkC1f@UlP1Ic[q]hCY;q+3bKg^>1;@c(,ql:LDn,`uW!l4/K,n?X*$ehN.5>D=^eJ3V\'$E4C;-acgrkeTroCpjMC(FhR(S?7ML-
%a/_uDGO9a<MQ\(NHaHhbs/&\OHOla`h7A$K>-171poXO/rH.4mLGk,>Ol*>!q6j3$\lC7=m_63Ggj\n+=4fOGpB)"PYdV,cDSn0b
%lJ!t-KkC#WjeHJ#X&&Z:cd1mjs.j^N(Y[D6o?kO7WOf0s[lSGYErQ$iIqK_.Q$V[d"AC^tT.MWZNf+?rs,qBsY]G#j[/'@f]Cj4<
%MpGgs2a;SsTDPJ9f1/Woeip3<-b$ie^X&Bn!N"u9_qW7u:Yn2%FV@@>]Qit^>8@;:[^K\5?Z,=uT0uKD<GjtrfZ%>^]^V24TdDIP
%EUq/I6[q4E??n$74ajfRc0\/bf=u<Ded#t(,l#(CkkXiCa&`#Tfe_%']4Xo@CYrKI-#T_#6[sGO<t5>7MHag&?]lk*9@"*P<U::@
%]i?U*'=l;+kCqrEoY+B78*03#b,8%DJ#l/frB!I:jN["0s6fbCKtUB(^O1?0s0;:XbK:\2;fk2C*A]uGHF8h"a6'/+7H])-Y>YB!
%m^Q6rmQF]9]tA\m.@iXZJVMLcq>N[^PmeKLrj^`9m-QpjY*:$X[[B1>euSp$!o9pTlUNVb7R%`dk?\_%XWDWb-ld)HH\9E4&Qb`\
%AB+N?/_SYtB[C&lT>b"6=M&olI=(gbCfEU%fd$eu^HJ]`5t2nZIT1-;?i0Ya-EbX!aUArW([%>1d0[)*8[Yt4;)mDf8T(+`\m#&5
%=ZYBa(Q>7^+0>cl^-:YHUab<r%`5`]FRSK\l.eA1=F[]AY9`ZGHLRUs`o_6RL4Zu@g3%ZOOLtIaFEYCTnQ2c0%LW2*lWl^sp0T`7
%VE4`e@t"1C8N;Y\iC1CbJmf!V]<t.:Cn?FDim*=;@Ip=m>.]b)r[B8A\n+t_cL.A#FS@9rp)C&tZMW$qoR,[<5-:-D#'a-D/*gcu
%07(fgDoq_6c'N>je#;@Uhl\"9^NXI[`CBH9X)N1[rXSS*rCD'M[Jm]/b,X6$p-09%:=&CHD-u]G]gk0I_K7siTAG(^_0fJMC_G@W
%^4.R`3fL<AjiFU+SNV=\pAS:l`&W<KG]U@J8[l<53&pca#ei6`T9==iecd$?C!bQhSe`uFY3M:M)s3;ql9?=PN-)A@g7k!Qdl?To
%00T4&/m3JrY+e07Fo=+`@!jr\+SbYDFgH,rp:GY*/XjAmVo%E%Xcg14(;?n6I9F][PAbBU*phZ4RNHmsKu;c0P?as(B[Zs%\^mpd
%ggcZ7MYd$eoh3bMq#5GYgH7KGH!j[>041*s]+6F3eq[l]r->[SJ%e*'X82X(EV7W1F+CrU`cl?dkSjpt2sGPKn!%A3jUM"XEhE?,
%X2`^ZX__f<#ku:ko6UdmeI(g3X9cS82.M!trH%MlKAn&j&0('8cK1KY$r)gr^AV5o]%ea]"Qb.q:SGt1+F78goE'KlMW/ApmjU)=
%o)aAh.O;nC8kai3,;BTMP(/JDhd;.W[u0\@h2rP9)Ws?!OW>R0GWL)#S'X9)+#;6"2X>]NjlBMV6QC[Hd`,XsV"fK3KLm"b+7Hu(
%gJ6$TAK$hh)*<887#G<tH)I#J!Is3<^"/[KOJ?5^p^JA?n^``5'BOu5MUP-n#JSV?"4DDV4,YBqP=Qj>,\A[.s8!j\4&)@D^s8b^
%b'Du`)Ql&&kV!P3"<2Wu(bch>:soTEPj#;nFiAHs@JEUWn$Y^C^SiA+16Y2Agm?[7q4]4Baq3Y?br#/PGnG,G,riF[+TaK/C_4!B
%GUJY^!.U)$>o7g"Ca[89CkbNHP"0@?,!ggujbr108`:HjXSZN=R)2Kt-u&2H>rG6.d3JuhON>]&467.c7gXI`TWg\ZjZHCj$jNY+
%2DoiSX:PZ9-><S53+^<j?J)GNrIj^X$D<scS9@aO(676h2dr)rgAUdP,*Pqu?dZ_W'@uc]S]\Ft%kEoL&+esRI'OAULLg2j\6%dM
%[<K+;S<`AHO"DsG1IHtN[Ys!jE:b3a-AMk]@@uasX7p:,dl62-]>F_3h2?UQZ+SV9poQ2G6^/XcT8(`#L9?R\4T+t2j[C#qfA>@k
%.[Fk0SM.@Yp'p&cIb^n:gpJMJatK*M[gUq4%\'Gud:]Z]qB_$7g='X5O7LksgMSK-KkM=@kqS2fn`6bk5@!);iHe>"*'^rU:,kN"
%FS)?4^\QeD@PcNg.%YCnroj1FeTX,7N;_O,o:X/Wm<(O=o$dT$PCG.p+,9TL:-KgK66#OXkAo)-GR#D=ejX0+KWt-r$SB84h)#!#
%g[Q&kKAJs1bWda#=j_jc;TV2G.or7EJ'P)k0L%`89F)l!2EDPjhL,@JQ[$,iqRUbCUqZj8biJV]&n>c_Is`.Vh%F.Nng5C5^ADdU
%Z$:?a6Fa4eiugW8'PJalq/#lC$PnuYp5`6_qq_-2TLOuk$rHA-E>Mah)!:N`X\u0)INZHKS4U@pXq]#5.677OT]ZQ3,=L(+c^#5E
%kRVP&&4g<q7^:pCI7g6&,VQF.AM#Ql^dIE(*:MHmWSXV$jjW<eqppDSRkM%g'/=7<pp=?8WaB1;M-aBC<Zgbi<F_kKfeAAe%<IGd
%=J('$0Y3,^q.m%c+9'p&qW%L>&qLdV<qZlU)n#,WC!YMag7):i/'?m6:HgpGl</,sjjCb?^7]"#B]Ro$c,WJRE$3*$XL6gGDk**K
%G;#ni<TD'`2[n#)`bAQ/'`!dGLV&8RX5_<sdjl@!j#8!T]O15;6pH)OKWEkNlG=-F#Ckh#"d)hFH5IT*0E5,XRcbcpSueIZJ'ZIq
%bcoJb$nX<G5;cu"]XV6.s*SSc6IFiR'OLV&il1>\4(JNg:Rs<a^(rB'B=F$3C+Zg8nZCEHMN,,ZQKkqCh$<7LHsJYuS/9bW(I.="
%8&F`^YYt:C\phClGeFF'IcL*aMPMi-E)5-OpKL(Dnt57iHnJgiG*8aC[*&VO[ZbHrlAF+/(P55Ir,PrBMA+K!CfFT9_pfNOJNcfZ
%-NfgMEH*oA<I"HVPG#@p;;,p[GDSm%?/;(dl_X2K,uAf(pR;M0omYBcM%<r7MP6[B\-,`LG&-KcMeXd\H,!Dd:9Ml%6NP&C"M/UH
%TmW<DjYBE"D7)IFk,43:A-Ko?[D&p]S`FA=jcojV*Be`Em'EJ!/_8+kpBsKf]u+miTXMMAo'2s@/7FD-EB<mObCfNms%D_mfsK=J
%Y7Nm34A:&73D<$qlnsh`[h1JnhE^7(c-[0kMChLUg#'s,gTB#S[u6s_%YhGohQ/ne%Bq&k!T>5Y.6K5RSQD*bLV9NKK#?->O6\/h
%N&18%Z+feoCph!+Ecgb?g:a0`k#65@n'5A'q"DCRb40qSMs9r!AF<?g`O*qY?2tq^5;4,O'"V=lM[f^Z,L,?/`Q<J<[+8OnH\L&^
%bGW>@Q2%@te.jdLor@T@_gWDl.^Q#L!]uI7D83*9CR=#?A8&btBaGQ8Hga4jT/rqZpWoJ%a'ZU'%V"fTn8RD'W+YM`g5htb7tcG5
%Z>Zp"ho^<E]Lau/^2dE0hB(E^e,/ZGeJ`,L34qns\H&J]s0VHE^&$`[>Me5LFVsQ(rE`XmD!cVJVS^sob#55<`uRt>j2sDVU3Q@@
%?U/S:"g,Snj!X#*Dbo7)OjdCCk9tY'[.2+bn>,!Vr3D`6?Np1VH8/V'>-Zou?E_)TX*Ma;OWiGcnlBD<$$u%$2stR24t\ZNhF-UU
%Rco_704.okcT`3aTZcHQ_SOXR&)AfR'70e0mEWV$s*;#Z[driV*JX+AflgU[.^TEP`c<_]'\s#Na$TCZ_]P/AQ"igQQfl[W>P*i5
%V<^^&ISPaBMbQpodXpK7rWD9pT<3C@47A*2n$]mjk2R]J@m..A4F2"Pp@S12X2:>RgJ?Esm^j^5]L<G-HMX:elXN3u-R@p!gQb[q
%b8L4]5-C.EGHJ\F3fhlrb==3OGui6_4\"FgVDCM>m;D,.I4B^N8&K`YjF2QLYR2rRp/1)0mI&/^mU]\mr7s.6(6!mkqP/feD0fpA
%48`9r3\GkeH[D[F:$M&S?F[cCnV`,URUl;5p!QKHc/-)Ua"*p(f_nc&TAFqJ^nB%kYJ-dFV:GA,rqR,9nSgqO"P`P;?DUU0+//l3
%$66cHHTh6!Bh;rOFfe_/]D_O-`$S.-or@cEBu,&.Fbq_@>&IF%2cd?![JT)Lf[cD4+PNGGdV?,jqXs(_qd%bHY>/Ng)dVqohg[.p
%4gV9`YBqX(b,7bSI*sGPoCQVip]UhoYV`FtM9S/=,mFh@\$3*gWa:C_guBto9Ci.Rd.O/c+!-rKQ1@#K7e#f8r2q:hn8;SIm-_c3
%iLm_c?9^G5IPs.o1i\hu4]kpIfB^t2CI,_4)4eei.5qb)c2ICYJtZE4:Ym1Yh0[4u;L.TZWA/K3pLA-FY7IafkAQm`K)=PLVm<\C
%&LO3:^ntISZRC/mqB(67o?CC@7N^YgrRm)/k-U[T[bkcuB)1#3CB"i-Mp??gEt]Rh-cJP8Ier_u_Z&k^YJ=9jmcnRq=L\KXiS>Ld
%Bo)0,O+kK8X4'\O@29=<=^9I/_G>Kh_L;.*HbQfK%YX\2lSs"cpoJFVFSD?sY]k?bj9on?@q>G?8(bKBJB4g?hl.T>DkA?d<&4&U
%]qJk">!ILhgL"9<bl9($GT]M3(I0J5%ToFN(R;2+<u?1`T.Cc_SJp`-GgER.mfBW:gLD7`_j@hCSd40Vf'Wu_LK6Yu4[OQR0t5Nb
%\6G!b,DQd'hV%?pTI\/Nmi1puTD%7#RP(lb>u[5H=CB]=?YQs3`;![-.]*KkfRbdlU-PKV27Zs!>/`s[]i"_,I=JB3=aSsVD_3P@
%KGE-EH[E+;<=4_AK]h<?pYP$a3V6?JHC3SCZn)<)Z[YrC-*_0Vf\Z>hg=k!lc=>eWEOA]E?CH9Pe5ibG5-MIfASOb\C:3?Sb,_]n
%]umgfeg7j'0C84<bdV#4M96Hm(jCst:DcPPJ`4>Sm<,nMcRQtpr"H1qb@nHXcsQVFk`G_\INc$>1i4ok:/l3#hf"52]Bpu"@"SsW
%jJ%H_UT"!1UX94]?drgXmrUe$U;27UHAM^r#>fL?O0tmhmB7Wm:]F61kWC6R`,c4OXrcV(gKTOuI:Kd<(!2\QT(g,2/(Djkro;s<
%\QXkCaq*f6W[k]Blqa:GpJc5f%@+4rA=c[W9pRm-J+Sf9h/6^>#7C.Spu_N/3q^qq[="X&+T(mS4Y*Vc4BV%Zn&f:gQO=Abm[BI>
%j!K-I0k[i,m.mlM)@ul+i9AqGa"7dF1nK3]SR^?pI14dm_n,L!G4D;Ss82Z5lH.)\0!W/,08YC8>A^AQ6#>!J6?K\b<-e7H@uJ"r
%ri>S3]iC&>-h$'td#mKE2i`n?DQ>TAOnh-kiE)'I#E9K_SaF/m\WM_JU=VK5fN:%m2Eh=8D[H`OST!0BHG<7CVS9d7#R5DSR]i&S
%dOInZd8TMYIdIGTiL@mPm&LA"=62=eH!ce3n%ZAf[dkD=:G5meQ<s$G^O4?Dq\f]d)rD%GfR,5OK'+4)%m@"8Du73B\o>\?3h</2
%qaX_q+_bcN^@CjpHF<JPp_^tf&"5&YF:icrq)5=L`;jc/hY+j2=?9Cd0tQ90)c1[!]Q.1lh_2>DVb=V2ac6^T?anW;jV,dm%s3>b
%#(<#CX`!TM6/3Nrmrnl*H`t9cgo]Ah\6F6h&aXA;]+TTV^Rj'`N_pn-5+7=f7,F_/#;n'd[`EPhrY&_)JQ^_^CR+SNi+8(DH2>$P
%5,g(Rh-0C,eW2nU7_icCr'?qq.'go(Y'TR-0?f%(Xt_iWID!J2Ja#E)Y3H_7[;'$geW2lno';i>p)1<rQ&;W-k\`K7qfqFXEI,:1
%qdfHm&'V&K>J0'>SC[R0l-$ub0Vd7CJGlquM#H#%];B@nJm[L,U\3G5+ZS>tn"?7R]sSq8*k_H$c]ag6FCepLNp929*qkp&(?k(5
%,AI^8VV)to5ru"!OWIlK8(p?[VL#>gis1?E.aQ=U2B"`YN,Q+Fr&E-nGVF#;kp7*Jm[#HEFJ_AZWHoXe[k$5,T>*+T?OPU0[A0e'
%\2M'&#@#?+PK/sEb8I5\M_\[`e?30Hiff8[k<Q@:lpf6'eBU75ihU4k'Dh9pWJ,LS.F9rkF(ZTr/0`/KcdeU?F41XTF$h=#pl(eB
%l^&^6'!8)oK4P>W+:3.$&b#mk7CeTA^1hsZ&N8MY%oqY6O)N#r^7Q&P1D76!&&4N)VQV;dH"^baR"S+B4V4uqLVFj"lUX.67i*Mu
%mr;)b[O8"E1IdZ%D2fEn.>T4@13Y#Z"Yh"M=ArtTOO'cHk6VSXCE-QEA?5H0=UB;^^D);H6fg[mFGm9CLa*c'l=06BQdgGie;+F2
%d0U2P=&(!OP9?b^V25dJ[U<jI8U5J3rIh!3=#!"H8p+]YZ[`g\c#V%W`+K71D1mtWVYKCIH0An>/l+N(M94eR?>#30;h)=NBmQcr
%NI<ce+"^&No-6r;ZpEf`;f1-i-Cl0>1.)<27mTXKTnE,62hg:\<h`@`?$u4O*rhXR)Fn;0K9At'UU,2$H#.8deRUaK+8[mOl;g$b
%UaZ<cM?S)S79=jn<]qLRnqHFF\(,:pceGSF\D6qeabMAWS67Z?.AH,K-T#iaiktKZI&:M"T:_IeFaUsSW2k[l/^VA^-u?8c?UslV
%9CcW5#`Qfq]k!/"dp_^@'6bt/B(l9IlH?sgS5qu*m<Wj/'604s\f,`CK>-?^XAW]*NMdZi5^c$>LWhG,d81a$cGh^P;]J$V1%I?s
%g]llWdDOfUQod8QJ%"&IR2m1+?n"*K6_&igrl3%bU5`(UT`CS,.O[1`RF6]W[WI0Dr?Vds`m(eYW;\KbCuVDrKp1*6/.s7G=J=Gd
%SOD;)kZ=iJE[R%rC95fNEVtdE8pRNF'=&k%+U`?`X_*P6>i2U`PNo&goq:48fV:*NitWr$m\&-*QJjP'b>#>s_\r*9O#^*r\iRck
%&%p=d9lW[,X":0YNa;/M,Sfr6NfrF>SZtjTM8$\t=rNh!jFdPTEBT`<,0]SOI)&Ods-dm6bm4uVah]sL^bGt1L?O*r'<'a[C=5s;
%,;aJY3<9#/p:E;4H;N1hA25%t/l]Zc)]tXF/l.p5]eR?m-&g]&@ZnU'^4RCp]>(Er8(qseaci^NJG#h9dO^#HKF`Jj\'Se.`d#\B
%;#l<pSE]P7j7jaB\"uid<T=RdQaGAUot<o^0#!2N+,Tr_p,Xj1:\Z5UVKf!Yrq=7"Ba$MCj]TktkfsLKk_q&*Ki/UFkKF1ASL.p]
%!2!]g6[5q?cE6.3DENXm3B(Rj_jt_qJX/:o@sitL^#\V[TB^iUT'KVQN]Gi$CjZO:]mUP<2q.Nb/V9SSe(Y`LI,j4/?P0eaRpk.\
%*C%"AnX,a=K>>T7$Fo,LTaiHCBDAL3CY9-g?(_K+4l8&:-1&H&o72+:E6H&BgtWCUXh<n;-NH(J*7#3.&?ue&1U7u$F6T]C#)L$`
%X,7BLca*rGk8i:a\Zpto5bOJ<9EPO8.>4B@J7]p9"s\f86+@e-hJk,%1W1QC"P@laM4?/+VB;0-5U15bSf#9q_T]7U@;*9IEF?9X
%(g**E^sEH7crW#U$(H*oaEsVK%ill+1kS"$\eF&*kqU2dkCj&VG7g9qNcngh,eY>E#G.R7bRQe.i.7C:p?DhpBGhFr)+686n<q<j
%1c+T&1b]?,%p\$8:!Et8Ak;:_]Du;IMB"Rf4NuUn5R1I;&.%K=cd7=5H.9)&UU[!fD>b#7K5jAjal<ESYme.i$G8J/Wu%Gm(g`6V
%=YKpYFA:40PS"D#K`W<Mgc3AB+D2?!B^Of-#]p/!&2!G2I_s`VJJg(_liYWEcOq(A0_ph,n50:E?Ub$3[R1)f$l?N3nL^rA,CAo3
%:U&M;;$mJn*4REL%./T]!q,nA3!,M4!:q48_(=7nYT4m<"?.SgZlD^qG)\`mM@ga.BR6In#W+m[>@oZ`#:l-LU7-n;!SkO.QQdD\
%aX@!_5R^;AZ"9B4"=Dh7$@X\ao`RCQZ*@BbB0C32q1Nc*VU-.jKFq`^;U)J#2Z*:]'i\)U,>fRF@5s"Zpj'd[K]-]t,qLc!?m6lD
%4P,j+a'd?s5g-P<d.M6/-YC/K"+ZsRjHW+@CbgaZ"_>Xp,gemKW+R&VR7u68ct!STT^RU^"!*#l#"I*_5c1QU#<,KAfaTO\34*OL
%^c(p+EgYVG^](F7rGUg*=4jX/H:2kl3ERDqD"TA-Dtu<-/Jgm2#r<b82r`,"AXC34L'HCWgBGDJ"\XUB^I+2&Z"!D/QD45u$7t]&
%W-Qt@hp7)ISbg\-n3":>=&rWsbuu?0O#j@#Q)dQ#\[#+J[D@2NLhcThB4]&HdDokj-cBl0^*0o]%e.Ou\:FSUb).?JGYfR4+#-`G
%O^PX(\EJY'LmB^SoQce_r<Rg-`to0`=mlb=T/RNQ3E$_p%FZ>;b<,+\Wp>g7Ot\RQ$^ZrPZ\gI=H7p67fGL^Yf[_-":Pj)R$/'a+
%Z+d*)brVFL$ZS3KqU>C96Wej&0&nT_fX_j9mCtVQpA8s%b\PJJ8g9'TNS]`Md:Ht/AN@).$eH-6dEe.1((4.3q[Zl0irk'C%2K8`
%!F@l>>[L/t=?Q(:%#_eu+1u9miaBK.nK;TU?bsQHP7IlF1YM'1=!)k?Wj%noa)3-;:"-r(/E,,6ckG4Zd#m,gdSjR60.Reh@+Z3;
%lFM")!C+R91GG%n2+![2<ENJOETJt9)a6,KKO%rR?n41##1YG/)9E;a_JnkCA:F-RrsNm@%s%-rd;$Qr7)0Yoi"B5O20!^=K^o8r
%@I4IT?>"f8k[\]b!D>Pb-,SaF$9@1jq2Ph(],N5\]taTd3l?j\GT"d@QPjb'n;sa/\B=S)3$QYH0a<p]R#kg=,045]=Y)@Y__P_`
%HOV-oj^YBF_4_fUR`9ls!":u;6*#oN/B`5$M^,u]ps5iH%N3>1n>5fd6cW/?),$bc^i2=E`('*4_u1b!9XnDJhSm@@7p:rFg3nk,
%/I_JM2OQJ]k;t/JEEu)GnqQ03dgMib/85NJE6dU]c[uuq3t%g*$:"fn>ahn.>`ZInT^H/XM%P=*cnGVANamu0(W"p(TE:%.N'JtK
%M@g%6a0df6,"N..]Hom$=HsmmH8)p2M"b>nj@M8G3p$a9b;h3=21Wf*%M3M=@L<-:A8n`")mTRA7>05MLU+GF=dY)1M'p1PiL,bC
%4K\=A2mDDt-sVj"1Aj<P@+9B&ZTOOFqI$lE\09'_j<c!fj?q+Ei80^"F+Ebsna\F-ii$6BYZqKY!hpV74\l'/Mf);^+P>YH-fHPq
%M]%O_a5sb&'MdjB+=iETb2Gu9&6\KDi"3<nE\ruc63MBM3A3Tr4ZL/B_F],>_i_e<".M;*/Q59&_:gr'$=c)/K0]gf^[/SkdirVR
%8<l:J<!1A\K`3<%2?SmDOHK**.&RpDLR9.dMhYsoR-.o_a0mE[BS;`^@70/qa;iVY"XbEp.SBan8tEI]5e8Ot"qme*4b."Pj:-J*
%2/po\Fq$9W,kM@a6%p-mE3:+1QJo./\L-<'XS-&_!0&);>b?%Q#Qqd6(`6?j"$P.=0a.jF_6Q_D:&/f4>)pXu@871l6_NgcOqZ<%
%^2L"m*):/ci:6]Aa).B/;JdIeN.Z'LB%dH%Si!qr650ueS6-,YFr?.ZK988@d%hX.ccfoB9E>g6Eb:X)1Y`1o`*e<2p;jffcut8Y
%80*mnc4.U==b`iqlS<SoDGcipUH-'D3,na3jAL<Y&Ca:]M/^oOm$uuqX_M_Z,DXnh$]-6^53<9S6Hjg8c3PdJ9;6'_a[__.HIT!Y
%;[)4l>VN^ch:EJLA_EC9Pqr%co#_>N[m#Nmg]M.X*D[fo8S\Sl@D*-RbRR>O_'1GbJ]>h/@DV*5-^%>AM@&Q"-j)<(F=[KacuoP9
%>h`#"YZZ@9`IdO_nlKeTJL/H\qg^<^-;1'<"o!9P,\FQ7&dWb""aA?rKnF>7BH.Z62WX3Ub6o3O=hYTWd-s1Q&N&sN1!l0u`lKAT
%[!Y/ucj;gH-nJR0B\9Tq05hc;Xhu%?=bAsI="+S\'g9>p]Re)\?`E"#`kooST'_Bf6Ki;9WAHWG:N2pp!XT]7mZE>KTHY4$*#_r4
%K4i>eB`ioth6KBKoIMHX!?+')C/X;k[jL'sAe9#FTop'^F:\YMA<15GVD>nU_DVu'JCP2^VB^f;[R1)fHmr$llZl&4^/,Zn1-`-6
%j1pe?j,#d05`b/3P!(Lh/0up048j,_D&.AQ**Q_\UM)!Lmn3b#ioZf-Nl0U"#&Yb[%Yp?PLL:^5*&Alc$7O.g(c_JR5o"c%/^46>
%4p0V;_L0['3cL$SG3fkM8^LaMp?L>:=4;=<%Z(2k\7*O?@6q2$X[:kNU@lYcF$c_QieC%*WmET[<b!#5+`u9+GuG3a%t*N"dT'K?
%Cr]U?aDEe$dML'O:6%g]ddg#me<@S7n13aR'ogo1MU<EKVhS-GA/Eu8_+-=0DUO.^f`;#8kBO;;-)H7FdPOdV;CQIf49N'[/SW=k
%72uaA,n.bqG7*b/M\!&-Pth?7MemO/-qk,0[,DMk*J-p2Mm%t/%EVDl$:PI+De#OI6S5hRN7<)ffYB(?="HCml.Q1UdQT2`rIB*X
%EEu!nPq/9e"qhE#c/`H^PN!CO9jqLg-'):h02*Y.(]1]*hmoW/o':OPGDR\,kVf`UqsY'lVTV^?IXiT^0Q@?m1'PZtfRjHlkjO$V
%EB/1_"XcH#-\^O;DjZ8>(+t?t)*XO\^A.t.ikfE$0N_Z:F%i875`-/<F,L2N!6!,IhB#-j+'S$+34OafBkNkbm3j/4Y^@m)Q@j4D
%!lFNm$7XTbBODj&p3-;k/uBRMmKAbZH4DJs#]uV&Y"5e&3,3=NH-r?UeI`'C4LI#X'F#\#Sh'_8#bZ.#Sia_>ikQ:HOb5q@;TB/-
%kneqm5h#i3/6=Ls8AXjr"at5?D'3JN.M/*MYi-4V`3%KJPk"i@s"Ws`oJJOjH""YV&JY_]g5_P&kQk)m0d(G\;#UV9@g&757nkM7
%Mf_\p"Xcp:#6@nrgZaKgpOn-O5g(rgBin43#jB?Sai0e\;pERneOi28,6:0P<(;OG7`8&$oT8tgJY\?XeJqIh/Val<qUiF_6H6lb
%LrmG8#mq@2qM$]f0Q4k&]5?dHl:Ne06#77Z>a]m>0>\4KZ5lQ$!-$BuAd@rQoITD]Yaj2ESJjatbn4i>U#4H=`&oln^0WP\2B7,P
%gk1Tu'='>D)'LpC]p-Dp^+4`2&P0fLb@h7),`7n$!UuIMi;9QO1N]$XBYB\+UI$-$ZR;)LYQpm)c]s(`_W(uj(!*&4>f/r=/1G=?
%kR*>"RtU*r'+P!kQWOk`#WOhgZIGc_Y"aQ#.uG(C:sIUU?DhS.?G@%K&:m$$TL9>^+'2kjRXm-*AFs(PLICum>\]tYa<BYC>8DBO
%Z=u;(V'1$@&1gL5lZag'ap;8j"*:Q*Z85Zl5p@0N<aT>Z#j4VJDLmAef'-,+R&t;8-l<9pM&1DYdN56@5kR&6'_=#kZMJ5BZ>'3e
%+<s#5^Z\q?--kabY7;dS.&kbDd3WF<!%atj_d$g+-]\9"gd0Wd'%<LL_307BU(Kot+oNk_n^(:#4\/jGcWF<cWKaQ'(c2[kmO4-"
%Wk42bVEVUGBZJQHO2:P8#PSbGV?)ap\'X#.kLO&"<&J<Q>9eX5[hDsHMmBD7"=G?E\0!=V+:cuB8Y@"*["n`?rD:(TQ7WF2A+5fF
%f'kSNL!l<B!"5i`!!r3T4V]ChCUjO#=fsGZ&T'[0Y$aHTdLi@E2%u`kH+u19>^o9UR=iEUA6s13TTpc@1jI_]"H'b(b45snpT;aj
%3$mc*a:U-u\SDQW\W/2X'&3)Umf7=MP3/,V@K\a+,8DE@S1Fc=-g;t,42PjX<M?U3ptXMb0cLrtRmBMO,r(-Z]R3DQ\>^d2J>2Cs
%UcIoJ&=e'Sr$BRk5Y<RBjgm'a%QpQ&:uO)CQ_n:s!38H;XY:>#e^uQTPV'L9Do<PL#6V#*XhG*o94PS7+)2"k+i,9AE$J/\XFb+l
%R&nJg\6'mnWmE]`"N!lumhK[!@TZ,TR#D:P*FDFCm9-%G_7)`[,mG[*)(7q41)hZ=io`sJ>'<&.2/?%>'=cJM!Ou#Q"GT47aoN%n
%@Hh,Eb3;d+>1,oSZA0p-=O.oSq79*Df"o7p0MdEi_NY$s,pK/0nH/2>D<76:qr@p;XsdfB@4_gf8LJ*\BEf'Rgm$0%Uk+Pp['J,Q
%)DXOVS)-Fmh&jjeQuasXCR[_u#s?HN2j>bT4uf3HROM8=&9jfLfniLm/]S$KYuEt^+UOk(Jn4bM9MLuWX\pe6k>WXs'Ae6nKKY(6
%K*$m_'*3%acr51%OCRWdn[C%)0$7uj0"MlL3"-4Xqa*7jKFEfE9_T,qUn/u=8Cd;\TZ;LI8bA\H<&OrM_U6ll%[1$((J$3J>m$Uc
%B.>RM'q7sOL+@=V_M02I4r9[2KF8G@8Z[0&CFeu0]T\-qAn!Sc,^1Mi8qW6f?=:m_Q5#!j#?I9[rNT6^+@ZJh^TW<G,fGuq8,u:-
%,]-$^U-'Z?*e[8$PS,@-E<7a=dI`D^dge1Nb"`8M=GS(.jF(i"bao6HEVdDl8p[k3,>dKj4O3.&p<pm(m&s!T"O\-;'MqgCJY'(7
%+N5_$l`)L>U<?).a-J5'mCa&BL6XM:r(@$iFi\,gO?H]$>m`+mBM!D^1L:.Id09f$_PB35MkgU,Q=/;Y1GDNnHF(K,+OKW=)PX4%
%O(ouCE^7X(JO3aaUECNZdZ.9uocSi$+IR.?XjQ&Zk=3EI`'+MT;aQ>1l-#;TXL;.ODR:u\4.]-$5Xl;+<MpBGjW4W)PmWK^m]0V!
%e$^gDTO\iA650HB4;mS^^7A*@obF"hOaq2-ae8^!A1:L:Te1KI:`bVWIZ#8b+N_mMe5d\7Y2&?Y5[Itb8Kla4+S3Xs2QDcVW$org
%FVOLB-7T2'Ph&J2h\i,k42ZXR#@rF%8(&n]!iHp*U?(3O4>:0O4Vk3(4LUku/rtU^qCs>5dg=SKoC(#0iZe`W&F1_knFY535i;/R
%%N!lCN!^ms*.KLZoAu:b)_7.K\rD;g#)jMB1e?'@BXjXl`c<;R/6F:X&F/m$cnb.]%s_q':f9_TfU&<:T^S@"R8:d?Nb'Tm(L"'J
%_S]2r>?n5f=H6'a,deNr<1^EsWr]ndh)48>9"q&f("nW>!GO1n@59()<GFLZQY_,l8dto<nNU)i+OF0J^FI_uYeJ"C:':W(>=@qS
%;POc".Q'&-W_t&FQ^&IOR]Ekj3W3]h;CcLWO3mCp`!chs2`<[!QW.]2EEll5P#S7^'@N&SGHTHB.%XCQB^A;jC1t7R.Q*UX9(08f
%K-eI&^8OZ-TJQgM'rar\Us<$b\4F4Z,+?g)@ptk-*+dOM"C(/j`klT3Vl+'c?E;O?\E+'M,jR9,HtY+bI@tF=K\:5k)lc46#9S]k
%6b0<B[)BoTKHkPd>c<3=f2aml<N(If\QL-B1_=9p^.a0"SONsbeS1i;>!3'%_@dRrUYo=H7LCd51^Ku@_.=Mjo/pA``$B\=ij5P[
%[%L[$5qK<YQ-#iX,35ZUg=OJ(&8q'iVNqTYjr7>\#kTZ<#?F8(,+k$9m)rY2/CP_-dh96t9EX5t23jD?+OCVJU<R6f#ZUHEats[4
%dabWuK1&ulMIi=_!^RHahkHnZi1X%Y8Ma!mal#2he13nDNiLMMW+$Y]Bb2ifUlWJ`)@.&3%]LW]Jt&IXdrLQT!A-g!NMe+rJ6J(i
%##>tJUu8OL6UNH)dNF.0.NKal1_:)PL^_;58cos4!]RMePDDbU?O)9<8`.\17ZsO/<>l-r#[)FUZ:kAZ>*b>p1_=>S^<5?eZ<L7-
%RV9^q^bA/FPe8f.O,#e_;HIP#3MBA$3@Ds+&F0.-/2#BoTW,5D>c+4ZC8ss[i%chsAK%B1EW\gtBs9Hp+c\&$+F''Zj>%/Gg(MD*
%)JiCT=cK,T1`3A@JZCUa'9lI1UjuX67LH:u@qbRT1gI*08AQ<\mQE^[8lZc8F"A'YW@A?4m&#Y:74Q*Kj^,p>PeEj2_@0t(>ZGLr
%iW9`F'3epe*KN4"?+KLJ<>l-BHhgj1#-MHJW&!pKV;]e]b,HQoUm^<o7p?^BOIXFWW%?@^0bob2CC]9q\(I>(1;RRjemMZ3JYtYL
%//a^2HPAU#":DuemhIIl.(J+E`k\JB5)-o&5',/uBXj`^6]u_TL?ndHThiF!Nfei03WgX$i$hWATS!u6".;HEU1%II9frP%m"b>C
%2o$'\6i'[L'Iqar)4EqNI^7Z2/EhNO510r#gIDkq\&a3;dKP[Q#RF[_U*Q:W[0&)0*EbsDj-^L1/;6uU1cCm7Oef,3aht+tWRJ/7
%-3_m3ll%ud8<\YK65ftf<k=:q@?u!E<##j/%9L(K>Xi5PnJn_(g:<.HJ`=b%<#H..+li\-<CVTpg\5822ODf6&QN\-<^pR(Na?&0
%AMc:[7Tep?BT5/((Z!)g)<lLI``Qmuk9\;b&894<)m,(=p&iN2W?PQ-+,06KTLP6pUjuVdN<W0qe"u!.N!=j,CF[NRgR15h=D:BI
%:h;Hh[r#&IGqPjXTQ1u^)%C%f87S<XdF_Ekj/^On[T.-+kJTom3L.u7:mK8'65lZ'QLX'')EY0d!nB[d"r0Z^Ud;F-C;#dA1jG@Z
%Cr(,-$NaV_:"RdgqUbWsS'"b-8n`&kr_Qf]Z<KtVF/_2=KL;E$hChC;6eb[(HX$UaTVim3Up,f#&ajqd-7>9*!4o<XGF!Mq++]HE
%4NJ[5<Mjg[]dk]S+CObj#8\3gcn_CYTrJ],'3'B8B9ii@,d)n9p;9iM9`e(TdA4V4'P-m+XN08@qD&+K`>b6K-']N>#2Z4OC-m`6
%>R$TG+<daHW]m&U9pe/J9I4^b$?7gpC>e3[li7g`3[o9X"'(GOKQ8LtUW%X,Og:?FD]DrHf@MTVY<_J>,u\cY:TmRG_.W-%5/`t%
%m7^AC/*'8mjs1=L6<mSU#1^a#JGV*lP?`2%1q_mf$E36'1jH$^V@P;ubY<7`'7"\2/UsD^]$`P`PJHd;e..q2i1![jB^.tXk'a66
%KM77gUf'7b@F-hJ+'_dmO]6OPi6kK7rk^A]gTb0u1q)i_m$(eQiFrhD[q*uJ$D,D\g)_8R'on"6*n-5HoQri0apC^'+O=N[?8qR!
%4^KVI%#"fE\MCX[p4*,a)J6:E^c>Vl^?J1S#nKQ3l5ib':O>>f>^8RU4[(%4p0;m'(d=QLkQJ`W![j5C&E*`mcuff*fdn0n`()#!
%BeL)H#Y<oYY"WQ8'BJ,WDRN17YnQ3WIZST-'.4(LlcYfsEe6E$U0?r[$bs\S\^-*GjMKmupg1Ndm6eFi>N#^q=RY0N\UGn3i.gDf
%[netL/s`(W?W&jL3`($P&pW+:dc&=T!h_1pPrM(>@r88:4q]4Kk%7eg;utq\\MSI^jT?ZHnd-8k#JtmQR5[r+&FRXXC84&h5Zm7n
%CNU:4#e/:rcUR[p*^43f:e9)F:k_e2&9&A+,ur'6.H%5%7Caoi(-AQKCuO%1,NrHqViDon2\s-;hCUr@h.OP0bKs4!p1-cPn(X-2
%3jK;RmtN<SUeI_f\XL[t@`8?5QY)WdB_b4CKX0T.kg3?J+rQp7^9Lc[&88'Y-Wrr1'3(*u=EG,<X$t'p!J_.Ygn4eAp4Lf_A/[oS
%8=rC'WAJ%k0qBl1M&9rB23GaUq^`(cn9:ZIPILV"NN;W\_I"E$):Dk'ScplJeK$.f`&"4>ef5G*MA9!0D0/FGq`uWoJ_Sf-'U_q6
%;_5gb:/!DD9,=F@F7h6KWXo_D!RUN;6!r!VB3agfHD(LBSu3\^Y$.,I^]XdeJV4Dk+YY`PK`Ud'%8<:b"J0dgdVp@@#a?7+j:Qqu
%%afusVX4#eqh1FjFi@2`H_Dpo:D=)nVKtErBH*,_<5qAj,lfgOO=2i'aHh:/:j;sYDO;-en:pD)/K<s]3Hta!W7$'\LaAPR)L,G[
%UVd+g-eZ&1=AG[BXJDF#(H#'n#N!5p#_lu5)M"h?jN>=e*b[58TC[5[W_5%KA>*83&tgf0+dgbL#7h(O5kV4=UN5N'2O)uX9QsQB
%iSc:/HK`fAWDXVajp8g5_id["bJ")*`GsEAmU-Q>L00\?Hj&.sXU<3cH^q_R%Rq<-/aQ,p3-YG$nduLi_XWf"-&p_k<t.rD+GMld
%DXC'b8*sa;N\(c67I3.'4>R4:JYX-@[g']!+CA5Z%IA(SiJsFp.AG3eE85OoLVgTXMh%+n-fPIN!m7W#%)CpQ.#okW-So4pBC0rc
%"'OgmP@u.:DU_QiJu^q/^8)4T.sk)fPV)VY*%qUhD6ESq4fFN7>LZ&kNRPAr9oD+Ga%nT\76(nQi$Va[Eg%2gC3*5)EY&L;<2e^B
%s8U$Nc*$HFc6_$pT\cB6i'>&cg^I5-+n(NZm^EcNn)&p+Ig.?Kc;R_M--0qo41:KQ/Q!3N%[&b7qBNfsi%Z%#Uj=d*E*OVSH?hfF
%EHt5-a@[Y@Poh^p@E9H.XI]91Or&ds55!l[0l1S/l4"dN$!_M7ne!E)6&D:EL^k,U+G9;IF=AmC6J:$eZP7fX9PIZT%U_n?="A0'
%&K7"5d:_f>;b9e2>+lek>Y`jh$b:Ko(qJ>L518<]B+IY9.G6O\k35FpTn0VD>rbH?$5]Pr-U(d*iT'dr-M`mr!h%u!$,VYkaO71u
%="`)YlY2[A=:&b%CtMr9O"7a;p@&sqJI%F]`Z6"NqZ+sc\&o&A=Tb;%"#%Ai;f``/e`4;@M]2HuoV,&#=hkq)EE[u$=<k4O[%S#G
%ZZ9/i?9n7qh.!7XX*7Bt;?-CsN`VLa?e^3T"an>Q"Y0NBqVEfol_!_'7<%R:g\WXOd+p5hFbb5U=^Kg&lkOd3N-JP,O-j6D@7GI!
%Ap6hd)qNeo*%o)'G,+\pZYC.+NWSCD>dtt+NrAp:h=Y+QG5&dB"IScWA3A2oL[PSZbG.,Hs%4`G;*h;33PH7]PKP`5mpEI8!KR3#
%J,M$$+[W:aa0k,kQDd$$h_k6?/pIo>!6b]G5Fsi,>;m=nd%<BII'e_0VK[+Ncf84La2e>u@Fsg6$j%_ec6`JF#,ZVDK`B'pkD/5m
%itQp1k<Ju2'aLiUjaR(+>`$i-mJiEr1='>,n(%dC<Z<c[#6bM(3rWKg&,JN^NW,pmC'qu's$3:)s4QXEV9jflk,?`.5?93I7GEms
%n)^TQ.J/,i^]*]:s2TWeIp"2lJ*%R$J*)g7Is-FuIq%C6J+gqZJ*,5FJ)Uq;f4p%D0tj]>?EnB!g1j+'!/YB'=rM:C\>K:Si.tl;
%j0Klh@BAO.E)Rj<-Cr#dli.1P6/XuU`1AWd^Z"XJ2h+_+cGdT=p2LDrhs9dDci]o5r,82Ti-hI2#>`TlKn\A(m.7H_Nt\@HMW82'
%b@C5[*f3&'flZ5>X+uCVTl\\E+[(R@E37#uB:\(B$3>3NrpD2RkOCa2/rjn?TpO`(r.8a$o*R'IhKEiY-1Z8::BY/Zfs`P[LRDK8
%2E:W-mg.\E#ju`InagQT_EA>hm3h<ZQd15[ShJ3!noX*m*a$tI^.H5aH>F*3%++!D945g1o2:5:)nqC)(8]oYXd7#F2.7OQC;Qd<
%)5g"C9>b`Ma#*%3-u+M0Usg!Vs(LWea$qIGj&ASA=$l6k=US,r6#n,(3-$a@%6(:J,hRpV'")!<%X%#i$IqUJkM[+%DY5TnW]b`u
%M71J_7X"_mC'K0Zo@BZ=c):C8rE+@G=[sCLh7%Xe$RH\$^('o'^:hr10DFq[pXVj_m5]RmUed'28D@,gj8M/G9ZLB!h9UH?C3uS+
%n+-2OY,?FVQ`p[$[SK]orX+o,i,ADa$6R9;^&kUam$bT#6Gg&YQWV,'rs%X&RkWLHH]BnRL7)(Ui=iYJfS?qbI9=/n['AI0(ARl$
%,rB,On%5^.U=ZB$/h_U!*go:FH]8ZPIEFg<iVO#AK;lg)8Sd@GmkaP6gujWhYF5)-_BVTkoW13:Zl,q_Ei8jC!lgth`^'LNARN9a
%WK8&`V[<3J$WKUa!09L.%s3\lZ>LOJlS*F6qQUWg:Nc:-54P=Lh$Q&7Yf1l8BAgSYd9W?H_imOZC5iIqHIW&AA%2\Qq3Uld31CFS
%2B.;J*n1RL)bMHTEJ<l#WsT=e^'M'==gta]0(%X[_fF\37G[V7/I@?ini3QmTM/U_O,"+h<_4LGTamrLF6rHCr/P<'4$L9CMWop]
%g>>PqVY'q+'n0s%i[akMD)hI#@Q*"LpW4"+U5a!6Xrn.DH-0E[rR5_bl2g7]fUpI;>OcQrd1"DAIX7^\=EcJ7?ah;/2AadfAa"[k
%PFrVmDN2qQc"b]04Ncd:WpPSnf#[rAr:<$.-mfpp@_-/.VK>AqUtIeQ8+[&8i/7?R?!>E74^.lj1+-cuF@oe>rc.u83N(n<b&8Ds
%FSbH1;@Ijj0)qW_9>M!@g$DGN'`ae)+Yb1_ci@1KK5Hl!\gQCEMX+#&f/IZ9(ON@>P\bn;J`f]WA81AXZEDgr=7%$-^$Vum!^!,Q
%5<a\Z;R4epbD%,0Reh(D**uO#_;CS;<bF/&,WoK7BiR3^#qDjIod0[Y9l(h5VPhc&-f0[^>SlVnqnOA#5-gF,=[:KhI<"6H<^'CT
%[`cagFZT^G\grqa1%:5qBHO(b*hN%0O("N5I3.k(G\6j-#"Ke".n\+S;h0C`WJd.IcC2@ZAije(m)sq'fN._ml^mX5f6.6b&:Sm'
%)/b&tqo2pan8%2S*.+1fS*Wburp^PAHs?7QkZ\)lj,/J's%"Q_ESkSgj]*DR[q1I"HeZGo6(9ehp,abZnR:#XD]SO#YWqtM_S]te
%FgOG^>MgI[bn&ruUl]@h0-iCDp==5p^TFMr^/f0))!UC8\Nt4[-HbO0+49?Kipkk1?<L'@Z`6'hbO+]-\DOTYkm!(,0)J_03o3?_
%LIq@_&GXa9iIANG%(u3+[8Z2uNHM;,0f%V$bW3B/n3p:E)ie#lZSDYecs#i:J&15jJ%rYB_cfK[?__MuObqHF?c/@Y;=LK=(7Rg2
%+$GmnPSJO:W_o*uAPb]1a>h[51\kIF--F-"E@$C*GOQ1qob[COA$#OrAOe7Sj@J)0.33p/\*g6eC=;iNoJ1kDBUW*a)HVUWi3Bra
%He4"F!(Z^:&\saN<GI3go.+[AEkCoH9(V*c)h9nm]4Gs+'!?4;Gr;XjJ:[iCYEb0tHB8-[SeX&dWa:[\]j7o-)0RLFM(TTr]L38/
%nO9lr1d-enOjh/D?;MB,LJelW%Vp@3EmP!^\C-*_j1eas"LV1he&M1bAKH="l[RUX/"03tE1c4:RbVU;_QUC$?2&r;H(>NUek]$R
%JWlCOQGf[Wo-DErmNn)TQcf%\b,4K7PLP&$QQ=eu`aPpMIM&otiCFQ)XNZ=_f?KWe\G1M0lBH[i61r`2[ch3Xim0bF#@.TG0.tSQ
%FO/[>p.f0=5&50DnI\Ba5-Wg%A:gm+Yq2%P`=gOtEV,E@_K7%I/73#T%0CK.W-JRXE*VLt!"kRc`gm0qn4>(icQVc&Qf$]&U&NM%
%in`rg+NMqH_S6p>F(*pAdt;7"TP&=lCbARAjKbcW8]QjRQcTWbX=>,IW3%B8iZn5uUQERD?5+(be.Ght!#I!?<c:0t:5Y'rl_,O3
%oF\6TSr\Z)QeiI]/lUeJaT7n_@m@Y<[(b;%&UL#2j!/M(.$#:=>A"oYpY!8?4k3"UdZRA$*A=!aNX:Jng]qe]KXBSUQQJ:><pa]1
%*`f>BV=K=lRq3+5&>$ObC8O=8KVBTVh7FSG<mM?[N5H_YdOnb?bJAI;H^,$SJc=U6L>)q-IH/B4a!?-El/Cb"DP14=h$h&n(JC^J
%+,k*5jV[m]W/VT`O\_h;L[MMPS+IZlp'%]fU6JUJ$sQD&7>J(N/\@s`[>Tk)mh*5h>b7*.%*90jq2eK^EKZ#H6gZdMPi9KOp%(P9
%IkorYH%TCu2HqloD/*30?,]Dgs&WG4lpc=//&ipJ8t;BWgf'qABJG=o<s*\O?d0+'B3t_ldn>1qqnn_Ig1:"3V34qKa"b-s!%rHg
%k@`D?SqK#86kmGNBP0TSIr#8IYd9);pD@&fisK[0:Pq*-;<=I!.j19tAC/*Y=O^OR0X?D239Se"e,5p`gi9TMP2i$+rF'!(*oK[@
%f56hW2nGrr;/$UEFNY#WK,4'n5gQ;af>S%La7;r6/LJ:)\V>af:*>*^g,U.CE8ns2p5@^d2g)nCK?.\@(&P7Xq@/`5`VWukk#DJm
%!)Jrm-2o_d_d[3h7;qJs]M6P_oV]_\)Bgqr;k;W'1\f"fgfe^b%i^L0`=DGmY.-!=e/K!E#j$@.cO&W<^_rk"8Tt4G[inRIfS`q-
%T'9*W5`6Dn6s7N^7p"fV*g^S]%6->aI73s]&D7]C>oAVJDm"10OBR_8'u_*_Lje:c<'GZ-q_a#lesB^07<&.6>;F7gXt)#_i,:U1
%ce!L%3)`L2XK9'iej>Y05Q0q.k6RJ2+->sq,q&e^W&2TWrC%uJIR5,p&s481=&Q/_"*lRV&Y!N@SB,7ML[I?ILe,1lQ9P]b-Ro2r
%5)fS=[/9WHcL,m]XPbIdT@B$pOHN@SrbA>;K\o_/RT'2'4N/UV?>#t=r_u7'S[J:Mp[sk.R=?;#C@LZo5./bd)]lu;oCO%)!^j52
%oWXt/G>#QtmWpS%[/g9YW\!%;<r_EIHq!J"(!Cn]s*G>f'nL]-;*))&=HX&^+Oa($RCup@I7niM's-\)^WE#a@'c:sf_VL9b="+4
%.*H%WidjOefm-H#9b,sZ?DiRF.:.@VAd[-o>KWjh2/_*(h=:A#E;[1nNPPX>/Y9`kq3aHS"QCZp5cFI;N[2)d17mkRi#_=_MAsrJ
%EPt\!c<+Lq,V6HH"cbt#50-J\7g=)g)N%ISf>D/0C4<:?LEJ0e(Up&@liWYDjo$T'ar%LaKB)V/KdEPS@Dqi]'bdB+N,Tg2;:k<3
%B'WnM23&aF4U#u`GZO-BgHkjiKP"FYhlAqXSINUlXCZjtkE<-gf5@<S!X6A75F4>nI3M,u^:E[tY0G[ZbGLo4`QL@Vr*sO$TdAVa
%:MdDkSD5#M@LQEHdQuOf^7+d2eN^q+p&`[X=]4k]$!ulb?VX[bW-S#b`V7L0E1]hb+<JkND".F0n(EYaa#'9F_>Z9\rOttTnXe!E
%N2>2q$*;MrZajr!1n0'b?i="5:G[;;Z'7^Nq"r!V.Y3FiqP9JV1N)7NIMlL"@JcrsC#qS$apC:Pe@3juq"FA&`d`F8\2CKn)dnVq
%`Zn(Mr_r=)Sf_8jiKELKGU_V6PlgR288@qudEH:N+l#)CD=1EgM,+X`T()4Ua:Y_XVmPL/cJ&'fUFkb*mDai@4+&Qj2#o0ifue.`
%EWAm4PloSZ/hO5_U6pWQ9-\g*??d!"Ts?As]aA7sfT2B-i@E,%L63*3L'l0nn`jeo4'^'cq\,#NNu'3Go,f'jETF>G0!uW^V/X'G
%h!'"D\[7?&iKY@ZG5(:1^p!%CA)kIn&Wkt9Oj`\RB8,bZOThB8@]d%HBdu=RZQ;m3gD[OIp7_Yn5M:ffH=ONbAJAu.=BUIi2Q9Y+
%7!54mYKWfUGN6lPMm6,SWTAr-FFt@D)6aB'*]7Fg!'!70@I/m<1LB5,D/9ou0`4',O71!D0DfhN\I)cDd@Z'r<R)D!KCLJ.Fc1B+
%>a-:ecO?:l'DlQe^[V\/813\qgO<Gaeod8,D[P[8@cs<BU>t-WCYbYSduY!?SL_+W0&Ck9nfTmq6bTs\eODQ`/4KXtB2!2$k8BF;
%QQ>@Xf=;XCXRjV.X6s@a%a5GRB^VFX%JBV<bs5Y/T/]JFCPFiH>j_Y`bg%uX#gTnHV*bTi]3;2i"gKF:]Ml-[o$7ut+7=./`l16'
%ZqWW?gqTYfgiDk;lS6Iko]d:e(AB.=?4uoF^Q1JZ'Z%+OfR-]^i^G<i%D#Na(:VCa0k]'Ik>0u[kJ\deU-#qLlmW:'1$^&f+P[GB
%P]Qc-&T1<c\`hP7Os1+,\fJqF7m[$t#u_WQlLpduN2s6M(CH$qqLtd&+2Gcr<-/sbG)dg5"TNgm/B+A3?!s4V](;_R@1nILBKf3)
%CW5J1km/Z+.V!LXh7nM(#j!#^/g[poi6m'g3sZJYO,qZ4Pf1jH;EO*N(SfX*8NL!e*MD0qI=\mUQIL`RqRF5H]S?j4`7Ua8X[4D"
%7]$rma$I6q^K3TL2%2+1AO+ENXGm)\+roeBBuccJJ!#1(VU.)d^5Z"!S*9m'4E]L'%rHrW9joDa=?JN%*bLKA8\P5Z_ru)-4&J=%
%^kPA3XKI@4EADmB?,I*u0=Z-n!GD]^!`>U:EJ[K?/uRj]ru+Y/I&fVOI04HYC8`$4,1VZm7>\\Q]3Rr%2QgUQke<N_mAX:ke'g3V
%L!S%ao_5]!ZB/*?eeC$CAI;iaG_i'SW1B>YioWn(k"NIK41<L[R7loAl,5=DcHE1LQ[r2b'2I(S,8VA7&6!?L$lS;I.3>LKDt#:t
%ofPn6_<!<0V>AOTk^LP-C56m8QIT6h_=LY!HiNT@HgjY/\/Y1*F:E'G@EO8q&h0uZ=S66\%]/rle=?jg>cQ,GA$bK[3K%IM3$T>2
%C%DfJBZR\9lL2of]o=Am#h&-4^ra*@.!,q1paKcCoG)W-8<UK3fZCaJmiuFqC>RFZcHMREKC+'orctB^:&=#B#jTG02;J'34"d24
%35qC&TD]XT*PCIT2M^5S9qE]sT1:r.q4G7ZI.nF*`LMBnU6;i4mXE65\n_7(gaE"%50miO<aJ$&X0@uS1jQB5D!HRVX)N(norjt)
%Lc3pO3KZ*O<X*]"i@O6\fj_Xkjk'.o8E:b)'Y0V+k4nr'_3b+TDg1hp,QE/2&T4_R<!Si:\Eg)/qA]ndD:7qgV3ePhAk-\JLkP4=
%+_Jsr=$1h(:NT+*]_u&Eee2:3\fhS@)k[Uncgo(kC]3em$;WciTf73I\u3D^HK4C+&&7@[,3(shZXIhdp:'5Y^la+/gq;iMkpHl;
%VW`/Jo!cJUMK5#@o:q>p6OJu1ii\<j*TSRN]#fc@(cBW0I.R$u\G>t$:AXD'f8''go6C0/%Wij:&^PiQkda8<X1A(ECg;)&L9'd_
%=%!28eV>HVMdj3mYauG?#Zi,;#T0&k'O]n5aW.2h0]^'tIF>oc4oZ8S-Zd1R1,$!cHoOl^M`HgpA-rp^5:.%VgK]fm]\#&]RnY`8
%]uUJcfu0`qb(e1'^-cBg'>CN>[q9mH4'$[t[QE<m,&kVu:C>bM5p[he!-u;2G^-mmaas;+F9\7&g]g7rW<+HY2IHu1]<Z'sTpDM1
%C,:>8FU6nN<R2R,!]6Jp/6W21rqHcLB@^7hj)qnBmi1h3=9KJ<GPsf3B*8UsV;6"90:?US,WC7oUo3rJ]am3%EJ3@M)o/-A@\lEA
%>+\0>!/:iQ4l1a0rb8pM=N^<42.1\WS^;B838f$#ET*"3qC#&%&iQq<gJH5'd)1E-P:fX_'-/)&%bDQt!q4l!7emk5/nYM2Kh=H5
%0_grqEpH3d6*@[6ohh^L2j`8rfgn8BMPKZq-se`qr:H"W9mK7)IDY,/?EXjDd3O.QHJs:kS3M8+d(80b_YU-3YW[rNe0JnRh-KaB
%Lc8]D1.Y=LWRUSUn/f\)-EUXq$\T>Y`s*XppQ#,0GMKcsafj+l,_W:*XdH;L!Zc_1F&q7PbJX5Q@GO-DWh_1c\8=B16!EaN4f:R9
%R4kF6R')Y@Y%p3(86_(>=^M]37g)6kn*fPhZ^e$<c#:kH+XpZbNER5/l/U4\q;?1RCG*0KMgS1*Q_a_dqkTb!%a`+ARI;c<qr""b
%0;'CT:8<;hbZ3<bPcO;h2-3*$/\+uP^$tO'@*2ILh?oO>jsnF\>CK(U\$SVoG/GMjVse1(T:#>Lnh*c(H:BU;)4nW\HCC`]!1R&o
%s"qo7#FVTri@.dcJbpF*r)mBdl0b0ljX*][[*6$4148*`JMQ)HZQq]S59[fpBjcK'FI@OFThU=1>Jq0iUnR9cGXXce;]9+6ejQnf
%?&?#Or]'O&0:+o(oNYPI`WV:ETU@3g,Q=3:8+RGU6On^:V]]@pR>Z=tJeq`p2,=6\j@Q9\7'PTo75n3(c5lF3"U2N-3LZi7!1B^g
%i@.L[JQn^Sr]*bQaR>GD'[h2MQ9tT-k#i%:Ea$U`a>6D[)(3'WfeG-S90!?)'q=A7jRmCcn'A;e;Na?^Uuk5U=lR:aR$C&4-DI\c
%gPJh^=#snFW;Qp#+6GJF'VtPLA*SU[&=@*jj7l\H)_><.4\7s9:^>al*+f1HNZ`=+3C>:h'9a+5+8e)m;U>LnXB<07!t7B:MPXFC
%l)@5]!noBQ/-Q&9/T,/L-r0YCZP4*Ym_.+$Ka5[MKagg\$4koshtcFt94<1VPbjI+KP:ehPF8;0k9m/VjN1r$6Cr@t.HE?YBaT,G
%RAQ&^hU<1EOQ86P/5\tLL?s2S6C-)jVN?M#BaS#@6T`$sq.H0(]dH"jo+JbVrMUOI?E("DhlQefj1e4-'H53-=be6-4mb:4R.Y0n
%_14aW.B'2rdc-/D&(d?<kJJK"\\:s<JR8XfQ[XZYQ@Cr4>>CP[-SsD/i@20E]TEJe%fF<Z,.i!ErX#(K%>dV#:F=*d-F5>`Rp!5Z
%DUtMK#*lH_FjZCh2s\hI@.#JB1;OK]rjG5,=]`ZUM2+rVa%mtLFb?e5G-_[tX082+Wa1C#a]<=1m(+2G].W-sY1mrcAGf]"'"/b[
%/am:U3n2N:GeL5c'\9F6$EAJZ%3IULB8BaH;c%%S0$9VUja.s6QJJu@_Qk\c]r4"h_][B*c*DtBUunC[<u?EZ$4Tss8@pc."ms43
%.kK;:9Y1pA.82fK-B2(6WYC\<k"qFgKosGegL7W>4]PqFTg2#Ab*d*Jik?GAh$,4\0&`::\)D5ZV4S.M0&CHSmG^LM\;N"8`a)9a
%DVW39L2e#nT$4fKT\[8=[7o^gXElX\-m6-E(W)E<]98."2qX:RfW;\'jV-W^P^n#tG;\Y7CrTcR(),B26^PH74MCiO_g#ac!^D9O
%kf-n.pYBH:Tl;Hg<&3kk!gn<=Wh)7#Dci"2)a*ppaga]b6rFKM\>sGQP`33mWP"^?=4nr_)0[s<#_[3,J]YDpph&;u\/TYVkJF`%
%n$X*XnKH#aMbd*f?-LW4gr3eNj"@2l)0`>TRrK7fR>ea[pb;,&89X#G,V&&qOM*@9l;ldeN'#1(ZL(!RZ[RA%nrL4")N^K0.g7fj
%>He[0/1T!0cZi&J*RYNEmS&dq$IHug0Ei1kq:<)_.B(#m`q;.j'poS4,HDOW!;_HGT/45G5FY!5Q@TCI0\80;:c"\!;"9/MbHcTb
%W%HYiENVm0o"$9Sj;FoeacRS$&"bkS?SbNfktN%o);e-Q&'OgL6!0OR[7,TMN7@PTLf&2mdEYcnT+mWd"V@cL&X@ZoeMj;(4#t8p
%7fmcr>\<Z&.ak,rN2/YQ_,XN2+'u%3ASR`!'RLdp&-f$CT6?A$Bq2ob=Rh6;8#giSqT.n?]+`m?D$M)k`p$.(dPakX.%V_*PeL"^
%W"kQ2*=PQtNZ4h`!@jr7!Ktki;ETPq4t3QKAHQ&JN9(I'V%9oe0B_bcdYHBCfI&+rOHIfi)og#cNNIg>W'TY]_-r)'>q6+O0g?M'
%$-S"9%5pDB<!5;#DmW3,;Z]#UI#t0kP+D.=+>].]@!<.2[#-Ch?<!_Hhsl#Y4t>"V7Nq#BU[np<<JShp?X'gsb343Qh*I:iHs#7A
%3[I)T)hh;LK$K-q@pn$CHk;"4KaY)=m!J8t@.U'1?69[k%@cMf$7/D'Cp`&k%r\pHU[t/nhEfC)F?UC..qB>4SPQ8^7E5=L]s+1$
%AXmj+JDng03Zj%1YEt['LK=lKT&1e4Mh),*&"f>/eE$3e@JCj#oD,U-Vm/&!k8UC&"8R>+*ojnMHp6'2FKu>NHio%RiYR(*o0LTt
%]@he]#FQK-&O6e-PW(`La$f0>!$gtLFM7dhm&K0Q-`u?',4bhOCX_ABo>$@0-SN9*$R>9%X.hpNOSMAf1btitNG-P,::0ccpEWk7
%WiB:P3Op^$3Jji@.&?GDccK`?`qSQ"oM:rZQN&5"?hfI!PmKY5Rsjd7r24tiB+EbT=%I[j,P1d9(NB*;/"CY/l:6$l8Iqdb2F7gW
%V,AJ@.nX\^Lg!'8JZ#,)!IHe25O"+>2rF+AC1<P`E7[a9_^qYT%Guo.[jIfpl8-/fjft(cq1SWrrrL`3O90`cO;3cin?tq57d)cC
%P^U3=0UQt@dmZK8bpY$KMqqYpkTc%EWu_dUs#Ai;`J4'4Y$>qWO]$E$5ajcm2l:-G6V_L2`ZQ5M-1<.VY?d(pe"67*fC4(4`\XaD
%V,4G?XOZ7t@,6KcXZ7?``d9__oFnr@#G3@UTT8ODq_;T6K\&Rd@"<rGoFc&&r75jV'SLUuUG\t)Wo`g*)`-lSZ^WoWHR$E3g>-nS
%HlU=+L_VSl5bIH*<YOUB$<EDR)1\);Z[d&^B]fKF.V,[=ZW@k]-&sspgjFcUGfib*$BsdqG:NKWil_np:u1d9L7:QumE8k1Btg7M
%q?H7\fLM/sBgj,LAp2X`9;B2X2dS>[ZBq5T*@eK!f#UmR1f&V1G49,!9[6I9BnVJAU4YNnBc6R-l%N8Kr\28Hb!6H%Op'X=9]nUo
%nBRIdO<-("Gc#6E45TTP(6AR[&D#\TR]aPD4a/EY/V[iA4]'$0<]*Sb1:?<O+@TP2Vj"-.aI*PfC#nHGH/5sH<FLcC9=I#)`m-$L
%J_(OIfHH0-D(3s+,;r-SptOn8m%reSY9o*Y)8psYDQsLk-N<HQ2rAG8m]\f)A]BB>fsXPd&%mo5b[G1C#[L'3)p7Y9Ebn%TBGJ][
%QBIMS_L$I?`F*bN*mMqu:H&r3kI#17oVl]:#X`6j[2]=IQRjc=+cblk53_id79I4sX#o(GbCZ]:Xli[i_D+!7@@MGIp]dqfXT=aa
%#!%%%/<9/jY(rqV(:lS/s#K5jLs5f[28IY#T;nHb5u<bL`@9L<DBM)-WS`:AHS0f'j()3:kk5?i?=.eo*us3RNVJYb"(p8d!4P9:
%h%h^+oT[Og%>h2V\uog^Wbj0pAqPCl'f)>'F:ZMe<rn)8RC1nQhRA)3Bh-7gl[JrM.eAO6at&K25H(Y=\=Do-.LTON>,AI1iS"0X
%8PQb.0G)#sHtKP0c59u1Ea0e76L5=fQ;:ulDrhSB4Q0dMfB!V/ebWVcZstX[QBr7&7>S'5<0%+Ug\,o/[>uA:ERp4((0?KKD\an,
%]cZV'"Qq$CM6'2==2Pj6f6e@JJb"4g_biRUs)U<.4ke-5*gRU_rtfV/3JjQ.>,LiZLo=GbgX.>=_`RL;\GCMP-b?2qP.&mOMB%e6
%N[9WWMhAc%eg,$)+k]/15g/94P/?\fHj@-.LBLed"-CY&:.obDBUqKD;'\52?6Y$\o']@/43McV6"bZ-</5h+P7;'%%To$q"`((I
%=Mmbn<2;PTkM'1sLgW'6/8sSM?Koene^'"I#MSbj]]&`MDR`L(gt5pkQ"XKRI@*W;"JeZG0)MV#Qd;L];V-7NNuU@Ua[FEmlp$u`
%]I205'&LD!XU(L^JU4T3gif$!Kmpfk"^8D[4%]<$lEp2^>1kBP[<5NPCc*=7<ja]6>LglTkGje/DIuY-Jf[V8.e[Z7kca*RQ$D7V
%=/(t^CoOEC9@1$Y4MG(1ZGBV]&sF**BSD/\_`l'3:,8K[R(`#GjgO^<Z(c]8<j'*O*m&P%\[(5=V?X@OVSWtErY8JEZD(\c:%,#c
%=]a+eUkmS:R4bRG=Vja([p6HVGSIWkb*@*<JQZ$V"R,Bh>e(Jl35)p7cn@RuPq+YX.p$0[cgT'm.^=)tc@<fSjiW7#<j$7*:@XNR
%$WkL)e+jW1/":(EOohc*9IhZ1`:/rV\;aJdP_f8$/2`B:_rSWd0g/O>]\sWE-#j\kaC)[%.T[s9.p]^G;55nmmrpm/=!kSdFsZ4F
%d;$/EPn:]_J^,ZM=]'%e<K(J6@UGAmcp]#jf6/b!"X$E=jq#_E.l3cT=73R=l2Z7!Y^.V2K-b3*H6r'E,n$f#-,>F_B/<GjLlGYV
%Y?k?bQ:c"q?7BXJ;7s4&pKJE:`;EVUjfC@8h$A+']Fk9i1!_\6=&tRP#R5JD:KTK3j(S'4/^"nZ_G42aTP4pHcP/.[Xa"DM8]nSg
%ALe04ZZ]ndACdp=_5LZ85pAMDY,mg!Ra"W7K<lZVb'IS7VYS?7[8l"PjRpU3R[:[=dmMQQH-$5c4!ED?$/[kfolN(a%F/R6*p"?4
%rS\JOD@m!HLi;=t8?VrHDm,SKq1<O6nf9YR3P[$GA:F(V&PcUr>ZCkZiQtUi\ZC,<Wi56qimclaiIC2ua:HE(haRg@l7.a8jtu5i
%POEbka`!\#,PoOP)O![G9AWlHT8rJ'S5ds7'XHIVn:p`X%AgU@eY0mcH(hn@@82/=i.EWdZ5=S0!-t$2l=eGA:]SQ,QT%+q%Yc40
%DS:eAP0LN,5S`aU^%E7%9D&Ci(&n7h9aRF:!WCa*0j-X0`N?$:cdg:`G$j64pBgA].Le*f"!=lLo2qW*Tukg=pb#W#CgmWUJMFrB
%M3^:U=&(<6bB(+M1KkMH&cf*]lA2Yq+.>V='RND`e^#d_X4OCuJHbD&#bh(B2)uL^/pZBbQ:un%_]STHY2[V@Y9UiHVH9nF'!B&%
%`TIO(UcK_k*C8]hot_Z7E$Te#/kR'8oRH\9jCMD=2o&f[84,ptY?T@UBg>V*!L=j2R$>W:b-C1SSsf]gYfN_jLUZ9/l_b`e=Pu`9
%N%A0=K3&5F*n<RZYne<=]i9fH"UC&HOKsIl)@s_b0"e>8/[QWQZe&g_&Y]l&Z/!O.Murk^0r)p+0dOG:SaJeVn\lT6^l;a"2l@k;
%\)8/iB1lH(+"_,KoNT80U^C`?jTn-Y+Dm"t%GT'oS&no:Z+jr!&FbnGG_#tY?[dBU^r6?Mqj<kVn6cir"<T&ABs[5%YCao\QQf@R
%DL@rd.9A"F%3E@_0pAZ>S4".d).Y+0+o&sZq"\C9('M&l!'?6B,aHb-FfC0<)WZ4pUQ63>9qQo?BfReoFj4kr\EF/@SD`QGe$!Y_
%[?6N&4fHZt3b#Qd*c"VkTBql4;l+;R9#c7);a"#BH:E/""a/49'sILlc'HurehnM,(?m%rs/@>Fd0+h=+gj268e[;KW8)JE\ZBV<
%'ona>Tf(uV=k!O]U%>i;`STRf%^7^Thd]:$Ft[1)1l3j?lJm+ua5m?T%2M1SmrJkba2R!:J6O4Wlt#ZSNN.e/*sHO.kCRHD1#7((
%BsaE+'KW97R8?"/nlIG^*t0_9Qh@(=$@iq@\kS!=UAN.@-%:<7cms"EU'PjiU+MnS[]o2I3>$HN$<2obgZN;1E"81o%C>#-@m&"(
%oG]<f,U4$7h8SZSD'QjVUm:711>$P&rQ'u9k'qK*"Lsl03\3t[G;i(N??38+km7e?)hTB$*ec5(;*6+EWR/gCC?2t=*-@*_VJ+eY
%P7`/ek5rqWC;p:Y1K)-`]\gOr`QNL$`S5B*`P\_sEOAlnCcT"N>>E/ToRtE7;XlHWB7JV9Ysc2E0`Hp`TKe>mn+7g(CB+efqn!Xi
%n8[trC@k(S@J'I]-K=E#,iWAt-fXO':N=]PB"f+Q`AmUGlh?!c.^W4Db\.B(kW*=<AEUZ0FHY]jcr-dZ&BXYfg>#R&%UgD"g5>:Z
%Vfdc#O&h>B-Sb1eYsT2bX8$;&]?Kj8YfMGkfpIPMQbFNC+9``I6nJpFHA9.<5m$dY*1_A"!94p)4?S/ch$R&!/(GYcGQL'45sE**
%_om;M_qT1S_ok9b4M:<(>97,I&E_rJ05f"O9@M@1*aY:.17?Ue2s0(q"_p%.0<Jeq*aW%C`Z2DuOI#M-Ot\cUi?bHr`a2OSRq4Q^
%i@mDWs%+2K1OeK;iJ)W&d[^$Y$$,B\*;pg'mBi2NnFlR77UlW^RGOieGeh2WNBB=n/reb#H$FAj4DHDI4)&h-)P/c3IPcWZ\;W!V
%Bm:p2\85l(Jhoj4ddRCP*bfj\(hn44cY7VcDYXS6kEq!jh^tbbV%;fa_b6WWR>.'jVronLR*3c+]JSlD=a4Y7HHO)tMqOMP\+cFu
%4ukEFdY:ON[uq.o(m<K6$SP(ccWPK9d@FEb8bB?4IOOcJ*/r<jT@u7A$/`CjV$9ZP)if?P#4^EBNJ82l6iY%A4cSe^0DS0\r#KVk
%+&+tMh<#Q&\$Ad0Neh*rVn)qJ(]-1X,mG5P.YdgPcR6/k`0'!El3!R)*'`FZ]P%0G+.@)!Y*"^DaR/<15&fMUERM%4P@W44H:aLk
%#/t_'TU'7A>>Lulk>k4EB]EOV!O=2%/uGjaIiaN\Gs+@td3F+td2L8M:U1A5?YAM0X6&06Bc]p-BV$EZMOea&nXR@S`aUa0q'G27
%+PZ4-cC]V!O^u`Z7Qu7V;plcWHf)HDdB#QX[51u.W.PTIdDD&Tet7=p%r4]gDu^Op7)RH?S]"7,q`J8p.85dL\u'*<!V?elT!J@`
%hnJKX[\s')oWm?0e,CC2e,CDuVYrYD8c*jdT(XQ,aYY,7qnifn+SAmT9(]HKXrC(3e*1H1gsc7EI@(JBGA.YQ#g-r:+'(SU'4T[f
%apuP5HA)AjZENHiD.$!6Hf1@g-U2fDVM3C3ji&-\T#\bGhD/%ds$Ub!j/D:VK@fg&59@?mD`f#^>GGucA-'E7q$0#ndV7hc^jAG\
%IA*'Y!;f@JJsh*4AO2>ak+>6f_o/#>Vf*@,NY]TB7MuI*(Q,FeTj%+*b-$PiS/Q]/4*s+C+2I3IVe==l)JeIW^sq\'R=?E.5nhYi
%5?YD.f<':*bl$47chru(09UrEo1qVi3L)B"jOND7d/MP^-L>udh_aq#FA(f$bl!\#p&*C*q'V*Z*Rm4C:RCZn:c&,^(VA!WAc@Nc
%2)\XfbWgVoe7G%t,%d+B=IK#`P."UYW6HlVed-$U+$^SG8?%)j2j0"tJ_XA@GUdCtT7XH7R/H]o2>L$SU%>qEj?NIE0XR5F-aOHi
%p")$gDQK>r#M]+ir:<$!)u,)i=Bh,hO_i2&j7R(qj$^BR;FWEV&D_m5P`k57E(gJYPj"FL9Q]%Y7!*e68p$8h]414Fq__0$cU9_M
%2/YrS7mnH6n,k,e%A:1bb!\2H\Mf,3auqeUL18*nIaXt3c[D1V?$^Fd@L]X62ol%ZM<G/V'UFHYbH/'T$l>0?h#O`BA0SSc5Fu+R
%JDME(6oTY,%$hR_JG3_.UI7$A7g,*1kU'\KG7YDCJ@d2YM/Ip9Hrc)A)jlG!MDI\gKJon9]BO^\'@ADl,e=:!;03tml.SYqM%e]q
%Vlgn0F9C_HVm*+g`@2kJ=%G`.PQa%+kQ\,2](G#j^Vq?g8#^'NP/Ai%X$jE*Atn#^-_YCHhsWO]DAahL9ih;RQ1qROXcb9)M/FNT
%XJ$q62u2Tl]"9_DCTd#-Hq47*DVLL)VV?hQVV;2SVON0Z>:@rp5jSE7R;RTe1=_WR-=Bda<Ml7g,5kffinpZr50@s\OR=K-\n0R9
%9K0f*\#)hX's7P;*b=YEZg_?_dnQ[FLX,Nf3%k3#><B)@]4od$c/fJRQQ;pb<IJ>372["!h/kUHQ7,G9D3:CRp&N3Vq]lcGQu9B*
%qhGl]3"ac-HOuPUY)==f8O!6C(f-s"!7-XDKRNtVeHf4P$,A("L9j\P<G4UZI0.c1g,o*uTIY'$%[o#(jVp`Sl-b!I_)s$9#j@QI
%')=rb8QV=c:B^<29A(['M!U<7:[F8MY/MdM*E]"3@iFnE(EEclT*QL>D.T?\4@CQ(AY8$Tbj6"6oB$:XZ;1Il9\!#?)mC1bYB*J>
%]A;l('9S]j+9*ZoWAT7]":MU,*>e4Z"d=ukY#'YVmd4k6KJRL2c923L0(I4M!I-:^7d:<<H*FH]`ng`.SKM6U!E6CUkFMZLVn[7J
%!&f$7482.Y,NU8B*$Eeq;t>cqSN9lp-P)="P6XjKaYl6<ERIW@h"`<!##W>,PBf=^I1hGS's?me\Q2Hg1.;J:R,`Ug>]QII*Y2Vg
%^p@(BP-3nd*k2GXKJe-u(<qIU.]e&rr0%@VrlKmBr^k,O5LH*52)s]iaLe_%)<iO>)26!jV4Zt3fo&hOjGYU!5.ekQ%5!b_eq;-q
%]Jsa#6McQ,/ZMaGT*Q:1215k6>V203'B$>O9-T#r5!XS!Ie\foLREN6d^3-P6cg\W*\;`?j:_Q,nb\Q7:K0et=V]CH8T:5Knc26G
%H/RM(-JL0LNg"t`^o]MSChE7!c"A@BT@FCm57r8t>cmo;d3ioF.K;fO?iuO@,"a:d&^!<MS`U!Ilk@cqPF#LZ:IJ2(CrWRUELEIl
%Qa-*W6m.(39`g2CcXK7*-(p''02-S0bMd/G4E'?iQ#\nf!RA0hoa1)TA3C#g'hX^/%ktD<-KQ:n)HeN`!g6flN-iNkRRt"bE+Z!A
%FlZ"mTCEW5ahrLW'<`HrD=>%m)nlb;n-Z@TdY;[YRE#&SB>4<H=2$i5_C?p*[hgTu@1:E>7C]+`DQeut-qa[36,E9rQqNg=h5Y0)
%)jSX"`3t0RAD>9M@=Kc]*ag2d]A1)RoHhPCES0*=DYZeM=#;mTHp%!SX_<0K4A=rG*A'S$_fUO4#Ytt0!]LWg`j:G7a3DMTT0"JD
%l=!kC*Bn[$h(V3SF>,:'i9DqUk$X?ie]]`Y#LdG3E!lmaqP%>U6FqT4lH4"aABgEF4R>4U_SNT'V1*J>/ZD.S:k<qE<f,[@F>0g0
%&ZtD->)?-P#La,;[Ae2n1$JQHpX4ZA+ck=39)uXG1>PSR&dgSl'(COmJ%H6,]J7!a176lj14]8!_i(m`j_imZ^Z!kXPjn/p!N[jA
%@IBu"e\)LfP-coUbgY??OGM#rbq,O1G0uea'_7>-AVALf9<4qC8U?_(ASkS]Q[hLOK=R<]\@IrL4PWJAI_WbY>REH<99=q-0r(lt
%#[[.b#hK]bpP93ehBH^K_7LV3l`A@?['+uSQL\[#hbqJ#De[8:[fk&$o.0oW-/>CTs(Xq?kue)/bEb/SJ46KD4-m,D.m;kR=;$$I
%\$1.D67b%8'&Y1aD2onSWrU\TZmo57RpubF)(dtqZ*[n"0jnU[T))'[oSqf=f@%Q`>tqs(85^7l;=lB\5)d\kFY)VhVIO<F_m/i"
%*'QELd,@$54^ld4VgRKOkg=^ZSF^;=*BJn0$Rnb11tmtPc(pQkgMGe\2P#B=gSdd?B)eMUI:[\ZcZln%ni5OrCqlZ>\oGj,inHHU
%a(d1F^:e.tk6o#WFZXJah3lK8)Kt=Yhare<_sTX.RhR[FAEb>t;2mGI4WhZ^/N`SZ%gQQ+S.[VO,4X4P1s-gK]+3keW3`=D*F>K2
%^i87Z9Bt!/6a,sH\l)]BE8]o<gQ),Fd+1:'B[a]Z+;;/\*oOi/bD3M+(MlOZ7j\3(+BsA/I$]tP]CuPu%GW29+)l&t%e0HN?LTf`
%Mof(0jEl;6i;I,a&T%R*V27/bM;%\9?ssupFo_!p$sm^r4?FCRn(n,YTDb?j-31@UGfKK=mSTSM$bd4to(_,3e,gUCanBf4!k_2#
%oC3TVV^/s/Xo/pd)PdfhGlIn#[beu52a#XY#@>]s_O'!T[q:TY_d9qs@&hi!gASfi[F1!-"3b&ee`o4]9%lQK!I,'+SI^'%M!!gr
%"WYpXgroG1GUhT(,7e*NgcKlE1>,k':L:QtAbuAkAh]2'iDe])bP,p2SBCS=Hl&C+\iuO0a8AV-fXm-4h'S];U[3NB_iB`D7Y2lS
%Mq*BcW+eJJdF,_,klYHndg,;"Bd@jiX&s.>I)I("783rH!nCK('VKYcAPlD%Ll5e$05@NE`Yrl$e.gj"bNMAhASNh]aeGZJ46,Ml
%kW3bGDQRU[O?'DAVPu,.GH^P*V>q-FI,QqW!KL4:3bD5fi-p+HR\p%6G@^IKrXC)EfVP%6&"GLO+1TlY'ehC#[AGCg1K'B=dhMR\
%ZlYZ-fr_7jqr2:W;Lkb>"`'P.GE%q15$/dSU*LUM2,,/PCRU.MG`0L>e+A3,9iD3?QfIRX^..iF2J\cHc=!f?Q8KCS4!TgFe89QZ
%88Y?/WCg!bcgT4=)tQe+`jGEEJXlK`6tagUO!?J7C's<V;j(7qW9Lu?F4uAJX;gg/?h:"h)]2"<1Ybo+dg*%4/cp>COVK_gXR=WZ
%>Z_Xc5?-Sr=Ce;,U8B-<Md[)IC+@]M>X@sX5qFBjJi-86H_hK,c.=/i90XlXs%99++"`eV?r9j*`-#TmY^2"+@!ZdtR<O^\VXcU.
%U_0_C.U03`IBE>$duNjqVWkP<;b^3,4[n4CRVj%ZCRXP7Z)7S;RVj%ZCRWCiGc92/R`ZF:<E.O+eX<'geXEA@-ls#oU8FY-^%Z:l
%C+Afr]La\i.OqkgB2NH5$Kd;+<7;QV3U)!lY+ho)]r7oD/+8`B783ql/8NeJ.g5;g_kO"0H5E;Te5VIo>0/"p3JXk.a/g%6eUp!d
%<F40S<(cZB[A^'TAkKD.WISgKc'kL2TAt>THNC#32,,/8CRRG+X_B7mNOFQgo*:>4Sr/uZ7!])705;u;'1&DG5L7%:kEA[BrSi$%
%b$Te)Yu<mWh7"_AZ'8D9mufPZUr)As2@iX#&2NQ2Os9>91A+75`9;.tQgjmH]_m5Ln^DO^!)D["NT5&`Zc09GOo31'Z,5bELHTa7
%3-R=Q#Ib$%):jEB*8rA\Qg'LS&QS2uNQ/.MB6c(h_#AkJFM=%IT_.OTpM4N+SNjPH/$>hj=1Q.W70V?3+;:BV'2je?nGMU?KG`sH
%J%k29QUkdL`6YJ7Pi1')[a0l>]>!8$_%l#.$XT/]_srb@ibgIlI*G2g"(bEDA:$P$C9@deGN6I3"$%/ln'":1qM+L8FK%ncbBM9;
%HVY+=2TP..+ZQALqjQiTC6k'rg;TO.;kdfV/#*pNYdZL/Y^0:#0[1)u,aZ.V@VS*?)e=8Qj8^2RE/iM:.2A^'^[q2Z$cTr2NP#G*
%;XUQ],Q\ZDUI@V&A(\89$n/6sHf70R[^jHuc$a:a4S>?2kT*BKrWoF)1nR7hbNJRpS%g-H8TlZC(BuP]+7X2`Hl2m/n"$FA6be\6
%H_(."nGT7/=5YS=#Q#*X9=1oUD`L<-s&;8I>5_"n:"2Eih[boV2uW"q4&S&4>a+W2)&:/ERb%+6(4T_^oEN?n9#.pcEe)*33rN4E
%1J4`8'`AK<Fp@Ot@Xu%7:!edN!_ue;27aSh-fLYcpWF.XS&roP_;J33Eulu2*(iFZ64g4J=F7f$I-U*!IZCfmc6X/eJ:j`iXghuU
%gI_EYj26jjL9mI84Y,N=h44Y8bK54MfC85GK3mW=Cd'E)N!i5?hm3SNafSZfF(L.B@\7c`oF"Cu\0`]Hn_$8_STA=;\CibRebb_!
%_ceQ7dZ$\Qr8F&jTkg4j]Mg@LqX`?)^(Gk0Cs_'e3o*#J*%[6bV\<CDd5c+`&UQ(_],Qe=hc\uG'iI8:aeJ*cHST2J,YjU%4*IA<
%OjYqWEJ/EE]*C%+87])Q(0g,UR^3N:+p+sLrh>)RA=lB-WMh<Q@&d:KSfo%')ZA;/8jMs%Ki7FD_o0d/D5c>NDG`uN@J32r9m?H<
%.P.S8`Y%f@HQ:+nc"3nD@7N6l3Ku%TGmN45B"U8gfptihV%S%/e[#P\9Btl*Fg]IV0cmWA#/)^Ke5Q?1+0q0jWr8#Rpi`*,k.5u[
%[q#+p5*+Bc,A$,,9n0I>AMou@?h"#]I?4CjB#i',Lq#[/Mn'h$2UL-kZG;VMMPF7$r,s?CUFlFR@2DQNQZhOhqa'&;!2BX;,`7X5
%2(snNEPRi2es7[IY+-,B(=s!N+$A_Cj4hl/&5BUM4V=_b!(t`G-Dtdii;VB![:AO4/6FoW[Br'dJLY#;\3uq`!7-f8bjL!?GXQg7
%b7idLa:mHNb7fAUROA(7R4"#=.."6KH/a)-BFJU#iqK@Ijt2]C0%7up=6>?LI2^p)`d*9&Gbl/;M%?sP@_(jH',T',BMp7RFb2Qj
%eshsQT#$pE^>kM,5#Qt7o>J[<.W!BD(O9cfheJ`BjMpX02#,("_rT''*:)FI$M2Ha1,HnS6A97Y,#]I%[1BQA/5ofB7RsKabnM6s
%eR?W8`u80;k:KV;jH%5Bb7p:eUYTV-IL*l$Oe,tSj6KUP?"N`e?uOXAq\sl1Wb@L&K'h.QMY:\dS?-Urio>or!BF'uiYUE`/Q7%%
%H-S7&\7:XMSoJA"O":.ubS8)n\X<)l7d=IM"3V>o)-N"_EI@,p#Y*m36YUekS=CseV)T>UZ97Ys7aj?ZM*lG5CGeMO380'^H>P60
%I%8#=niUmtRBLq^'-C(E,P&e#c@+,OYrqPr7Nn_#-U(;V'kX$sYXYgbjbXAta]W2Hpl8RM3.C6cL12qZkA;Jjc4e6_\SI@bi^:@u
%%lX9>A+1@f+%([0YEO"fK%iKGjLqQL05fi)6);JZREN6F>25LU0tH*[DK&%LkK&Q#W.rC^[(NngAD`)%q8O!MWH2P(8ASg``f5e+
%7Ud@Qabni8(cOA9Z6dL"1%T)<NY`CdE>d)ZEBC=[EPUcS[Cj!]?K`soDJ\]@c-JA0*5Jqo\29%H?5t;_/ceV')j@[E+tr?gLD'`0
%@bcr)__O"-7d=:oa$YNkp9S94+ZhpDJotmtEFVC1,%noTqarQ[4//-_UZ[r#Q5MWic<-2I2`aU27V^`B\a4i,N<.$R&?0[5g4$u6
%X?g3D,Z\)\S@"&a\Me'>!Btbj=CrO<Dq)eN\/gOP\/gV=\3)k1n]6[43&BS!/m'92G(-=]fZqg*1Gf"-*3>p,cG]+)($B4?<MX7n
%XGWEaVMY/3g)YHJS4G0:)D*ZRWi308[3`i[?mNa'4=A,p4;-]DF1e&J?6!9gOD5VhEVPJ^qq;\CAAe%pI?(kkap\"*cG#QZeh'kc
%M/c*-lu([$@N;gWS/[b2LF(tpjRPOD6;Yma"('[<ge9m;a;NO%baq2Z!9P+eAfU<WN&qF&6LLQKLaL+B4.6,m`4-CCJ4PXBEm)D2
%*K7qH*Uc[PbF@]W*f4kuDS->0b>AYs/dZJdo$/>6EM=\F'4?Z:!953-`&O]e)I8Gl(cUY+mECK@69BIa>@nk^hhoRZb`!K(DGeW:
%_[Q3WjCs9rKM/0)bW(`a\;P-7*2KlGRn`G#d!44fNNKoRT1-c+Ddq4panH7j5)Ts3]?_]"e)n!XJ!,3n,P<nmJo<i2&*(EP(+$QP
%Cp+EFp/CpI69*ll<(+!8\,o4dd3=GJqrB?RcJX06-f`#1-pi(Mf>DFra!uuF$t"@aU5870=7COCMB]k*b?5_%*K3%:$/[)>T35lW
%`*4^e\AMK@&`Cc0gNE\]U.1bHdL84-+OL[&l6p+"^!TJ4#]J(rAN+PeNO('OIe]p*/@CZ#@msNl1#omM]d;nlCjiOcQajSqdC_Q8
%6<AmFA#8k$kr]#n*Z;c];><>MZ65$9bOtB0LP7n'KGdMg%hA`sMX207K'0l@mf&eAfikUIT:4QF464D76KLPRDej7Fp7U0ri&tlC
%"c@6R7n@l/,0:\QA"MVf:4'*^n=QU+DKHRLEt,.<]l,c4[2-*m<acW>Y]YE]mh<P8(5PU*T$^$+W$`[nBWNSl%se#0b[TO6IEMEZ
%ajQ_hRZ-hA*f&4.G.d^YLZ^p/mf'jb2L)cs'(-k#Y%jjdD)9b/B7"4Z<.!;*+lU+YI`*H/;f;s+F$2[D$PAkH*m;=84'I4sD$.^.
%BdQuqD^Zkt*i8b.d9eK*anEV<D%+/*+59WT8NsjnNs2&U4`3G(jg-s`d^hU(4<Eof`moD;G=_Vla%F/p?&3YC=HU./b3n*idA*iQ
%h%5QmE[-%-F4Nq&]#?&E.B:\'IAu@I&6BnX[CAWV4?p=:A<@C=S&N5ej`GqsSf^hP]D=23d%o*79&?:@kMA/)Gi]eH@Cfe$V-asC
%ET7[q#r?QV%"2Ir3GZ9nR3@;LB87=HOo]#lZW`k_NF2GWk35:aT$"sAl.6SnN1NLX*9@Ek^T-CT^ftt6>I;RhH_^J4hp<MkUUZ.q
%IP")h34mHgT**L,A@Ds1_L%o"oC_U/dLp1S9`4&cAJHfM6ZD`s]\EM*SlffPAMiC1+p[ql9)Ln3Js1/m!+3098Dj'&q6C/O\W[Y0
%nP/B%QJfOY4BUjl.!kqIFq2%L\BmUg&eKef>^Ss,V+qoWe8_M9,^GtD(-A:ql@8)=YP"F!-TE$HKajYsfniN@S#L2Nna3h=RL/?p
%l/A2m=^kJk2Rtj?^7OtYYQh$uERB[WH0VBr4n=buN9E$?7`g]kSB_LnN$@SG>OlNk'rM?cZI*p!O@FWI6P6>^ApsfiMj\/NIChX-
%AD!dl&oJ/C0W_b5kaLD'Hd2FV?mkWoa0jT%FD!JJ#4a9c2Op@.f#Dgt>A$5^]DpS<\3b4@^u6kQ@FaQpF;".5T?haPmt6@ue6WG@
%"tTi[++1Rj944eXe0jbnUOB_N1!"V5GrEJ-/+Ei#GIgj'!U!Uc3)N?gGSW+EU[&22FY*V3^p<t9::U(WL[nGhgZY*?`sFYGMi1Ls
%iH$p3c>;n"W:6Q3XL'i90nQfS(\&MhW#t.68?;Gji]hVJgm)bGie*`Y`K(_NFn7W>!Kj/#Mu`RpK7S/u_;NUI`4LGg=<`'b7#;@,
%h-GBb%OY&UcB@-GAs<?",CM:me%:Hb+2Q9qTdi*53oY$RJN+M^C1][XkNP=A?@9UA<(mT:4pUF-EdF".*DE>?hj]`bmSYBnMm8uA
%d$U.P+:g\;Ef=XP*EA)O@Gs`K&rH2rVI/V&?VJ)7W6Zmd8NjV9(-7m#]'-s1_+1lsLX\o$l(Lj!S3'U@p"hXlj>o70=8.=t<EE-a
%/0s%'Mc5rimW/VKD.n[,S7[DlDA2[Pgl2"B:d9u`%Nb'QQA#1L,<g*OVK?lYq1AKaW1.HmO#ou<;-5L_3/qgo)LrlcLBjoL.t44F
%V4E"nLVlCZYZk_dJ1?8Mg-?W<6OSfgGYsLLmfW$F*OGlOZ[:KgL"m0"+h"5#07UHOQk+.=?KRKtVfj@TZN;-.;u-QaLBL?8XF:WJ
%iOrKYislY&=M:R9'&9D/%k=ngmXTk<Cu0qmDmkFhLP..'pe$(Ub[::62`R;T*7O>fb6f-fjDhZY^CTZPhER@/=([:MkVoY%eH(]H
%!=k.TAS/mP[2MR)1it"q9RF3N,)u@sE7YiOrUlLp4s,=#JI;orlsY,/_YYOth#eYQ\;,Z?,\Yi$rRY*6(<1jEXcMoYDqZF+5]s:A
%S4k7@UT9Y-^1_R"aF:BU1VC`%A-%!X@sEuolSO0sq/PmQ&DP*?@7bS.0[MmYWAcn.-rr`14R10<oBLXq)(;P5>q^.rMgfM&%$e^X
%-Va.jgfb_J^b9D),f4$L&\POT%R^M\0E_",]P!@:A&(F_XPk7MSI_RhdU1ZYI#*>AQ2Wt^eF;?S?G()O`]MV4Ven!5r%IA+.%iL)
%KW)Ae?/=X2HLeH!7RAQ6'rQ!FC510=;Q*KEHNtd.CoDNU%PB25RO+c535J"Q][trELn9.R&9Z[j$da_991sY/8=d$kc"TCc'L"&(
%bACB%oR0&8>s*Lsp*jpqS^ob%h;5Fb4UpQ%2GDj\GL)h,XM$G0s7miPT5)ctE\L]sK!_kPli[ge(N.VM,Eoeq^>V9$n!EPdY2tM#
%JaV`dlB07r+lVEfoq1MH-Kc=cj8=?DhkE++TD#HaJ$L>".Xp>]rrVZHrZ;%2m=jqpa&'4`?c/FckkGTf2JBpOjf/Z6+%Qq\Q?`L^
%F(D4Q4mFOZ=M\D0W]_k*pcs0Mb4T6hYV=bYWY>53c#*7EE6QQba@H#%^;@(%2r".U_df'b/mVN9krYDAE?"!a52aAkef4)/f1nU&
%?sjI72:)a*MV]GX&.=,X38<L$/W2f;i+_LGJ3AW%cq!T61#'UblK\Kc<?PXsn]6sUk9$<*a+s;4o8iL$3++m*$i;>"Z$X[X,7lr>
%>?.`K&(1NZebum_:-TmVmpCQl*.GmZEHVEUb$I$*aTqn&*=k3KiB7])>R^D%Ou=nZq4\I4(-:sfPWe5oinUHEB/^g.qUt\eIOY)M
%gO8%7htOucm:Btq$r&r!d$l*8]+8gdHS#lCKj,r''/:RE8cZ?'?8bB9g&H?#:M32[F9*:nJRYl,[l&\1@r@0$!Z*ISo=;bhn[=,7
%@+/f(oMaXdZH3(n8t*j3Bku0;P[\Ytp&^haIcEc,r,pe",Ig*HqO-@cW\1uE!(tC06J$_Rml^nW[N/i+isL8]NDG)]YW5pf,;m3g
%*qhi/L(tdH^d:t$G)m-[aBT<%=rNf$=+j?5&pNC=4M=GI'8KV7J_GqW!I@$m_2$@JplOTSh-@.VjkD.Bm;l6,-b__"G[sq=!11`r
%<%or#-Cr563@Y6MIk"/Y<uQoC.AGk)i1Za<$*JA<1:#5;*hrtm]1&)FI$nnTIa22,@_/\b?EC[,aI@j=dte*!;Z:5t\3&PcXKm18
%:Ea"^JTpR8'G%[WG#9m[YZ3aiDkV>C#KhYF$Y!e!n*IN4Bf/Z%S0<&iN]5RV:4ffMLI(Q-:79UWd.b*k<0oJVJ9c91Z_@<?RTI9?
%"_uL?XB$%[>+$=R-mos92r!B?5mBD9($Af<$ojaNO%3u`:<Qts=0c'W9]C4902O\oE,>]ln+u`^:A'6aQ"@kEp;J"`%FX:jDnC5_
%,!RX4,G:=)Jchq'/Q694&#c4;nCMV4))A5JC1J><mQYJ6$^i`Y[?-&..sQ&j;)K"_--;%a?it2FoIC8SNiH*UHitqDC+4*'(<<4Y
%X'cu8)GM*h5(NM4TiYF*!H+<G*AkrQ%Se*s61,3&/RB/_,8Eh0RVj4UBI]QCr4P&!&rrYWU@YbP0RK@;:Wioi=3RSNSW&9!"(SPJ
%$f\>*EE+c=Z>1#]c_l*oJLQd/*.o,%I_cF?[pXgP'pN&d:=fR4'a3`WcIj]RSE7oL.u4^G2%oWjb1AOts6(1#cDKlbkAXk7QI(:?
%[3*n11eu_qm@JL`:-jDHZC7;8A$+sGlV9`rbNROF'ElFUM9.1PI.C-M;3."T(Vt`V\gK'+"G-<">!nj4!]i3iSUs3i!?C&I0rL]&
%drgfL"9l+C"FYk4O?PrNJ;T,r5:je4qsYPrI"E=*5!]4oh;M[+=nlrf7h>8CC*(eR-j!hVk[?ZO*_2^%'`tX'gT=X&SUpj2(#I#,
%6/Z&OKhaprP&'Pj.o*nc8>kC#-g0AFbMVgM'R\j('GSA;cSD&C!7Or<:-k"Piu?Gr-m(X6>ogU9=*=p7jFC"Am7WXAn:B%;QuP.j
%'tjHd<2ZCjJfhOF#qC83;c-hP!d^0H]*&<0MQ4cE-u-OZ%_,/.^_'ucE=$7Qa=]cph10R5i.sisoEYL;k'"j!6'9O`8r?7QQsW.s
%`^u)oRmSJ@>&FldEbXbNP\kSa"M+_Y92=(kl4V=!9UF[IjlmEU,S?YRJjVS;Cpu_G*)LLmgh#to;P4<]ONZWE-lgmc?J9LoYtO-Q
%0"&FtFN"csU$:E)+A11TFt.+:BYB/X2f<gkJ/6u,<]sbTQeFauECN@]ZAL17G+Q)['*[Sh:)>"l_%DidC5s?#neBFk5`BAMNjk.]
%&!q&'#N/q_'uuZfM?+WD%-O.VT`CR(KpQ@2IXo,0"7S)5a.-/#NnUF"\KB#9=1R<KF&dXu`^pPueVt%)2hohTRWW`cSm91KX8C2W
%i0t*$NUmnRg9^G'?G)kO!gm8JYGkKgEW^X2oqjDZ;@QD_i*bC@2;Ga`NpCUYK$p^Zq19@*p=I56V2d]G*)]`3e<.d;"`igcVcqdY
%qP#e7-6>@Z5Qf/>f]Ha=6fuH[n18]:*qeSVU>,TW]W)CW,X&^'#tNgWF4nS[>WfpSL%f&L%QVVB@ZahQMsltkK(lq4f+m$RgM/j;
%mLp,h^-]0,`hqDr=VIL^MT:I7@Oi$hfb@Y!c%MnF9)(A5YpF?fC^Ju5gP3=L.r<b$'O,!)oNep@&g*<T/+1\UWXZp:C"F`_<h(e1
%<Ehb/CC6l:[LrmbRq`$WZ2;GAg.HJ.$JcJ_Z8^lgYM1r1YUR'QqWE5;&S-IiRtq("])mY'4'1pjW8,[`O5EcO):(qA4Is"^&`".'
%)WN?>'q;jDF0RXBL/5'7U1SbqoqpEfc'AjaG$[j:O1fX)>KY</q\t9%gLi#n>C,nfD"tQ)o531gmrn%IbZF-:>"_!%Cqrka-'AZq
%eQ.9S)lg$E=@#i%!Ucs>iL=RTGc8&;O(M:,8[DsX-6H,kPF-+&-_K_8*:L<4XP1m\#!oe;Abt"DA*Za?8)=oM"HG9F)f@2D@Ndr;
%dnu>Np#L]]k%)^Fs*YpG@&4D[#tg9\TSI7?dM[)U5GKDc5''tg,<1N[Y"muF3"K3Q6gC=="5O,-f0'W%Q%,K^,lpt19BJRn5pJf9
%XBKW3a%()R1J<3>0O0PTkJ0aCNY8foZe&deY,*-V3'3&P:)!D6IZ98Re68s"Y1<f`/CME\1'a.OP/[g^2,+WjKBie+Gs_.J3T9*H
%$Y2eTU^Ys&r7IVT[Q455i\A9?h9=;FY[H7pC7QABdL(2a"\>q<IorD#-,JhPeNXAn+H7Y'j(%-9RPSdhF%uGLnesRJZG=bs+t+se
%YQ.si\KA_UmQN3>U$B'D]o"j7n0g2p?V03J4OX:=TI:m[Yh2B5)O1TlX=]?8q>a:#7aU?Qfs-^^n5)a"\mS"0L!/Ncg%-a`pOFZ*
%j\k"k*^7IElTK1:2cdeh;12pXgi;aX+4rZ2?<TC%HS[)AG,88%\2-!oRD)_=86=QD#)84@?HVjVZ%eWb*&AKm98b%bP<!,q4\L9=
%88h^Q$2;rXb=<A0d(p=>Yi<&$8/Ai,,%Tes>n1LXSS\nd7nLT-NE8`B_3T6epahCX/1FR#H=u+0MTJc=o"@PPi754t^8,/`VDK`&
%^p"%i1?p)<?fWtC[=I[)\[4'"JgYt=4k;sb=h+\ub_hiOJDiJM6l6(<s"0)0q?Y3OehRF:1/=at5r30urPJXE[N4l7`1+dSe#u&]
%*qf&<fPN,Zd53*oRV3f+?T]mo/C+fLqrrRn1mOdUL4)Oc\4FT\D1tA*f,0)"6ti=DQdZ^V[+79].ENj'/5i/L6hWodqCB(K8q`"u
%fZ^EiC&G6XJ'u__L&TJi3YpO+q5/CA?9j&G&_cVW$imi#?4nV.JjO,]'G2sU$Cumi%jEQh_&O96GRb-.4<d-?PJg@0kUc@&Dip_L
%m+7%%*ENqt@UoaOll?saAE_%dI$g%ij,.:]1f5s=G%bgfb^gkm,=V`\^1N%QNl;W9>A34#f9AHX$On+):I%9?6USo9$L(c.kf2dS
%5FTQG!%(.U;+E"#5%6kalICU.db#,H8f+8AL(4omUDH(&6bj3segr]^b[[o:%IIQAL4D?)/]WC%/"<i:nJiLj3+G;U.ohUu\?bb^
%CCqN&IYl.$`J,KJK6Ec%9\FC/]85*9&rH#75%u'AE9LE*/@#G7NlAr]#S'-qY1(pp"c%7TJjUF%6(g?bhs_U*g2RK15r)1RJef=e
%:3N/^JjYX\+=(-0k[5enPgW3QD.`/f#8%ot+.?\,4!(Z#KL]hao3K3_e(>3sY?%*e6bjYSlkUTCkfb#9LB*p0:+PU/BEGB!bNP%d
%#A/TjF=7I:(**I*d,f#i+c)L%[U=@D#03AQ28V_9Qr89UkZEt09(OR8b@[e`9D#,jLWqV&9uFf<jrFYIGj)YhT[*%'>3?/%m>E(F
%TasK[0g$`;>3JU(?$jI&/UJI7'&b@4kh;ZK2nF23VbG_!rZomAV&rS7Nc%V%%q@iFg>hB*$&S!8E2ru!R:)G)4Ys[]-Wpc_f[\s_
%>+-NoK:XeG3E,?3Q\)Ib`coFU!jc_12JQ6>C=K*W!]qpqKm2jH-=Ag+[#M95"?FSPpf:(YVf#Xd!53bkGdYo1V1g)E\J6&^0=HY<
%LkGVm._*XLXhli1Y,VT]^:5q6kR5&H65oeANo\dRG[i?Of%%-0A&#iS.\7jVA0fFE92*fU/p>+,R\.+3dc4_?h&.5Y1Kep.m-,'l
%h#g6##L@F5@NC.@FX-3IPX78bW4G6Xq5REM.2O[f#;ZNrd!7OT0"rkPh8m/@\M^bomG,b3=A-9N8=5>-U\+%IQ;EZckK2j3)d=+!
%3`\ju'2R7C2\q@XFa#Ol\dr'!\dqWj\dsm=h3eb$VsE>jNG'#J?*k&\Q@>^saokelq$FVbQDcUAd-/'h`oh<f[ag&E\X6)Z\ul;L
%DoUqkSC'DTkdihmFPVn>Xuihc*(RU.6jp4DfP"ON.uN&CY7'#DT/VL],Ll)FI(bmraYY')mSc$D?,>^G0P.!E:71>UC)C6#T#!d6
%\h5]&HF_FGZ+tg&aa@A+4rQr2f>W)>*%(HlOQf)=:[iL>ZC&_bS\Z9RUB5MCF*N*5B(4qqYINO>@<Z$dL1SZuNOQDn).scD,,<3V
%BKI'$h&SH"m_#8a1-)t.o@'U".(b"^+_+`$Z.)KEG4Dhqk%o![0tS[YCrtAL;Ks=QS6[]"_+eU5>mQI%rajCC4P>cR34h!;NJ"PF
%)*:A"%aH[pC,0aENjKbt-@8&4"k]cOK=!_:R%<PW,OGOPbeGj[Y(23g<K_M]:=?;X6^TJmg;TCQdd]l^Q2XG;e.riTY<*Apg?S`d
%*KeB,<m,56!s?i(4Bc<dlb<Np'f3g!<39<k>F^OGITeIb+jFcIN9Otu&ifHW?MkHXLoRHWQI4Xum6nQ='uQ>Y:&SMmjdPcqClNe^
%p'NYsj8%YsCh23i3$mRN:6/*)p^o&cF1tAJ3D/,&Qb<gebV/r)JSu<g]NKZ<`Y4APL/m/Zi8RT:f$cMEY`E9eqk\jgT*[/Q,'lsG
%(cQ\-k-4Z+-G$C_R__4s)F8uk<<QuA49q/rf>3Q$gqJ.bY=X27oY*,#P5KR'B&CB\Ob)s7elfB=)no,/L>,,iNS7esM+Ae8+DE0B
%GF=MK*,M"6-8M;KgH:M[J]<P:OTb).RC;38PC`2[qbdUD>FSUXk?T<aj3h!QBP&1)7O*K(CRaT61k4^_`+*m/m8#il`CE3<5Pns7
%`TGr[FF5Y5:5X#OOObULGgO5P=tEpS?:U)uKLlji;<caGF=N9@Nf-%2Eh!k=8dYZL(6SjR)&Ta=D$G''4Q@kOT&>Eb9A^^))DNa_
%`*o6ij-Z>bd:'k2ZmTNa3^aFeZojhcL\:%1K$]=>ee&lDW0'[k0Z"/aMRkQh,mM>Jq3<J)isErWnI4UEGfF6FdA61k*_V&2jCPui
%m9hHY[)<n6_M&#uC+3XaE_u@_(Glr7K-_4q5ea_Rk"Eq1,DX@fFMbr=]T\>RdLm^D2!Kf1RL#%NSOF)C2(U#B2Ma.-+s3o5Z:2j^
%]43O1eO&?lSCgFL+s1IC?&B1RE$r8BL`BN-b?Kp1^aQ:)L'UhX0ec(WINEY?M&:LBF,W6A.7ToeLlnTBM\p_cZRnY<4sP[?l$FXG
%SgJ(XP,F]Vj$(_57*/qe[NKj!b6X9/7??qYP)q7d5.71M(*l\-(K[$+,kAVrpT'1,=7f-rOF1kNiWt^BgJ?<5YTPsOJ]M6kYLkUh
%,"OoYeJUnUgO<rB7k@1@E6ogL6#tn'J[?Qq8BFX9OooO5Y""Km\EAc)8.P,$+s/>m8g?_V33t^u6k8^^F5K=F$-XR`%-J1I`Yfsr
%^D8!`oP.TdS6lj/o(9<uOJeN"!p"&6,=%hI49FSXFg_9q>07,4VaZXHH'47@5b>nC1h"I2"NZdgD?9;Rd1IKsZG1,;V`Ohp+NIV=
%C$Eu;M.-nVAh+2M=m2YZUQ%^:EKa"S!X9IsIR^/'dgRat*`VD5Ah%rC1R3:,c,5=f)])MO;5pBl8CUrjQ!4$+n>[/J1?loJeG+b>
%>^J6*;6]")&)*E#R##lJF\VLfm$UG)R>b*g@oB(87&X@#;PUlmE,C5!/c@oRK1RXX)'3ZM3U?FfD1?BXBD/#j3+2CFBeh"mG"\`5
%'hmnOB?i?B[i'diiQ^ddUO:$:QQ!'[H0uVG6\?sPQhi;d]=ER(%7:-3V3^N"19A5.9NRuemk5MWl@$6q8tB;$P=dFA5p*)2U[`)9
%DP40n>JeCtj.CdR1K1:&Z?tUP8>V%t\WDtHNW'oMmP^h<-ZGhYB09+l1JTF-r7lTpWO$3Y<,-g%UinUF[Dl6RX79H*O.,GOl`hX%
%j!C+DYDWEJXc5,_;QO2f$".\q"(Fj!+kqOC<%Z3KHF-or*ZS(>e&%8A)>BtlBuI#&L-!*.oR6,EI"YGg-2DSZl[6VA0PJ3eHfb^+
%hJjLr,G'fKD7CBn!pCpRLDOM7cm*N*3(5K]W*?#cR<7,7J>*'K"JB7,(1dR8nbVm^FQ;A?8#,JHC0noT-<#Mk,SPoTIu9S'P#k`t
%>W/j6bNRDFMQ6!oH6(@1%(>S1$gBLQf.[gkj\uD=%4r@T.uhHtV;aZl7=&1a@-4\)4EK-f*ZVU0.0RIq_`Ms$%>)JE9c_Nh%oiG;
%jENEi)a:h'C*+ERPe'"2MR3R?V$-8>i^l&CrI$q'2=rY2&$m2f3G^*tSl.Jg@?Y`U9Ir(3>8M@@q4VhK7b-V;X%.-]Um*c[]=I%!
%$VFYq33$$\hDf>B23!4)-7-Mj=ZK)_9<A=T$6*rBe-:]1\#o(odN!Ea3,C?:nWP6.C?VlV)5@%fB+A.ca^LBri&kGt&LC(GU-inP
%Y[aCMQ>tP"&eTCJgUV8#r<Q1HOk:^-c9ib1Xc(qf.1V;bU2Y=@82(MmjCEB[;_!Q>#D9p[n]Y"Ve,0[$*4?kH%N@e\c7n:_8PO+M
%Op-UMOuuj_eMq@n=$Gb6/\O!nAr5o,&1"^^V4#91j$@-IG`^P\N'&g@YlP8o8!)B-3e\Uf,I%:9O]e_1[SB`I`aP(BljVbiLTU:j
%*&e@3&s/*jLA@>"hAV/D7#[dYfMGs>0N-Q!PkGO9BmQu/0HAV'P#c/cV"BdZ8cJ4mG=E-V#<1AQkYb70Eh.YWf[;5SKl(2nTWihU
%M2r?/<;`r\dR4'iiLAq,UO_r;3$O/lG&_N\bjg:>*A'5W)NmH<P-oot'50\u4X]7JPlm3c(.8md@qTX5`3pD`nV>FM2IfjBU$IJX
%34GD6Hh]L'HAr4l'hc(Z&O_kLBUg,b:nWL?A>'.\C`1I%YCph<4F&g8D?#E1Z*,2"fGC"F1bQ2T^/2m7R-bL__AotnDJAT5$JG$_
%m?C$_q]e:nd4[=,(n<RFIUS3ccZsMHTm=ML)_RjlJlhsRM^(jkCHCZ1Njs^U/d("olsc<dDtlM_)fB^G,a[\!?L4)fcQstYB7J.e
%<gVYp(,YAg&lm.%g>![,l0;NJ4cBVmCbG>Qb]B3Am>F1WKkDg=_6[WqK\J,m/Oe2/$-rsQV=`!80Sg>Of1EGKPpT!'D(<jc*7^Ko
%4_iGWe$J_?6H?tq3mN;0/IJkm9_YO*>m7?A[o&D!8q;ckC^0M@p.<=#R-r19/Lof@I.;ueMTE?hBE2()=hW2VcNdk:l&2"274Au@
%%1i>l9Jl3]Qo7cL\kB!K!X3WH%\u_pF?A-QF\1A-PUSf`G.-EI/62STPJP[nqO:KrU;q-J`4$2Q;P*E_3ELr;bs"5*Pn[ZboL9:\
%Id2\Fp?r`/lEE^8%+XCtlnk6WN:BJp4FjLAe?)@c5ao3m^::QQJ\&^4<lCQY,f&PW7.%H&o/g!5RmWu)<ogYY#Pg+6J():^p5,9`
%5EGd']C>R<mek<6A*^s&af[^AV^q=8e6CG^%csiVq8a:gplP=+r/Cbk74u>Lg-X14Q>AUM]"*3[)p*/glAJ6N\&b&_1G]PCYA,T,
%,0<q/VcU;Bn_E7-V^=,kMW*[cE2LchpFRpc8?'4A.o_U-)7aEF_=5*Mh"K4c".,C;Ii\,D;;BCWE!9VI[W\g@i06u@<'2jeY!`ee
%6C,mB*mfW_cEoY1@<>Z[$_SP`QT5@e[e5qHo00b6DNX*qhFIJ`4d$sa:Z;37IB5CY\ab<S;T2NDf8qsalU<%Q>H+L^*GO-U/)3/L
%;%:\00cLsl&[!9]ji3k(&`eICfUj[-":^p\K#CI15qDTQ"@:uNY<k^/;&K@/k*GTchS<N/rfg8*!&i^&ND,JNbZ;i1@]Lb6fIAIQ
%e0/$"h\N=;aB$.<7(h.(.Q<`c5'e3Hjk7psXKV4fiaGrF]I=_&V;b5^XB`d?l:L[Rfd\jj5*E%2^s#j$E+Z.]S.c<M50I^!%E`uK
%)rT(h[_t$?b97::YqbSl3H^#dP[[Z<)(Pj\_tMcR#'F]u'5Wq[=U[4#BX#0^e9b*%9"ilMA7MZ>K_ib`d24GNFTt''fdZus1@1G.
%ret/]``Bq=`)\Y%8kl_^1Kt$-B)qf_!P7Zb#?dn+S:<f08d32'6$4EQ#fo+I,HG?/P>sB0a=7K+Z:au$+KM:sgW1l/1P2\@T,V%#
%1c64R--]q=<RQg2=!^m[j/So?%'E3+nmH_gq:N2,8XP+1P/JuC-<WcJ%njT<R=BQCV\s7I(s;hc)4KK`h"[?93TI-t'^50>`)eY!
%1NQQhdjFs6)-<XX@>K@Vj/N)!<)^V5!PXpD@U'X.F:uXX[)43_dgE5bE/uo@Wrb!Qcq7=>G*!IQA/2p@Y`VocT"JML=XAWeXHMO9
%<lm>C.d>Q:XHHn,,HJaq"C!1#0A.ghDDnpqR`Jm;UaZh_8m7jHXcaGUfICUgK<:;IA.,ReJI5*gOr%r",c2Mb--:85<Kcum)Z$GY
%5?h,XOF+:N0B)_]?>!#6q?!k^b?eg6,^1>gZE<8T`\bY^W9Ak"2c)$J<B"#&F9Rr)M)L:s`tC4,SMP0JhE`/jCt1WCn;,@[g65N%
%kG4_"kW^s,nYK+W?Q]*"1^,1re.M\"kQeA4n\U9&G6IQAlVSAJ+%F_#.aMnpYVTpQ%<.#M*](S,Cd+rddq;TX#!bpbc?N)WXp+*=
%r[XShPs:5rl,r7_G,a5Z&jj8#$Y7Y4K(j25O8f'#Zkr=o-i!oYSpq(Fbj)s<LL7KdM^.6c9kc')cu)%+=L::T6O7Dr(*k/2&+fQ#
%4mfR/597n/MNg\>?Q[)\MMiW/I&_5JV"rba*=i]IAG;67I%+<Hp8\dss+Ea%90GMu6?3Vg4MbejT8OR'g$&VYZjhsjnBo1VK.`Ed
%C#<g1k]<0%lFc,B<+$jj?9*N\Vtd]lLd?0U$c;cg^I@?4AN^DLR0I6,/gG;)AaoT9G9g4=5nP[q;O$HO^]JBbZ[/f-2jt\-`10mf
%6GIA=Js?91N4Y[gnV'F`1YCIOeVJhk@&+=>of)C&Q&Q@<<WS[@Y:F4.=3R_Wi7K(bn]B3:P&hugErZG:jlJ&6"0AtpmH/W633)d*
%$X+ksf#mLNn>pCB6$autqjt0ogXUXu>d(jhN!Y<.(aN.PHIke'.@.#9/\o:pfe@,`"Y;a$eU"aAfq[+KWEU\A=BX?H7ARq=?ADSF
%oNCQ2,Us.=&$sgHl%WGoe#$d6V?8XjAAF]!e[3,b@Z@alhPL>j.D5c<,IaL\B)7V1._mdj_^7m#]Sl<AZZ>@jP/X(A:4KcB]VeFB
%eU%:P&j,+m>#2m&l2u!h+'O#!_aG[Hpto0IK&9W2MdiQ_q1ec#+7O_a2J^nO+k%_!I4ZY"=kY8noM(O:95![=>^AfulkFpcW"Kj=
%r8Bs1\-/P;JYPZFo!Le0=[3g8MOGumH1BAGjf6P@+XOP?$_$T8%CCVW0P"d;h\aSE\kX32??=WN.%P:r^1qUNX&P+Xha!qRZX]^,
%NJ<&@o'C$jH=S@HMJA3\?eAdgN<KY:a\_CY^`_>+%KNgm#U,t^#[[($mL`q#!UQo0:c5Et@+9ZVF9Ot)8.*#`0O[bR[SN;;!W<c8
%8m4C,QD^bVbsG9_k@=3%=OE];kIE7)eb8mm7UP)N6-)!$hCi9!JRE%-ACo:907FQ%qNKd-98dCIQUDFfgO`c:P%W:6)s'moWKp"*
%VBSpecsmD5(ohMMFDd\r/X)@Q_J.\q/([-oobEd-)+gD\=c=!)'T'K2Q;*u&N'C)WUpAJ1B'!Yf>OuNMl+'=An8.39(uMInoM<)]
%Sc0n(dj<^*I>2tClTP*^rp&+'.Lirae^8.f!rcAl!R3<nnsZFb!*iBrNN!a8SM2_fCc)q0i-fB`ER[sH%86er%8Wr?%pW$f!.%Qu
%VIBhp.2+-F6h%%cdGs2as.IINneJu+@PS/%3q\T_A.4l`THU6l"IO*$9ZE19>Wf/gQN9dF^bco2@#s;@Sr4aB`6<6Z^jp^<,[*%1
%^fOJWE:X;oPMSG="(5R8>uNKGqbB=.R>S9..HdF41QLiUGS\^ic<!+SA&p`do3VgE!,\#a(ZR+#fp@bLc0Z?1Sgso>;M#O2PFlXo
%2&G<CIa#cUbSP=Tnp>T,`K6]2;)n0o)+UfeZ@T`#=/6Q-_i&ZD]'!OYFJO?oSr4c/FHN_>`MCjJG*;0#cEdZ9>`9+f\JQ:R\JY0a
%X:MAB(n5D7\JY/dN8J;*<'E=bL;\*pfC"j_m`'0Lk1K=rh^>#fGF,b%mJ9mHl1Ij4RpOG@PkFnH-_\?K(Y8F!Gi'G.d9h45hI]l>
%hQ$ZAg=Y1_@gU6'l_pWq8MHji;0+5(EMh>H?@hG8"E&NKiL=02E7aEs?X]t?lZGVqfmtF5Fkip@LPTU/;l_i5jI]Vh7A<[nFa2?6
%&m_QIbahO5]g[GJd-<4[Ea5YH7aH:dN^=q0X#7S>cX5Rn!e@QBp86DV<5f-N?J'9Wl1MnSW4QA3Gh1bc@qI+AB6Y6?)!*9^C%_?<
%-Tg%m<\KkN?u#WdfXkIn3GgD5om8+X@9ekd&IegUY1C&u9PT!FY,'Y/`KOK_RUWk*7U+,CIJ]2PK6POapl+.&X7aV9YIdsCR>iX3
%Y1?gaEX9&oi3(WE^8^dYLK\Va9&XMJBpMJqfA,K4eTtfeL00H0b'he)l\qRPWK8Ir'nfpGRFp+8%@!,7]6)#&[%*C<Jbuks?:e)2
%POp?(Uq'p5P%M_?)II,0Q1G=-Pr(GT.qo&Y@4eUW.8piOZb2MLi;<5f]J7M6!8+&i\PDsXqK$AnDu>FZOR_fP<FEJ(-:!VTj\hNb
%h`_oQ``K.e$ua94O8]SaV)3`NSs5Phm*\J/53:cU7#tP\7u'+n%%!%EKQ#`Js$_8=?llOB5jh^6%bDX!!9>_06d;h2cQ;2pog*`0
%]aLH_@mn4=M1,FuS['+3!1mCe9)&K2D+4t`,Ue@1!o6qSk+8:hnJq=Ki0rI./5c>a/Kg5g*+B+90OnZ^2[Ke<!3C1H12XV\`qWq=
%0:4Q3-b"kX\cca&@p?qeprN70c#;Qd>%m*A9a3aZ)":O.PY+k4mmCibSP,h6^g&>71PLBUed9nq@DT)h%d=9C+;n7P-_+S:'E+^>
%<Tq3X'`;g4:M<?)`^b@h]WZQ$jili;^;08nq^<QVS0Yc+Sg4`+b[XE](9gY5P/RG!R&MR;]Tasl0Ga:33jC1q/<ba<]@FDSbc$mV
%$-QDB]JhQ<Gf(b#=N5<WQDFlil`&mUakTNQ*u]0cMab/=JN1F8iIDk[`F6Tq#ja[49K6frlfB'"WPlgZGG7,j[#',ATNT8Jd=:qi
%GO/@Pl=S:[;9S[bhTJR(I`85Ib^R>R]2V%>1#b@Wp_;)F.5uM.s3hLp%,&Qo1g?*//f.I=VGIrqF_1*'l(F'@=SHi_fR<#TF$ngC
%6q4#ffWCQ`4)aofeL(b(I`2h^FL[-JS8UAbW7s(T;*@W10gj_6TV\f0U@AqmQ_^<!8`S\OMYPeBn(?Uo%8QABJbSN_;U!Ud+DKA$
%;W&N3\`qbs!"Y]QWO[9Y:4H.oq`ct?nY.iXrVV:*#QFs'e%Uh5&P"Dq==V)Zl-/l"K(%`AV@!/.T&+N-k;/-'bjl?I@\&$MB*^:B
%mK.oF&Jrm-N1),=oc5/P2-]jnKhL[&!.0YSTF]s>M!\WSM$Qp5Yjp,t"a*RO])C8l&3lCnjr[YVJ."@N$E1Ul.G,nnDb5?`F1E%W
%Ujuo!rI*V&Y-]f_6R\gKjPV]d^*2Co5?Sd=mRi0_qS$i\fE&^s'&RtLVt!3n']UWJ!06HH<mhFH_YY(T<m5BDYU'/1Ao0mD1fgr8
%Xa.Y#NgIb@N<M"kVlKp,HRK5S??U_;4.M&N/j*-!If,iRgSNQ.`_S!E3^$T&:M\)h]5\uQ$@#[X!u*QAEpaa)8/+7A`q9B1*f2AG
%k@k#T,<&.R<?YG\@mBU33kGT>s7lF-HOgjBRkRaZ/ZeAtM>Vfo:4jMC.Nls<)/h]*leUHl<oMb=LW;V,9@@/P.pPd;mY<`Khsc1K
%o)$@DA,R6.aCW+eSY6?[\CF/9-!hQnIr#7KntE.h#oSU5Wque]juDadX^dZ,rb[uJ9Vc;5&=NN5?0e-LTJ64l>g=?[0\(FS&<ikN
%?Is1F_IX)nW6lc=c'R,T'rJK4)Lmm<V0X;@.l)9&'>78Ab^:mK9;hhB[pE\4[eu^hEJ+4Y#23)70q\2?kOVh:+rrMOm"H\4Z#t:#
%DFAFrFhHS7/)g41h;\>7[&REO)Dn8/^(Y=kg@#E8pon34blj`$-tlj%=)0FehS2%N6'98-V`:sm*'^R5S(M8g28S&bfaY]poT:Z0
%fO;TU>8CGda:rYc#cINN6fF^thb#f=.V1i2(5L7RC&Tu[lGIT>;(Icie'Sk;KTn09jm',!IPOW1CZ)fV7rN]6]59K&oHEJfh;>V$
%$n'RfajVk)qsF^d6YM\SF*[uk#\j0]mf%*XLu^p^J.+T>[<F57,>ZpY8F,C0Qg(\mN+"NiXZdFuDGfd.h:Pt@MOEfU9IgJR]fg2:
%]W='aHZ@DJEr__QEW@a9$2hC$f;Q$2204;FZHG@jOu>dC0WTg,r,QZ4*OXuk)Q%&Xm48aMl?.Oe/TWFdE6]d&gP<0h#QV!r#gPdM
%je5I$L]lKDZl&GL_ms56$LU=Zk7N2]OmR670*X[<$@e$+!RAX'g$u4MIt5OK&^`1s:Vq.95ZX6#8<\,jH+44M<nod_NV:K#I(rdR
%/"9OlPkj/k/thrFKlU9^#.b"#'&_bQMJoC%:HE5EM;]DF9tia82]O1h2V#"E3FB'/LJ0nPJnjNi\BfU31@9id@tB[-iA'>p@Y\*E
%9;rWp5<-MsIe^fN'9:[Ej5L9#\s19u&;"7gOW^<H?hZocB>:aV.VoJe$V$Z1mqqe:gH9$Pd>!R7e;ue'M*RGn=k/50TFps<GTUS2
%_R+^Wl!GlIEGR*dEPp)Ph:r8Qc9UQ4D/_F,$Jdh%)l:S7rOn.<MS4cD2gd:EV_WsRCC_Mh\ao43#mIhJ>?sChk+!f[(!/2K1(7KG
%[DW^/b5tjf5&pldQ@[#g=ubMDE6FTccHp0#2s;P4`W+sdlUq<!IYjJ)!l5iMfP^/k\K@\3>Y4'*q.o"PVjRGsq,+2&J?Nk0IUUTW
%'D7d_iYIlHCPmO6ZW:C/M-<tu#:8Ep`s*Z(6LjrmN@gTK%859UrQV?s.62PM'c$[KRn[0jM3bQ%a`0<qn;f*.e`uJZj5SBfen.r:
%<L<0NfHrN&UuFC%NCtasJG7Tu5M"i-E$(?$Jp*G`%KXG3kc`s:=tWltaaREOm0H(4efpS-M9q5hjF!k\YC"HHcF748-CFQip^$U[
%k'1g]"M[R!d)SA>?uhOB"QEp*dt#5(kE6Q?\O!.C?uCaa[(8P9X[=((c\quj*EG'\+SVEt`moBd;NKq[s5%a*]`(+bs+e:sla>e5
%Xp*\lpck:8!G#S/AO_.7505quf0Eh.UH=2f:BQ1mCgp.<L.pESs8D"^&Wr>Y[7QM1DXl@o>;4c(qc%-<AS&m%MA=2rqm_CL]h+@r
%<^`8R<d]a4C.oKYVh13L?uha,%\*(Ufh\9tpI4@3DQ@CW0?\ZO,YlhZ>?K4S=(nY>"pQ(##7C9'9*sRn3a(l4BX@3RY-;l7[J+n#
%VAQcMlXf@n!*7\!5@,<"OPBN)mhjuEo3u**GeNi]jWNl[Q8>89XLCWf30rTWn)q'/T"bc(0)g9EdlYVCq\jmR&^<"&mEirF_XbE0
%O5SU:<a_f<XnAimCV8lD=a;XbK978G_Q$gZn,&GN[,#9Mgj7P]X:'8F&BCRR'*5K&(:6]??,2_H@(uo,-il9p.rA\J;$<)Thc@:5
%##gBPII0"Ol2CK?j2mVGG!"(mA*:*ok%G`Eo*9gR<VHa_/)4NMF[&;^l>"\TcXfLc&>)Ufp%d!G8q-33.&qa^HHH.M,;Pnbj7VQ0
%C]/(M,bilg\A29E_(/@VV&(]6EnMcFqF9MAa4lZ11Za1q@@OcnF;0n7f&(,$&7T1prnbV2[mq9=V<&6BN`2ShKp\(!96,V2:5!=T
%ftjp2Wo81,:FEIB<#%W>g@<b8lj)`L),.QO?,6ll\6W_dY_uR=:doF/?sL,il2H-c'dXKrZ63hh]sraH)<?s0\$"*6@H8g*rf3>p
%o#piPLuHA>fWl-Kf%@hpYsrJW.$#)GU!\=\T:uegf)-N]0&ml5BeLs\FFH_KofL`/0$?A[df"lSA]-86F'^4uT&[2VNZE+DIb6i"
%\h)C;+)&^#L4u5c!c.c'qt,#0Ir&@iE5>;KKF_.39,cnup))n$*%1-"ojtO0@OF/?(+/790&ZnU<WREc-*QrCFUa?;f<fRc_gcu#
%JZX#']SgmKr6N(0iT[fp/LtAG?j@3<ROe?-?f<\h\Qup.4N?I>p\^1kA?L^QJPlobKe7K5j6C2m)>Z]G(V=$.7m667o@d'`q<g<$
%Hi2g<qn/eVH<d!_:;IE:A`D[1R5HNgNtrLbD(Dp!o!#Xpg.Ba*=INSfVe=f6iVu3I5jc>r7./@T)=4l3kh#\nDGaSfl^Y!/7AHb,
%F$p\lFf7RmWG?pLDSUX[hH)hX@M)l]K*1EnGhfDC^)3([=Z"iD$"7`fC-9A8-Z_0uWVFr'?2K8TDCFYPa.W9EqY*gP>$m6ma<nFV
%8AWI`-g49NR7M:bNukB2-um^"l=&5\isT.ZSM/D-X],fO:0be"P.8.=bU^oc[-k;V,:/6Z_V0dCF#:1p*>4h>3;2S!PZ=!>60=Zn
%q%\5K(i3Nd:j?t'\*q9lqQ@b,poplO<L1@AVnrEp?iA^RQSo@<(mCu>G-6s0:t%PmI-elJjMhM=/W'GH@Ou`4V[:AU,+5QL<sXR_
%=L>ar<f/cdB#Z.H$])$h$[A64N4eQTlSO)M:5en%(TVE33qA(O:;Ume],V.<V':en4I5"j5K7Nc4lUT_]'j$>O(NaF=s3_$qP4J5
%^Vb=g_k1pL!>4pa79o^"TEdojeC4--Q=Z]_=R:*M4_F%a)JSA=>h7f;T>j<@/?8e*^qPb()<s2!b6)SG&D%Xt$6XYnM0mMLK=T?K
%pPMOj4-o*h>&/^+1fTO:+"$aU<_i?K,),i-T?Ct(_GkK[_oCF>n^6WAKjlgYR%N$u&6^_I)SP2%k,6[=\Yo=^3)7GBJh]*+ba6-F
%rU#+(s*sk3n,E$!lH:j[mcCqXCt;L/q8`;\i1OLg$e'`qUD!M]qVq*>`L9(B-bfNP$iEHKY529ed$<SpM0ekd/:KS=KgJC/D2e9N
%:KNcb@$(e?&L=3mZVUpRMs4,*jq59.qD._UKK,LJN1kcO'Us/tODNl".]f6YdTYR6&nG0@gBFfDOsr1*T87a+o<h^l?d._:h+LpY
%NIDWlZV7"34c-.a&[^ksp*2i59ZF^5Qm@)_Lgr+Oh%G)8e$ps1N<@m"rNWQ8Jlo/a8(8I9\?@;%_e%T\<]0n[629QUglNGUc4UE(
%%?c7SNF:TA+h5OfA&VU++Hd!2GK+?=R:'Blc_dtTLB"i?L*@`k(K0Oues\FS%A&1c/$khEe$k`/9-jh+$7Pg,c<X'+@/Y1r$PNs6
%h/QI',g2PpBW/4',*jaQJptfDY9bYR7pTT8m-rat23lUO-fl]*d!]^oh=YnbCB2d=`WA9lID.]+;)l?I*]sFbHDD)7\Is_=GGV[a
%bL9uF/P07oYbo=DdG:rFQr#hgOOm(SQh8>c5A2K%cej]M]!:)s3h-NQ,hsE[4OioKK8EFohWDY5?&e;Ie6plK$JZoSpQcrF&/;#Z
%qjb#pime)\'8Q9CGJ\m-`1$[e!j)u@d%Jq&)Ig"\V[E+tF".74*V2XG-'!(tqMcUW$Eb^siAW@V".3bf91@9!j7EmT$>(MX.gVJ?
%*^3V.Zn"Wlk+Yp&oRqj:rg1\33K]s)"VX"7FnEB9-8mD'bjZkuMP,CA:gNdB11J6W*!AucXa*YN7SJ7fbBiUV0E9?OJ,P.@s0o2H
%r:]I6J+LW$ro<*A^jbekfeR,t^O,e<s7l9u?[qZ#0>I;Z^]3tn?iKT5Dgq`R(\mOX^&5)/l$pVN_'58MG?VWV4s<%D`BY$J!&G!T
%8L,]#rZh;).fRJT![O&<eu9"&lOL$[I>#@"j4Jm/[_>4/+FqGAeLZ?<9?p<T3U&jM.4Dr+763gNBBd^3l1m$+R<8T^$N]BikJ"cb
%)K'(>[5<FnUk5)K@<$<N=NarIKX4+_V]EH3%thn1kK<<72,ZEcN&m1(kItue,6#\m$p9f<0d')SXHlJG!q+?\/[anuk;pM<<?)X%
%=Fb4JBN;%L6=`F%MrqB<8QM:5-*3](TJ]#"k.d?J-*6^V)Q#,foC'#i!:eGUI.o"S?f:t^nE'BhClA*1ER`QO06c>fra;3\ND(6(
%Vu/&gN2W<e,8(/5qH5>bi>Rn\qCf?ojs,KQ9+DX-_Mh>XWC%./!cU^qp1^]uE/VG[,sXb0Xb97")p>!%;nt[iX`5:?qK8IsGr&lH
%lo?A70lr2AT_I=uV=1&SMLULhJ=/s2fE80(CQ=,[h5jd!"ZB9NUMu&PJ1O[Xmb<p=86R`blO>Mo9CHZn=a0crI#[4?1\@G+Jn'f0
%9fB2P3n>!Z$)M2pGnFI[C?35rj%#,UO(*HKGN-3"6g.U%VCe)jfftp_SAtI8o^"a7g'X]\jtV5LaqZflrbgW1kC5/(k\1[.;VZL2
%i)H*L&?cL65HU9)Q.-D*+]p1[72(,(M7g8V'G%"6Prnkt8ETsf:3uK6h/bdXk>h08?/$pG7Z[Go/3j$m%J)q=mOl?)$kR%u3<<gq
%J)A9[Z</d7GHa4RjKjfQG^;]t(u:bp<O0(]AG3o?$at22,XaB\.Q4RlRNKjE.5h3R:s\P\l.O[*'"PG?C0#/kQ`ZbDnE(qM1URu1
%`#Ia.4]okq^16D7%SD)#mH(t:omL8]4&<.6,<mVGSS/dDO<D_XR(?ER=M+?rYnsWJ$VJ=ofq121+7c=l+/,o6b5]-FaM#@JkFSu/
%7%B)"AgkM@Fr@l[qpR3dT.9gP5fF$XI$KM;AF.:L"S6SlQ0DBpGcJctTVu&\LkR3e?Z0T5h,k&87PZal</0Jr18o(>W4jmp)OQ-F
%$OoBFrjJMq;7HK.(+<)e)&7W5D]JXKe''8VVL-\fLWWq6f)(jBTa3.>I(']l1O39b+J[ndNI10LTJD+DWMGhOJpCuj&9raQL4Q1u
%&n..KBhana?NV;hi.HX3=K>$T(C25Go5K;R]A*8R7isOP/P)=YXa(s2bLRT#s3ob.M;)GMI+sHNGnLfIh;Q-<_ee,UI<AZKMYGS\
%#YUkcA)F?Gl4,:FKLUDZ3UlOG1q03QTL_Y'JSNsp/;Cr80t&!aXep@jFc3h=D!1jjE2Z)TT-Cm/)<s1*6>_]AC.ff3$.Uom`4.%3
%Z`im9CATH0a[UZKioe&KGmb08CsPPq3GW4+r*V]iST6L9`2<`LC&6Wo2OiXGnTS^k%[>f1Wh9MD!R`:nddEH%Q]!su-kj<50'`%l
%F%HH7?q=mtTKjPs+VhQc?6/D3ND9G^.Fj5uKTs`^iC,&r3BX"K!O1lm2:t_L.bM&_/nlG"a,K[.]$Cto)F!9pWu0\1J`MFtHgluh
%B"U6rj_)>!A.k.VV$10@iht717*!c@^\hiV`]]+ol5gRS#%\R;nF*.?^aLa)`WPB%LAhtULA`VMeQpMpM$L'E!c4=P-\ujV_:%[X
%8!q?hFG5E(^&&9/D8-uARYT=##(Chk6UZD0jFr7%>';]Lk2HIIcQYlKTT8NCO1;4UUr@@Ca#:jW)?Mi'3]rkiB>;@n]11S-N=^d>
%@-?k2I&iaKA\OsAZZe_Fib)(DZY^W:afro>=8g#pg]Ap*^V_#!OR-LNrgd[)L3**AOFA@gUeVUidE"ZOS49Ma+BX4^(_H@kQ1`70
%BM:@oKPKIiQa>?Fq@m4r6,YSHDFjAcA&P)s'f:Z,m-u5Hb5LYUnR2Ha@?9e=(`lEBF5Q"B4\V4?j%ji@moGYl=/"BZKeBr+0HhL'
%adj:aRWd1_M!iX%Bn^5#;=iX</%ln.j)"r$Q>qW/`)jDe=!/dQl$HN6aEG/T5jPF$dhX,dmgTc'`3j!lN%6Yn\?$Sp!ZkHVn*Ktd
%)KQu!],?&V$SfDdT%L,9NVV@H:S6MLL?`uM[$MU'>e>D:[,DC/s#9?@?iSlQCXjfZ>BlCWks8A"FsFAlcn>t#E)aMd4<131RTMq`
%H.IcrG[AX67Di[7[W`8a]l)hH\DSEOK'tC(VeCm'G=*lMI?V^mnAAqA;YLDf@-2Yp!u$Td`(%s#;IQ1>(;gh9R:BZr5SE.P?222k
%:<[6]b)Wf3)f'B()ksaQfmSUiG:UNdcUX6B*(/X6YQ2PIguBgk/"VI6A=BqL-?GjMlj(FL?#bE0MTrd^*=-'!3qF;X@9\#1q7mZX
%H)nqGiCMHR2An;PU:mHo%?Tg>^j5WbQ(,%70mBC5Rk"d%%FK8JVE$*-O`SZK-%J_=XT[n^j"6[l%7(-bhYFHRmX/HuPTP-:I;*%2
%o5]oKhn-p9aSS3lL#h8%Bc#.1OE\aCOLHn(r=qeEkNMb7U'ap;2REqeT!!#.SS.qDchR)f5*m6RpMEqQc<1KFT\8Ts)f=\?(N$Kd
%ed(bq,fLAA/;==qX">1$/-I4o+?Gg2pZ"1P1+FHL.rVrePW[b3gjj-@?=U%.HRk*S;6\?/a!9R<X0s'g*[\[c-80pm$4WOk"?MP@
%\Dp+6_l.pqj)Z6nQ2PSkbdV-QM!HTVGq\tl]*PhNV.SZ?"DM"GF#7pBIFZ`?.S,7_a",-!"NgMoHjel]mLV@P^A71V._XWN53(@Z
%p2i+_H(]Z#Nsm(uFckB""F="\//(([3F#-i'/nh"N?r.76b%Xa`%Smn_O3#,lcL/1W&et1*T@IKY'cYsVnV2@\ph:N48*,qd&_Y]
%Pu5r-#(,(Cb$_nn9/e@'Kq+A@gFWP+i#+]1_9TdJ=!If8cgIu\_]a?'-KfQ]`[^S)Z8*>&)lB*i0u,=jok%d>S2=Ts%+YZ(F5B3e
%`(`d7_^g'rKQo@1WqQ4%-SrZM%;/%<:%HVIBL#K*:B/kkT]i#DZVAioFLB7/<8t"7$k:^;ohfU]#/$bI]lGncW1hC^i+?YqPd_N=
%Cbmn%G6nV!(INgr.V^Cb6UN5i?H6Jf&58rR\/?30<HP/L1P8M@O'gbU7ph)-X:5%ojD7Xt^Q?*V+]fo+^Q>L]!PLqm`HEa6$@nRU
%Idig+P#fT$oWN16`^##'5I.b.+5A<2AF'L%!d,C_4+kt_GiaTGfXf%kQ,-R7M.\>k[J;8DXUGCnN>R.k(=AaZbm`)/O*36,#.i%J
%[@G'>Q7K?$Ko-ID1BWh2[`[iP&9h!8lTWQXS!ei-n*&rRG*qljDW>>@:fa"#a3@'jaQW+T4+k(ib^./g)o:X*T`OmP0`/?8%f6eP
%_Y16K6#+%N)GH"KG-a#-ONh]Y1D3fNV&%8U,%[5AOP=b#88Ge>)H:eHEjdeIERA)6c1-904(B1U0[\3Y7Kq*TKdRZmUS9\^Me@sB
%`b)oO:E\D<jK"hKOXBKrY'("_L/i<^g[,'<iooqQ6c0GR1rK"l@H6EQ0EWQ&eB$8o"G*"2C)>6?n#Mk=OS2?/AnE;H4$$R`M66d:
%bG-NcR>hVK>T0KY\euC$>?"CFfa!d:,tGY"A#p@<^tEmRSW"MJ:a$JaLQR-(_HQ$F`W4T%`1)_epEZ-CjDJI87\uYM$t-.SfM)d)
%a]'7('-i(Kb%#'?1&s3i5&W+Ch4sG6?B#Bj53g7]Yj\>o5l3_t<lXu"hI#e2VbLm5bK:qd(L8@/^?<8(Pl^Su`7/+pN/G-f@LfJ<
%+)k9gl<tb7bUN0'33CMH2)6l5"7POJNZ6;c]3V5OgeUBDIi1q$lLZL'p$;QkA,m^QV:l=\Ca:IdT^"l'-QKt$OKUPHViJ>NVjh8[
%"<PkYcXgQn#*LG%DPt!ncnSfX%,aEb4<;EBG3LJ"hEZX+I^(SkmQ(-o_SEX5UsR<\FqjP+0B]T+7DeH*j%8Be#8G!-('_M&_!\_%
%E<%\RO`"P[*in1<jE3r(=r<bkWXeI+'-,1E^H@nEs$A&%Bbf_Fko.\E/HUX]f2)[/Q"n%o7Oj)-L0QuSe=:coiK,'ncAC4o<3YM)
%Nb*aH8f=7<B_\:&DtnR?b.a'[Me,l/GK!5-U9ZoQJi2(j\n4VSQ#>@,`o,@/3jRYFJ]<o!kL>s]T0&:RP't[,DkRU)AFsl%>+im?
%8ABZ\<3GT(JQMCbj"6Km;,nUY3L!CgW26*1%(rJ%Z)1aNUnJU7Bfb]C'?hmn3)2II:,G]'/SDq-[W]i^1h>fc4m,K=<fN3rhqu%9
%+%a491Thfk5!G-S!UV,BL,8`P\V;n:6ci8?%qhOl1Sja8n5]K7_\qB36P&)ncDZs1^0)Ai--=i=5ZM$TI)Ebp]1"Mjf'8N91]s@4
%$O9IO6[7Q0bJ<RC"*ff:<!`*;/X0,c#s=iT()>OH8M4CNWk^KV;;"XEhI7@i\]CT.IQIh0d6`=:a$3cZK@DqphehlbIakpb@Moof
%4>P3j0Ed:/eAU61laVA&AQ3Caha/1oQ4W(:P_"62WBIHp/Z;q?-'V7mduNZ.b,E\jK(gYrfmH[M+K8]/(<XG(`.rCCAROp-2hq9S
%d+bbsjj>@RN0_I.X5g+D^d&N]BVl_p/#fZa95BA@bneY[Xj2R943fbP=p0o-6<=pYCX[MfCg^Yg2/D;oi$a2Khiq3(CcIe?XE?UB
%a4fe#rUUkp#n#jJ9k]S3d)iXh!fFie(n/'0TXG7_.mtm9+AF+;D;b??,ruKP`s5#Claj=\F6[5ZnR]I>VX,\8q](+Sidh`]oR#=_
%WU7NOO\_kXog?(KUR/rV,$E=FJCiM[J%loYPu.s[ZH@D>;N5BLO>#f6&.'3fp,_/g=BfD9K%m9>h$kp<TX>`Zd-s]uSGi.0JlVlj
%H(Sc#&ZXfhfiuRukWcNYUP3$iJ`rW-/]Udgq>]&.4tV]bEk34EOYLSM@$[Fs#VKaSfZ-%>oD9R%7Y=.fq*MZX4=$Ia6]2^mU#*-o
%cOM%"^0oCqCt[_/*Ikc_7_IPp#.8](a4n*RkgfAf[q>tCa"qL_l&8Jf!B-Aqg/t`:cBP=(HNFerG09(Pr:Q)6(Oj(=(h)&I0!kH)
%2u2Y4O/Q("7DE$e"5OqVj,NF1aZ(hP49F5o6?QCq#[5I)#mu!VW"R+''=EJnp8$krA/Tg+J0o^1='2stYb]"'0+/GG_5;Vd86%ad
%AKPd;=P`e`)#QrY%k$>8Y@uc9RFZJ:lji!n8dF-G,?Q(2VK,];8S'2-4h0dl$sq3i\[&Bg?kH@br@t$$HIC$he-ZYX1DhD1FbPOe
%-t]c2^MJX*I_:W5^fn2TCu[+>ldrO-=&lB"7oSpKSSFc'ZMRAP<CA5Y#5$l+,Aa1/n-2;aEFkLQFQ!E8esh4>H#4(FIAklD.pLsk
%A9h/7"CRnsZ=@_%("WU)52Re(@SU!A:fU*M+lJ^)qUb)o`G4AN:/B*JbN%^C1q]O,WSt?DOWC,Tdt^$?aJ"=S9X_FHVL\lD9;Rh!
%U1T/*&&JKF85.1P!+/qln"Fu+KsFK^JAIZ*"WV/#'"&h9<ABai?TsGL;C5^JYR_PaU],Lb/p?T<09>8Ra]h^.[M>!97Kk\%a+@uq
%(1_q+$HX)96&J-(;?iVr;W2:XIJ<sE!<^8Q&G5]sguS5eYBk2+oGO9bP$^tn'+dWH,&^tdJS+@nH^&6)2>>B(p/Z;c@AU7-'T.j<
%QM\OHc`FjqJ?._O#tLDLP<7+#ROA""'"a1:4IkK1^;d43pLehsV5Z<1e[pJ$S$Li)4/d=!fm3>Q"H@A&RC.\=lkige%S+PNHXS9A
%A4@JhRk'n#"8_)%B'fVEp$FL<mc2j.6d&NdgipN7+Q(j*+R"s2Bfp>m="*Iug_KO98gif)YTuBF4IkCilJ/qKp=6^+'MAo.k1g80
%JApB&4(du`[?Q+F6+o/C`#YJj'");ShHbeeY8>l>aTdsSe<uW_aaL_W]XnT3T&+AA*@eegeWYW+LR&;9?raJ-X*]U37W8C2mN#oC
%BOTe<4,TK)Q\X&f(\7!)B`!pmK.#mV'BSN<:"X4J2Xa>F7lto+0s$[Y/tV*)(Cqs1cLQEC#R'FNhF8iJ"cTL?-R^Vej6#?0)7$Hd
%m[X[-C@5KUD?`>@Y:^lnY,-;bnQ6pRK\:d6TDV<bJ_cOIP+kSB?_',21UnB@mLZnoa_SuQGN*'!g#:3'9!CAKa+m;GD\n\_Z@`2"
%JTgYB"Ie-lAo*ffr)5b>!,&`"!I5b>1/d1Dljj:,:OZ[^B&O3PY_Us8Z9C1?%l_!aAEMrE-#QEPluaW(EK>/3r$J#fEH$-aBW'@"
%!?pX]DN8'j6An^DrMgG:lkeguMo!s3:ZE1Rp"gc!j]h]M%f.0X&_@PM_00ntO@*PejmGY_?TE5I+'ob4R9[jDF3tWso]_5tS2jWE
%FLcrG3u`(XdH?24Pl7nTn>l/KW5DqZSfcMujciN$#56'[K/n0D?d.[&,ga0Z+kcBGr"S2Emphbr4$-^S]8U".^3SD*jaWaELXJg&
%p7+A`T\#[bLDQI\h!_c<SB,aD4&LqQQf#=_(7!B39_QLnR4ge8#BTD)gqLYEP](F]'OV]9GOr^->6O,qLBeEu0[^C=3V8fq2bgC5
%=l_@Y-u"1B)j4sCSbJfmos(Z;?UerSB>SMG(sFr4ESk%[kgHjg2iq#k=2,8,Y)Alt`mn\SD[0,fPu2i]c#;A,CK\VlY)Zk$46_-6
%r%_"UT"^]G2SH/cC=>6M;0H`:]]0<e;_,D_iK-ng(Z,b;qT9uWfFkRf]oZ[sYb9n&e(+0p<C?NTc#'NF+qQD0!Z@rl>X'Y.<f^GN
%3/mi5:9Ir6\,,[dE0B+Wldr3[_U\>&k_ko+c1T6cBrH@GiO-Ml/m!NV1Z"F9Y$XM`N$W:8GlF4Zg\]g6kg;X;)Lf2j291ngF$V#L
%lM+@;?G-&X?nEWnic^DXqU3XYK<2s-2nol%=-u\8mKU'(("IUaaaYJSDsi.-/aM]sAV^TQI!,?B"T7nW*^1O-KZ>sZVmXG<k4grc
%Fo7=8:Ghj-]-XD;'06>PhaQG^\*$$*@?3ipNYp=iV9jFQ%;1H^L[?5V(u!7%1\g8.@GWDoHb((oe/6iM:[h`>lc[lErp'/BOHjn"
%]2?odTK(']F5\ZW9V'Ekb9UNWZ\+Ulh7*+tGYlG)*9u8<m.<ST\m-7OSCu:?XS;6cF<ufW%hH]:>I?S^L,WY]*\IueHe<p&DBE)r
%Ok@+Q;/@T1lIk>e$_8I.k4Xp#gFg$"b0>]d#4^hcOIP-_Q`N(+gLVN4fWVG*j=[_C6+6l)TgeqMrkLfOUAH4K&\kLpeZcf7Ics_u
%aYNUccqUr)A["1#pn=L'F8X[UI@OS*p+qR$!_.$LFS5O`'/.qChhTmC=5QrgL:!H-LP;"]ESV^19ZQeQ/A.\&B(LAr^LjuWZK'Kb
%Uj%$?4Z,eShL)M)[?\bNqa:7RTt``13csCZZ+i(3RX]TE:4@LRH%24*I.9DJ!@^(EI31%U<&FWd4kKVc.\es6-K3uFJ$l9LkLKC/
%f(&1nr.-,oH6o'@#!/ku`HMkZpO)T2aL$?Qr)Kc=os=6Ks&i<KBce6sC3m%0Ih\hF]'S26NPU:s/GeM<OkDng"[jW\A'I(F-F<<#
%G.bY/M.bu^`<S,&Z@5!^Dqk(T[;oX-J]#<UALo@pF*M2&_RGHl#;U5.Jq^MJq<%Q?%mJi45M-jJ[*[(FCtS1IbLnDb],3KIYJJGC
%jm)Uu"SU9sa+KsQe.g71ZGW,$Z?I9?%j^!O5Km>,mH"%.CK,>&GrWWYeF@$Uk;7(:?U]%<G4YSX>_OcV2j]MeVH7E7+Q?Gfc0o.(
%7<>4VGa*+$9tq\V+iIKS4u=j9OdkN(m?En1h0^pa@pb`gBM59>gBOC/dLom=nV/C1Ec_15H'q7$m<7^RgNB!r:\.r7orDc729O2:
%_b8+0VRr?QoS(]4p7'[R9eY>=:f>!;IZ@c@5ISJ,g?Wo@'^4hOhF:NhI[I:P*s+CCMqU+6%-s",Zb,7PUEf8qha%N&\L%.R^NtBs
%3bstch(E,[3:f1ZNo,pM[5gbmb.4M/r'^0!dK9Bln#?rN*TcX`iRffohY]dKq!+WG>s_LhKhKFi_WLC*T/.OoaOs@j&D*rH1'B#'
%`cUec;3mq6B`"!uT'2=noP+)6jNcK3U[mF0Ti?g_6(?n6\IJ5<QSlV+9>>auO;k$a\N=`68Q&/>0RA-6K[89";E9)MR#Z@_2CFm`
%,2mDAAhe6bH$/^r<R%/j'YG#JNsb;4h&O,J[`NR`oGZ&BG]pF_9.r`dI53XY.Ji)BH\;6Bbnn5E??OE`k3>qZjkJJ=X6_T^nM]p\
%k2,5Y?nACtGg,uGK3XUf4qDRFHeQ+P8FeDG[PQcM.q_oo4d<>3D"G"P2N462Y$Qb!T)SHQhV()R<$u,[+o1Hc)eV:/F.Nn`RBO>:
%6T[MFnF!%\p'sjDKs"_KP5OoCpc6*Zc!b&$D9DtHc52poB!5k#4>jJT9r"=d^lG.m;K#r4:V<`<#Sf8iD7M]^Yh7[_/Ss"Bk;4qt
%G+JusStrX3rLF<'qbC)VRn!_^Brs8F61eWG2m3d^??G"V1Hnb^A\VI#;Qbe=r2..olHuu(3]NW_=NrS.Roe6=mE.l2q/l44R2\N+
%J40jtYAPM@DSlRs&;GleTlb?BTa7aEU,J&i6U`Wa4@AgVaR/7164d#?KAERYo2'3=IrSH#gi7HG+U=34D<m5.a\-dCXs(_rC2Ek1
%i@M`<f8qb<V8\p>W#\Ikjr7&Xl1)0lFn!TGeR<:X;Et$&2lphr(2poqD:[,.jGGj2KRRrGOg"98`o_c14TB<\Kb%f*@X[CY+)W+R
%8),h>[P"^+Ub[:@jh)Uh"QMKk#]-*mjlPGPs+NSQL7/We2pW&=,_pR9$lf'=B(Op8WC&&A<j,n_!T.geU#T5#OM,P4<>,/a`!cS=
%O[86Q2u2i,)SVtoo*h+R)P*BZKE_X_JhoC))hL2fYFZo7Y,$15$u)39#iIneDohS)>U%gqkfIl<%+4H(.XggU[*Xu!hqRRbiS\(>
%*LdRpNoOCta[3F&0,N4OMP&EFD)],$L83h9CC$[n?+j/pK(/((IDBq(X5cMZA^g!h_`/)I5C'j\V0VdTf]DBL::Or?[r^`5@q3*G
%jNr,%6e.Z)f0P)2B<MkJQ[0g2cM,dM,^7(WMAY\]7<&7kY0LCo[+s2K[.m6M7sd@!;R,OX1[mk]`K%jX_IP#61pN1h^*9%DQ:hf2
%Id)Oq]2LYlgp6qSE<#(eG'*l3?kb8,g2U$Ya4XP4r.V2dMYCKH=[=U>C]4ht4cW14ctD=4IgMV1e'XHX6$4:!P@J9=rsp&:d"8mI
%rBd\$oROOJIqYS-C-B1TclMP@P!?V)ioM1BNpbXh:Au>I8-:OB!%J]0d`qg0P,RV3l/W<h`XUuS]FFnEUA*oV<5@p5NO]cO06l/T
%Z2r+iL&O**YgrU[N"YQ(_.e;I'^O$BK2KX;o;B3ok8,`6I:relq<d;E%^]8\WPQh*K,(;pp<@k%:ul//i!_NcEqKDe8J5sLJ=J^O
%XubtTOQBdZBDHC+J<I=`mF;5jBcQEJ3IjqhYN6to1-jWhQ+MY[Z*k)<N[)\#C:ZEUf_r0MfQK@Oln%qf`s,23Q#q-Kd3cQ)2D,I^
%3hg9Cj>YsJ65S2JS-q_0L?2PZ3-9#bEV&Gq@e*:EJ/&f\,d0G"i]$0$6%TCdrN#ZOO>'K+k5>_l2I(^O*B3cMl08lkL?NO#+)I!A
%mn,8)*%T_^E4[&!_TI/ZL5(>"Gh@.c'XYE30jgJ9i8#CG_f:S_QjN9a-DbTc]g'?2eB?,6_rRX:BD2r5V2]*NK5(;m\URFS8'pkm
%rXH/e`mt#TMZSVbG0^VG-aXKM%aJkG)52po>sIE"3Q9aD@.-%&bK$P06,"UINe[TL9Bsdp)cg]qo%N$tCD27>6p59:2qQCGX6YOT
%b;Gnt^O]+:XLJ*)^.m3t*lJpJorbG>FLL2^nJc.O;9%;R_MOo&\2f#5>?f1nPoJ((lM1Y(eKnVD60@Iom.[48B=dr2puPVlk;M0X
%VauM#[c^!+5#"],-fJR3"F9?(muY9"d@/U'NYB429h#XHX7B1$\N5&PVemt4VbR\aET)Q\1cZZPZ9Q"#_N=`Yl!ZpD`RRBJ;HX^k
%_pQ@/0Ys.TH%Xg7pGmI;NZOp:1!?]eO3p%SCH3@^7-%h-Q+NP;r\C9iFnC4IF:i_r5u8:O/n"U))%gL@N#5pI=.L\@"\lEK@,H)R
%_`hC?m[(8XLEXkJl7W[Gi=50LLHC0\"M*@@T*Vc]$+;B4Mm<"2cK%WKZo62^+g0Sb3+r9\OurQ0?GK[Unmf]hK:-(A<sA9difs"h
%_`>I.E$8RlcV.-iXYIb8T7`1orab2BmVSF(:T@;9C0Z0L$A&Yl,_pjROA)biL&cS#=!%t8<'js[f.2jk__o,tmtT,hn`;keW$H[9
%I".4\!p\=RUSXh;SXXg]_3)bA6e&4!RtCqLoAGS&*H,P_SF3i^^-A"E\*`/9LcX44p$cYpL2^)_"<L0"/%`TP8u\@-5*>0rV;)5]
%&4brZgcW5p8e:M52MZ=%BO[">E]tY>fZVOUP7$^GX+)K&ib;_CF3Wk"L=8%$KSmV)3,\MA7ef^HKi9?j:*(HK*J<[8>j(mA\p0=i
%c7*++4FD08l:oJ9Dd*a8_`OW7/ZmpGd&L>V4IfBGN-od<J4n7I*-[#A;;"ls)]I#;hJQeoGd#R_WAbV(,":b]bmF9LVDAMFju`7B
%VR[1@Cc;k8F!iE/4hM)uW`i?q=oQThGhD?!h8/,%OVTS[*kkY1aq".SC$Eq4gBEOMQ1Ef%f.10ENq]$:*Nd'<D."++J:@%Y(nHM[
%?[Y&>_%b5,/p-Tj*UO?2n9!HcrYGKZ`??EalHB!H$!TcEGqd,X5B0ZS#D1EM#o;qgK%S&T*e>HmB5IDV/9_4<>-*0$al.JEm8&`M
%f;-@9!"#-08#$l$DBM?N4c$`1LmUW[KisaRMtM'-!b)S]XkC^`ckD!AYrrth:GaMDT8'gc^G[qc1`/'^LAHS0N<5Z0Nk.^k#)uJS
%X!="`KF#t?@aQSM4UdZ\9a)dPlMuT:CRd-QjRT+dN^I*?DfiT@43"(<*Wgf$>1@HMSQAQia*E,C9\9doc`_BgOfi%H"UPBI;fFm^
%%7[FTqac@.MTu2!VlIQjLr.m,-YUmKH600?,$_K4@RDrBePrM:-OMI;>!&<#4QB=k3<4M.BFrV7gdcm$8?N$$%l^6W-eH`=@-H[r
%B[2#=hU$IF&cC#n#fP\bpLrB&`6rbL_6C>XQl?gY;@UgN(aL>Q-?%1$0O'T$mPkj]IX<q+OH4JbZh=sY.r73=4RR(`AJ=,XqKW?\
%Nlk?tp<fV$"b4-K(H(1BbJQnr,Ip&h/qe=f'-S_L+u_^uHD,>K"_&rLVHT*$=@0^cK#/oDZ/'LfBu/n.cAj(o5SL9eD/?TPDRi#;
%\;sW*FSKb#(`O8]EFSOpMAHiHB-)c`EU3\N5hbaEB$TXY=j+T%cLOKs'_d)]bFtQl3-Mh%Hm(X=W7Ip%GaK(=35Jc/0WF7_WpY0i
%0P9VQS.J@Bl?]2=\RfVM#^h/a"rt`b[V^m5>ge^+L=.j6+$gVH"W/&\O>tDgX3(V(mr6s[/^,=gd.I`F[)iLZ_Ue0hk1G4VAI%iN
%G]2`*86C9OQYM*f)=&3E[9Z%@m4!AC%7fI^Z1%F2>ac&gM/=YS&nHRaIf.VZO,6A,=knM^*aQ51`ph8IZg4"9?ZCX[8_7Cp@kcXO
%otm(9]#5?d1WnkI<Q!k_h-O'2eAlpR;[UY:b^C77<PoDe<CJ)H>d(_AJmS!*58NVt"Ail+!N&-6Q"+2GJ06\nhq@`cbp&/WD"Z_W
%]aO%W,9*e&Xp[9[C1OQpM&<<].knqb,6H2k\]%ClZV!a8fhGV!4.>lT4FK*=:[FYHIp2m"7SpJE@ap7%a#qVV%q]//XC"onO<V/_
%QY=5MoW2eP,L+q@Tle4R34RehfAVAJ^]0m"lBetcl\hrrorHttp#WYiI.K"p?Ys!`nFp;ic`d>g^OG]k?iB7ks8@joIeW]h+9)!f
%5($qRf^2Sqjd3aXlAO8\o-JnZX*;>Y_`(s$iAY-Amd!+:qlbG`mE^:P&)[<204)Emh;ssWhu2^3J,JGQo=t(8rW<6.p30ZO$pD>T
%YOs(66hm*mRKnn'q;8s`qHs6p>Q<s20E;%G^OIs.fAD)Rs8ILTs1;Y/LHV>l'MOF!^c_U[J,]:ghu;q;S-kn*/eKB`drPAH@=@gn
%[pT*m\,P\/MX%*fhlm(K+$:luBH9sU^R?DCLMso?rU_2Gq>/jL^Nf]As7jS%rp[lchu9EUaA;Z5n.V^%Iaf<45Og?jr9s>lMEbil
%rZqO2p.>9+?i8l@&-)VLs0[pS1I9T-DH/n`M*Y0"2^GabCe$7a2Jl%@&0"T;+0q6e'H*`OdDbs[5na]<b=)*G>12UYl463<O0!Og
%WbU/V%g+7V=&Jn'da5q?r@oeH(0.VRIL\5Pc.Rk(MJ]B(3rsna"DU$DbrIcRZrW&iEs'uoLUS`-?Gl:hW9d4`1]>63K6f[L_uEn<
%jlF2][RdZcb[FZC89?h5CN0-O_)jlUi]CnbW'b=Q)c&].rhi[aO,dqnje)()JP9&CW+V'>Xd=Oq&VK-X!Z7PiQqp5r7lt1sPFASu
%rK4ag@[hT-.juALY)da&oORA8%Z"l_JtTD(C\2LX(5<TOeM*5s1nW^5khT$'.C0`%+62a:=n`=E!_8A:272N(,W7eT;!r#LFhmJF
%`6n/9ju33!_2!bW1`GqTO3ue6!EuNe8*@^G)31KTFi8%e$!]B2c'fBIHtgW'O"o>R.,"["P3]kXfq@C2nC*c!`leoX\-Yg8f-*JH
%$;1%m1(u=9C5f-DOHkQkFQM`@KO%FQZ;*#de&Z&KmZTN74g&kqnW*V;$m>Mi(d'eQfbZ`mZ/%bf)I8o7[Pq:6*Yq/:p]<Gur;.8c
%g6,I:Ja,odK+L8t5':]5Xcm'CCX92\M61Mt_6])FKrI,)Q0(WAq!Fqq[]WGmFh(*RE4`&_6[[@^(_\>dM$r\9.8I5=]e9kt1OAu@
%-JSCC:]/WF1(>--S',f1mU^uk+_U\R5_X'`_-hga[<tgiL'$f;:697+5,1dUo$-X<j8,AV^;#u<63MccrEtgB.I$JganNp<qhS+'
%!BI_BIb6QR6Rgm'S`3'aIZP(Z^DFb=8t$j!rS]Y;?%Mcrbfd:fRPX;#Ef2*?qBs(mbd=Z$1l6"L\tN)"9La;0YT0*cROlGqg=fVT
%Fd<18Cl&Ke[Aud[nS"@o_'Z7MI4u0R3OmG(0$pjh?SBtFd4*1L*YnG&NEN]!Ntt-V:;D34[UW:kCeQ&^ji-]'j8,CnR_P$D!kO5@
%o)/ZOR\<4/Vk`D';=gD&\q"Y4.S$qrV)V),WYLfCNDn2m<&[-c(+\f_/uDp]gc./3ZsOfk3n5nKQHRg3Y^f9>f">\u\s6X$TfV`A
%GulJ!ej9QHLM1#c_/S:.C]TtC`Wnb#'LL@m*,f7sA$)pQM@65^@s4.4"QatTM!^YO6F!d1Pj'YH!27qcZt]%Q0q5PK,!;G3W)>cu
%>fJJ'i#'#YE(;Q^GuRd?(#ILkqh"g%q.:);1+Vnc_B\=[A.trTcG?!2/jMKAR+2AsO'<.Q8qc-4.!(3;EXA*:)TH#q*rTeldZ:+h
%O6O#O>0#i0>9Nga@'5\QR#aFZaMEY?mcGTr:*Zr^7Jl$*LXl;GA1\hWc50677cbB2&HQt[fBX]0bilp9_]T#=f0i<JUb4"ccRgO4
%-m?%E;2iZhR(Xj"1""M,S>Hk"///6-q6/YV:m\T5Xhl[neQBaE_+o`%%I]6J6.@1K[TbB[-rh`%+(H5S(+(S->6-'&3#7Ks2XUES
%g)co\OJr9b/UO"E[=Rc\EE<J'9PfhfnF<n32GfA2]qT=6BBAc%Mp%:/fWOghSRL>e5=9^7Ykhl906JlH!j",u"TqE:FRt#kO=2GM
%<gA;`DA-q*n2XB)3(8KQ@gF4/X%("2[1=t&E!+`Q8VopH=OQr\Nlt;W!%o$f5F=GiGlM_S<g/pO@=DUIP%1b!QV6nDek_Rr1bjK[
%N0fBA";'%orHUa>rm3rR`!57[=.bB[We8c'lsV,!pFN2dof@TSWOA-Ich>[p>Ire(>O</ETs2Xi'27E.iONA7&fX1X/69CfI&,nL
%U/4QPH(:u_$IrMf!fVCa-q-Wb?Vif7-n:[C\lQVCM;sGWV&1>fC/Du\:gC]&,'6(0Y^lAKoashDM@S")/;'MuEs%edk@>.7En+Se
%"S7C!n?C1'Hc&d\Y2U+!i3PkZ>qEI!][$=sEiL>K0rrF_U8"`&U*57cI[<):h.?mrKrh^+fnY@9cm0'rc377eqsV&oIr0t*Xe.er
%52g"K7R=9R_`UgfCpY*E;5ug*Ud)^@%;]^>IX(?<U>E=!.cb&.F:>BiZb]7:M?1k+F`k-diIJ$be&KffX]T$hU+Y(.)RL)a'aDH%
%7JB#k=$4tLWTi*OH,TR4_;)+/5$cJ5_K!QCS,\kp+a=8i1+et.\R#]QgGF;e`MQA.7`3Tj%[Q:Q8bdc'-d6(M56"E=I)6pC2/B\!
%2Fl9g3b\(F2ek,A'H`F>U:(H4`mKM"M<G8<#*bFmIX]'.Vdnkm,4(`=&'WpROBiA7"Got-p?@\7FNAj:6fr)k:Rh\b<N"M9-j2KT
%TfjK>^B<.jnmS*p2:#DN(@A>&/NGWq&pE>gQ]m>6!*uedrOk!KI\(6'2UVkSO*a;_Z8VJI7=,V0RR1B;"q*kc*Y%rB6_?SdG5n)Z
%-_>81R*?s1TW[R4*LsZEX!X'Qa/G%3CX=/uZWG:e'3J29#48@tNrPd"$++hA5=?Q1[9,4Q`Z*M4Bagj]I5Urpa)#>U]LXn[3hmUa
%`c$Rm54BO@_J3_\9><7miJV.`1KdM"BEqXPG'O$m?67D/a#j9m'E"YGe<5#=B\>dXnNK:$Z:pslmtfeJ'Or"`UdE7>mMN60Y2UHn
%*H%RM()X.do>8n!J^cT.F+1eo;bGW$NE=3P'N%&,!e>J&WtT#t<"$OlRpR:KlgbbC'-S<b77.7gcfes_PFN0Hi(oS7c95a-8j<im
%$Gf8[$_[)%$iWEf`^0`$&<9^/%Vi!Z6,5An/-V'T;_V;rR&Bl0#M8rcnGTc5'p&Kq5<Q(K*Jj]O8,p]lqj;@,kd-T?X[3B;K=KTG
%;umG\LZ!-%:j:GW*C"+=Ci5+jCJY%BoP!6&#f1:R(V>>T('/":THT")Oc@PsjA<!/YgTWbG;*Ufc+&G/Z0-pPdWbgcOjNP4K9r=k
%"Dl35r`VKe[2KHF8@=%kd'+i>)/5r<o'"1[DCg>aZg;+`L+nIT.liD-\SW0:(XJt4q'Dg'5d:_23aleL!A/L_Y6s0jrTRS_lNebp
%q)+*Q*(]:0`W#ht_OjSg:T)@i#UJ=N0Xi*p7qoDC6<GY;5-#5S2cEtmGV"4`>)g-VpWh*tdjGVW<.*>jPN,k1a'DScO%O^TP<Hdt
%Fmhi!F:%X2]%j)NXiUfXI6.H44Bl_F@2G0BI*eWD<t-6F\3X$P1U^H8kQ-;*e/IAphn)TWO"/7GQcQbP6$+1Yi.-K8ogOkoRnIB`
%,6nqrqUTq.TH.6C5p&.gkeJ7>s"mZ-L4k0HY1-]Jh8obu"Eu<tO*C/JQ;_'F;ucS^J*TCQJ`]>b0>g`r;8[%A=ALt8G7*!i<+B9A
%l28]RWp7T^J3_[>LEA:Rh?be!9;M+*1gi#B5]4I^`PVMQk+Qoor,\_7e,d"jhRrO3G.!Ok1R=17]<71NgnYn.$qe/D7.[W8[,Euk
%Xtg=Vi6gG$VuUsjb2u'\'?YiT:`<.@$A0MZN%G,`--sBO`J`lD7Um?K6_jK4"cXWe\Fq;6m]Rm8OHCAJ2=M,3l6t45T-su;N4P&g
%.KFVEOu-]()Zp*J>%Oe4P3eaX2M^:_Sn\Ij)N;e#MX>'JY;Q4gG.Y5>#'iiZP>%)h'M.Qnms4,r!gh%D^d4_keN8=/f(O8XG\1l:
%4:dfM/=MWZ%ClW'5(N((%>us:eAslYD6es,SY:fD&,pPn"X"qeg)WuSAnCV%_5t#S3ja&(H[RPEotj<%B3%S,T:nPd<gsOY(ft['
%E:$HAb$RT5+@E@Rg?_$Xrf":]T-sr:%[I&.OTM$UQ>_E1;2oS22KQj,=H@'I"'FQ`C%aZpK_ta^dJI\qSgn.([,SiY_q5/QC:\Y7
%RYpmq=U-ui72nR&Ri`V>ma&a;K"(YcW,F%[5Y[]3Cr-g.`"./l:;8%nh!(-J4D1_p;V5hjgDbK%Imd/c&cRl)4`OgZMo]2i.NiOV
%QtFX&ecR$sKArd^omejD?pee^i/7n1r.g!J!49>([%,NY=_`b;q[,T-6*qi3PjT$%@mfDa&,t.t"IQ@>]o@:C8Y]dd;R19[4-f8'
%l>fEGGp);nVDW#%Ot5pm!cb1;KBDHDKe.":Bbbf(V[cS5&)oCREA,]=pHM`U+*N(YHLkl^&;\@p>pl@H3iM!D;;@UU@s*O0X?f*3
%>odh-AQ4[PHL?h0,Ikc%k1A5f1r6FgV4pTIP1"_W]W)>;GeCi&V1D#E7h-W0d6VMuFrm6[U$*'D%R4'DjsZ0d;,%.5pTK(I"eh(s
%%r!Gs86,iFBkF7IAq`Wg;]SsYROI`pN*R[pj.as+"nm(;&aY<q>gX`Sk[=um*^mpK9nQi*V'$rqqp>62!Z>7-0@d]THnPp\IF&3;
%Q\C*fg7h<7j,>A&-E#!e/^5r:4h7d7ZQ\kWn5#sH'QJ8h`jK#M^3n4nB*9/s!s\I.'l+XRE-)NZd00KKn$iWA*rWSnld&JYccC#/
%n&a"rfj'ef;9en?a@ErlML$90`ec<<r.(M^IYr]rR)?73FV$=n\=+1O.BX-qnE)Sq'g4UrEIlou_Y[FpduXQ>cnCkr.gAW:4(?1p
%*I.X"&33N>"8ua-b,$@:5AIL[E?5S>EL+i^*35m7lY;qtec%q;J'r)Ef^Xs%W!9WgZY:jY/Ojh^p\D5V]'*&HWjds[Cp=QqK/BqJ
%1kT[ZQ%qmUY`*LL<_s+1:`eV?\b]rA9I(:W(Wq#A@D3GGY(QsiW86As?$rjmHYW6`-Zi8kQF-c$T5a;ASAX;4XpmVBAdK9m!n$9r
%p0WA>oN>d]*,S\H2W4M6#A[&9N@,QKT@WP=f.kRW<kP>2mE*qaT^YdCd*_@'VDPW*c!/$S"W9Fp>%QgYp^=P(q.ERL>P+&X9ZMP,
%dMOuPU'"#W?k"6A5<!9tHF^)11,j!UnmE1]\d]g27Kk]QNIhtBXXqjJV-:6^rRb(d/4/U?$LonJAQEa&e>O"=eSHGF&K<15=?M#]
%Y8"(VD!qZef3mueTFGO[1CqKuYn"7)IuLc=Ku*1aI&PUr+[T.8<$`rfK8;BsNY(F]g5cKB.I-^iT.O0/Jd0&aY(pmFD7/_De]pJu
%g0)mhGqKl^M=AYqe6!hFMtL2.&1o_^i`s9UEAXh5C)QQ.!]0UESX,oR3iJ_XL>f]]<H"nR'@GVMVso).?M(/#ReV;#E^Qo$KddA:
%#=(B@9b%?"6+_ao%7`]2SMo'R_VQ@k-Qs6eW-<6Rh.NA6\#*GJ52>A5h4hZrl13kZ;!/Ap_)tK";dDfeC9i&=m>KF'M.A23YGp.T
%!\aa_&d`icAq\nClVMlPF(sg7o8Zo([22od&>@=V4'9Zp<^CA9)$u#ZeUCVXARS49-f1>5P!k#i()6&:IUJ#GThs8\]!in'9H4i9
%s*U@L-B5]6["RQZfru&gC[Y;$8'UFiF%6+DKFoZ:`AaCn$HO:4m;q1JVmlDmq<^>]L5(_kWj0EL)A%EXOc!>lZ&!c_40UXk7eEW(
%]K86l\mq=:,A]hK%,Lk1KKH3Uq8/FsAJ,P%C,H1%cL[@*'g)`28iM-r%CpFnTgHC4^DAJ0iL:65^0'jlVT'i9q<%^f",X%-'QPao
%ao!;ABCO0r;E:6pn0olYVp3J</1N/8GFts'a'kD=N.N'&*;ccS?"X(ACXd9i(7@`Si*Adk'W1U0,>Z"if$**,\:r'BT3eS7miT=3
%pWp-SV\&o\M+YCq.Z:m&,.b[XEJXC6HWP9lLb@epj8XDV!igF!HJL:NBKJHj6E^bO>fL16=5f$"!(/FpPXdOnYNMg_8.V)5WY:3J
%iRjLFe!l`HD1E'u'i<!.J&f@^5L$"$Z]n$n_g@ie)9^ne8Y&h.[K?Vf"]a$hhj#H&JJWR0Uh=*>b`,oAg`8n+,g`jR?gd\p\<#^K
%>Lo]pM+1<!?@u^0Yd\P]#0$)*=f_!9.Q3@PcT0U(<316KIYDd"MIilC3c7eLFGV=bE'GU'CY7>i.[C[,1m6?#'gqTI@SP1XW)uGg
%[`)0EN.&ujrG>2e?)`&"W#1dWX[i9&>urM7`H,"[;X"&?i<4Xh"9"@Ebt$b),BW:Hf\X2&&j.HT=?/Uor):05Val>cG7F1EFK9Nb
%]PYoT&*d@"U8f[o5@Dr:9-4c/:qQ0Dh4gr9qi:achY[k.M<^,\!c2nS_PQPC%QI[l]KB<)mCrPQ>IY`nqSqO<K6Jh!%i3%7Nab$"
%c1%JF@5",I9(.`K03JM5VPcP#59VqLn4.s:g[I<%F"u9`m\<`<_g*%YMcdBMGffh5?G\jT?K9G?$0`ZW-DmB%+?3628O,i&p4WW8
%W92?Q3'@DB;rIN@M(DY3@D84G?uRK::Ars32:,5E1hWqg'+R+;E!6]6(1BP&-o`%mA0pGIRB7?(K<W!;eO`4HAfV&H;XDQCPA;#l
%[',&MGk*$(7Fr:HL.!`?P)gFdL?pK9f[nu8S:b+7/JGBE'D*N]KC&:/BTf"SWaY*O+'fML`f8*//$PDod%F21C<mSo"\rWtfqfL)
%?$"SihTsXX=-tU=ZGF!ra,D@VD4,8RD?"^h)&i)n!@.0##t2WMlQ$'obF<[^9o@pnCEio'h)ec@Y35"l?)kYn9E@M2dhZ%k08-@R
%&]$`gEfc_X;Y<[%=W8\KL_S[L29coFeiEm_DSamj&8T]^4#ao:SE4Cu8@7W'6#57-fg.4Z>W)#P*?!n+mU3/A_,=a<#<s7U].,`#
%)$PWDg-5Z:/#RV"p6_:s+nY"#fQ<n.8[$l.T=@FFYZFpLX4Cj.$e#B&`U=k&Vo:^j`mr?a-gM3\)"2ZkDL1'U`YpP?/m][pkXqso
%Gf'jkj1?d-c7)@^c?ZffR3-`5]GC2j_9!eq!^$:@5+(DD^ILgFKR1!\Z-4qk$'O$=RHeT`f>\"ZT<P50\-sB?9(^`eX"rc:VeP;b
%?2C".n1:S`XXWJ3U[sI;65.5d`n(ksd/A$EAfnkMX]jij@aP^L(0`9&6qVViY+ZbRD(UD%nGp7")l,cH<,Z,9El$-ceqd2O&:>dg
%;!`gfUdT,"mEN<Eb:N.b44mPToYE(Cq*dae:_%V.@2'M.hirY=6$7<W&^-pNYLP]2,%\oF.SqA@^X>HV!MM9?pK3\m[?\Cu6l.s#
%"DV9QcYJ)*$Q3".[(kmFD:QI+9462LF\@KGBd++%6S$!n+K3b7[CApKh=40r-GWgEH3uRo`YDt20-)gih)&S\a-;p"DM3*'C3Wg&
%6f=C.UW>cgiF&@0n=rR(p3T1Qdaf+i.njq?ZKP;D%d&F5l2d6G9nj8KWcZko)C!tQJ-:@WF><-G_9K=f0/u)5#Q^m%M;=Z\f#C5K
%%:.L#W7i5IV3WhES5uu@1uF"0`C1TZdHo!fnsq\IW!X\MBW:bO'_ZI(i"+"WhVQh6@<:*2.GHC(W8"$f)cZZE.M$!^eta4W?MHFl
%:Odrfl^)r!iE?[\UX>/MoEI?/R_ceX[$dq-Zr=L2+K*uEQ5f=U.pp+tVq/G.T]N_bY'%[XK53s.2#N9"40YQ*+>M"Q;aY_!N<iq/
%M*e@"B*Sh(-_>NsIJ>4j003pq[5g@/>jSD&gnjgD4N?/'U4RGo_k4L7LtS`Z*cEZ3"D1sLY@ae0Hlel,AJ!V`5,"P4[?"qqfe8Mq
%BsjZH1;Z&h(Ps`fCfRjFQj8ib*i8:>X%kd]niUr.<*L*,+K=jm!n6/f_3E`e8)74P4,UUST'$L4X98P5DQaX)9Sj/<kDe!0&@EOP
%RTteT%u7JL24k*E)tp6uE(9F!^^De(\Pu4qZ;tb.O0(pM5.'XHo7gkY6:Eh[p]R1F)64E(6Id-a*Aq=A+:/[AVYSn`Er+EWm3lL"
%!a_Hfb91t54?5/>C%,jJ-#0L_TBF&;WJtYo!Yd]Q\3a2:(#UqBmE;3MTiu=9HIk(0+J)cD$=447+(PYZd0!K@\'RkD&-J./9I;bP
%/f#gMJ0=>rG]_4I\clc+(;=Ha\K@ao&=hWqp1K[K@dMuTIgd*Ea;T+tCDCn<;'R\rr=oFfc0`n05Pmm8\Q;60f!>"EYGc*aBPi;\
%?lNlm97gSsAf2Z+1i/+<onF&8/[66ScPk9MKFF0#L/D)\Cg/J>9XO^U.T<S^$A9:K@n?u?-0'+X^Ato1?8iDInid=il<Xo0,!Igr
%-AbT?PL#=-)Zi!iL?K-f>s=/R?$8H>G\_F2=B%6eGTT$R+`4)>N<&7@nR-g<r<DlK&'*&$&Qb98Wb#B)`PP4!n!hf)nB'n;Kg$Bk
%lO%A7$dbj%N!5TVBH(@E<a3d0C**k]27l:tR&Nn31@W(R$t)nG&q[3,NYuGc0smU4-8sc(?u_>G($tV9!E<tZ*_[M>RR#kBYepVC
%5-mZ]5oFIVbZm&u,Es_SM!'JHiItVh^eS+$@-+BaBU5:i,%4@5f+HDc[+_+?$X+m%1j^iggJ]mG>8g[ucV@XN)'lm4R.U<ui#'LF
%+SB'UoK,OS,Ef=?\eFjUD+3/m2,3ZaRV,.cSPqD^XK&Z.a(RBg.:HTTTnO1tKn+e3U5s2\9%[)VHG/J6*!%-EY)jJf,<37F3MF3?
%h%@q/QSmouU:Q^S2%TbVdQ##VoNT(+o<[=b6B8ti]\pSPdPJ^'e,q?ZD.1UAiPSMb!I?HMb\9?[2>N:8m59D,N#N)?6*lP.72QKU
%ejtE.o4iNt@R8rK,(oV$+I$uF^h'i3Ere5FVH^i<miMFFrZ5WgZE8F.AZ,eVJuC.mKE3H`1iNJP2&fYuMtJGEN5_ZmJsuLMq"2P2
%iM03h3MFa'/[3-WH8N`>cFZ1^rB42Z!P%2%@5R-\"RbVNnWLDm54L7?\hIN.P_mtmJY"YY)-O4@.3`3?o#L^kWq&\=3#6[CLbq+3
%:fX8A\eUYCI/B&s*S-Q1DAsuS8N!r-qn^!ILPWee5.3e1QsQ&%!m4W36iAYUeYC6nnTDb^]pDgI!mqJ?pl2NsfTb)A>M+%1,02AJ
%O666%0g/V]aqKN:TPL^U:D&SDF:JBe]KGaC&%sHQ-gI-3%-k@,`3_6?=&B9k%'7qP?V/aX?'E?Aok7dLW`7$8U1Xn`C+tm-`]oUH
%U?:aVf/=V<::nW!&!dh'.-MYag<(9K^"7#!BMf6MHR&;V$OZlE;TAqO/N..pZ$C,WKV-1?A<H/@f9q:,H3\/81u99Jo5igMT9h<c
%ARscH3knTq<#VG@/)cJ(WEU0p]VedM&*u5D:peI^N9nL&c[te;0eD8kpCM`f%FCAhQpZgVX"-!b^m7uVNTY821p_m`*cY#FVrAPn
%e>PGdB>ii6#]6TZ%7/JYXd#Lc#UlUR\7Y'8>RF5/?ai"Z296"lS2md3kdTiX.qlD7Lnn2o).7+RjhW3,rG,0$^hXu'=m52aH:SDi
%YL%!Tm@/('(]nq#Co^<-[:(Q,+E2"J*GBQ]RUWF8;O["(+G9;$mVWe8,[P^<E(<aL?[u=e+I#kA#:YPk+lg+q0^Jnl?9&),>$D;4
%pmj/;WjXe#l.&1]g4uW#_SQ^`?400OR(.79^JNM`BgJMJPlcM(dg'K-'C;6^#F#)ZNb;>@-#Y@Oi!Fe8J@VVMZ_d^=K*>E=i-jp[
%7U$+C=PhIi,sATVNc,,V;Jl0q);Cb^(hl^*)Bg!K<fV6M2N.eeCo@^e+TPo-bu;dO>5P/8b!Hgb#3.&6(0dj)iij@G>pb/5CVWFA
%"Nh8BL`[PHd3597?LolDnE`2T'eX*.5jAm=0sl[g(p3-0F8UddoZ4&SmZHA:Sr?%cfeH'<"<GE*^bDSVLggE_q+;b]MuPc`Y%>E)
%;Vu_].!5=6mauUTk(t[8^kmK$=4/l@:0tgEO;GtV>_)E5oRp>KmK??Jb!PViUFra)(Sst2+'GR:3;gBQ87H!:,''@mmpnEh(*>=f
%9B+oHV`Y'!`>W42I6TGU#$-:$i;lt_,7g[IkoiW/?BU(iF7^e3df^-!o"\)fp)$PW]R+T[C'5BU=0*DjHO:Mr\QeJ@q%*#/([##.
%Pmp1PkV:2.j9Oj6SN$X\]WC0qj?E["hAkS\oqb+7\orbE*>s*I2*Aq;GYLed7t*\uF3GqC%+A(*B4XtE@n(dDH&+On9,.Q43W%l;
%dFp)*4"daVQZt4/:OeR:p$our1ma:---PR!:6@d`HW<T!1F8L/@:]KhWgSR4Lk?cZ87E@'T0@m/d.;_6mK[HGO#kgq15%2HLs".'
%)]-qJ>(_P:.4^'>Wca06lUeeBDTrT!i1af@*#hgY!)r=bj-EiL2o2XK#Pl:^*_/YFamM-$#fleBi@)`)S6WO\3kW$HH7P%gq!!?@
%A6q*7*OTPW#7ITY@pAP%*V'1O!bRWoa4Z02@'jHI2np+EBL2B__:n1ZGap)T9MO!ZBq.`T'[LM/b36frFP=leWCUAaNC'TS2H25V
%BjnH86#.BZnaN"pD_\]9jq&E;4n4<KFF!pF1!X:\TT9SM\H7h',9`]^AcOq34D9!".:TQ^F>6(:#;c;MLa;7uRYPVK1g)@Rao3KA
%,=_%9)q5!;AMm4Fg8kKY66OC>NHQ1W+-m-CjKIs'6.a"lC!ZlIK#dE1OWPPi3>'qR0eKVMU,!rZSe%=1J5(3%Sil$RZW.&-%lO7R
%.O?,:P!O#ITm]!6NXHb#-XC>D)0r(Bna2"&[uX[Z(Ed$U$GZ`JArX3[O,^goc19<cP1A<1;X"/dbm009(X7FS4V=HE`UV>hblZWm
%0]"^;4&hpo@-5MPJ@cEPfbpX@QC:Xt\>l7^4A]k.$f%@bZe.>e+JJO!?Qd[s\W4>i1NQnJgO.1(Z=iAjirNP=9)%i6+YNT-*sYd^
%"#r5tUgWVcg-Z)NZg*odk?4_r6*f:sR&@4TAX5qmT@felMIM5*4!2];ZX9LNp!PrtgQSV'+^CU=2?u)!C"@P,(LN3j-BVQ_VQofs
%)K5[dijk)"qg/$D9Pbb/S6N/KA9BT7Fh4%i#eMP;cf=Y=McU!*!@:XY,'m"C4`9ntE@&tN4%',AZ3Z+o+'N&t28S/I+YnD+7KupF
%QB$r9%2c(@ki(p[eo4",,t9pElf0AF[A9E;HcnR@iMXFYUg:WBWuuij_.)fRno@H+kc;P%)ljtKJuV[j'/PI.I`FfMW*n3d/BJ$D
%E4942MPsdc4Z/6E4UD(Ihb-@1mC#:BMu]_P4<Kl)[[C_D>t^d*k3o`8n2d;]NSu-l%Q77#AT(ml8'E>M$s,*@XHMF:i!DE%$E46[
%Y@X]&IYl,qN3L*T=8-*WTD]7^-LR<lQEIO)g;URiX>@0qP2*j5?ifMS$'$Vu5Qmi/'uBHP[mGU2_lEd6]2O7K7.fh2L'uC\=2Rtb
%Jl6-t"ukiRE`$(Le],]:8m'4Mr'9$3@$O.)rCYZ)nuKW:aaRcOq"EA>=Vo?$1)V$%=]clGBVcW&MbRD97[Tk"SNI6WW]f0'aq5^T
%3]h(7$.p@XlbN]gq&R>Nn&<Hn>B2$'DuhL)2NP"WU&uNnFA&)Lm9rI8M18`t;O]@%Z56HZO\F[NV)=Q/U[!RdC%fZqh/ORT*@\!0
%m!&UQO"/mXhF.D(B\s,j1"#Qh"gp8"@8&Wk=iF1dEbBosGdU/lB&IC*1K:TCC<bg:k:r!MSa@54LGakuQo%$$@'43PA5taZe>KXo
%&G\-NR,nG4=s0K84<-i+L.=TKO;OQGlC$B2^he,SY0K,h)5F9,&j:H:A@5l('Cb4LLMYmQ(!h>Or^<M5I=]7pFb2?LlrR;k_(1RU
%+'Vjuj(eFe3@uS2/'iJ?D52mp#uFs=!N4;"N#QMd[V?q"XB8:VX1=,m#5B1klt_-Z)=d)TbtihQLq=(n`3\!\lO5'3%kr^ch+:!P
%@^MJVb`iGDJ>8<urEc8aC4TYe(\Kr%dtKgQklN<Rh*bceI;T/HZ:1Oa4dQ>06<T8**Ak(i4N"*c#h&!n4,GANap0dglS=Ag3=9)b
%/kA!;;*Y+c,=]i7-kGgROA,0%b^)0Ek>Sb?(<A<(d3QKC5^\4\R>tMp3p7i+('YG-$;:-?%,s3[V2drXXk5[O:+?^@oO=6WjS>V2
%0+:fcS*ilX]<Sl`h;1l&5ufdd9c(f7X_g>ggN(&"McD,=,#2p!FU0QC=R=i%?l;a0%X"=O5@8]@=ER'mnCH5J*]j1[MmWTD*9H1-
%6>"f<f4/Mc'$h@l?=5YW3lu:h'L,]1k2h#4"Vj\97u_J9`aiXL<oMTuCb\\H6YVE5Kkus(b55;H-(Ac6:th>mQc'nmU;9IhX*R)0
%V*M;Sp4rp1()X)SIb^r#&Q1-nqm$REdV#Ldp&frpgu.rM^QbPjPl*O>'k>c)V*FOEF7tb:8?g_e&W%#nQU'[ZqrE_N8J4<c3A-C%
%a%+VVoDgMLKN=P]_D#U-q]I^]Z+(#I1hXk:gn(1hS3p14E!\mZ7>[TeO$N)lF)>]-T"O>0aI$qRW$3Jt=VRN+FK\Fi*%(f^A,)\*
%UH"cm<j^Vh'bVoCn6?&*,\.JY69DR&9h#KW?BBr=kG;/nI(SV((bIgX$d;a,kWi[F^+MhA\ePf7jJ\'bI%B>ra)FmX)njlHO6kjH
%W9Vib0,AL!Z6.)TXj!V/QS2JAg/?-cr=%CIkYNf\+2kCb'5i`l*DmK14SYu9^7A,.+rNVq2a3$pd-*nt['u=;b/r>h)%sBodo*_:
%K,bTPdF[ks,29Gl8'D3p\lXO@RasjL)R:K^epW_"=d3IC-A*30j^U\3k\-bH5+:N0LN2WP/u+LL-,1NQeD-2j9B"'@kmsQ6<`Cap
%Ni>L"_5^@#A$`g7N@Pk\>m-.2%!kG)f"+p5jeAk9F:P]@;Zl:DTMf\?'Q)AodWl"9#'n'5>C:7,`<O-X<(8SU>7=7R=?b8bgR1Q3
%Ebf\uK":AuaH3n;?B,VY=D1k5G-p-EbjB!X8NW;b]gpQLoJeHQCSR47FO^5;Y[DN0_g""/Fk@UC]X`C[Vf[id.ta!e,Y\_U[Sf@e
%8esKA0aNkX[^qs9&.(&e,,FQ158qPigB-V,,:6U=L;jCK'+,o_Ab81A0KY%0r(f,EOdYK,KnT[Af40JBUsPi0B2&MSM,clM]m/K?
%A%k-=$0&o/6$k@7VQCktA1^!6jeol7i&P6\*0fI,PD$eDNEi1EH?A9Uj3>[Z5gm_9R:'r6N=n*,9/(M7$C/Ti5hWp:Z6I%aSTl?S
%!Z<O'QXVAVpeS:J"u+NR?tsI:+'Xo[SFV-gZkJ5r(nhf".FtL#*6):pgb'GE@l>VN8=#W5SuZU[Yh0(U?QZO!c%.\?9<]AA)W8\+
%C;*I6dmLZT.H9JFRNF*9S@V0D".,Q+.2oU]?8U1g$J1pnX-d/sQP!DQ;HHae()$dMs)j/Cbq70Bg_%Xn:LjnMp1lLu/l6,:&5nK<
%OVO@l7mJQRb#@.OH9r77r6u]6)jJt\rZ!ERJ.%/r)toQL=8Y)Q<JM3Xb5ft$o7.Zf^O1hQ]Qte]&h!*'r9SVEZ^6f[e,W"`#E+\5
%"po>bh2*A83/csKFJaVciP1Z!De=UK,QUa_Yt,^o,TPD`*\/EFUTo.MX(FOZ!p:14W6pS17]'b$k)-1uII!A(S`5BPpfo$EWGFaF
%VR!Y5LMT]Ta08qPhjee<k3N7POMJ!9b;"<G@;YP13J*6Zr5F;U*Xb8S1EOg37u58kR[Beli4KXKj&YfY1p?np@p@n5U7ro.&<mo0
%*J$_-Ut!pEO'"N'J.0h'pYc_^C3[nCdo\&="t0j^4_'bU<=:MSQ,Y<,(qRTmaEYVNNB0C@6uuJ<0mu.8V[t3K#"!kfMM3WnNAi)6
%j>A50\\\?(oW1_<dX<#PJ^:GO:h*rFk4m'%&Vmo^O@$!\3-->jQQT^CUj,^t=qV_oT6S_'/V%92$kS,m,PFBB/3+;pC)2-1aG(#4
%UTu1U2`(dZBHiNXD,R:X0F3BD;HQoEi\c?)S)RIH4kpS@i&(QK3X/etq(Dta4A_ZQl3VjdBN8%d.[-hr;T),0M/V.3-eTcf61h-j
%@:U??R+A0jF4oDZ'a>d-q8"7^aTFCShr7L-hjSQ+iG^X^I^Q,k53P5#`56%oKK,uaLP(q,<F:Q[PjICHW(#)`0f"nlJ.m&0+YJj'
%<25bA7tu&*So3qOG^K6T=m?QSQl,K/9jN[Cl/D[rrZ%%e[)rFa=0SE[X@!1pH:=L5BCQN=:.>3nb)>7h<$S)7UpD$;o/b(@IZ]Gq
%Zk_<]-pDZ7mVJEo:u$H>,*3]#GT"K-I]"4K@&0L=!13pA5]Z5:cXDJsR>kcaba!K?U9-.q"[ie.CN]8Me):3.$V^g4@9B0+=$VV#
%dqtibFE+$tO3AgW[`0;A=9?S;F$<-2Q7>KB<G*!@2<K$ZE0bm.+Pl$#CTn-q@si*Hj6J-`lEraAk%DG##Y19Z<O%h!6m.?f9P>Ck
%]=+`B+@2d0aTBp:R79h.i>,D9CY:Y:@4s3HWq,BH>d<N6d2Gg9YoBJYlL2"/ajPiOLl'@V%,DV2MUiC!$IPn_1oHOcCiSP<W"URC
%4?AFo3JZTYm;2<c=XESq(=T:#)cfPM3JpS&)=2>%$RaE8!8&n';n:hfOR>0O:OeE-]b9sgW5N5C8'%Q3M,BsePA:c(m]QB(9%06"
%N5Vjt(cAd+h*^n(@APS.,1Ht`%C6@6kc>ouQjaaZ5eq23bU-H._NJZq81;b**\AW&=<jrXT6PksjaKh6TnmfuGo]'C6U^51;_YR.
%K=P+0>qZUQP1;c_f.O5r`i>^7PiPeD,%Agr!f'mogi\K=_UfX!;G7[L/*6OEV.mFo,L7ElYE??t`H,hg2:`cFa.^#OP)&D&([S%/
%Z5+e*KH:8S;)u9!J@N%-""9ir:`5P>^o?*LYHSk/#hu6?$`#@D,m90ckak).nB=h4[]R@DA:VGDaiOb<`Mb%T?R(Pd0D`fnZbYjB
%$E/d:^;j]OOoSL<iP@?8rIgtrlFUD!_bWfK%'j_U4d70[VrFM&.F+]U'u".HA"!FJ?bIKggR><`lu>DcK^e5,Y;JS>5og#U:?jT5
%@O`p*I;;B=fa3<BCq.fIb)BatDf@/\B8#342)Qg*<mYK4!4A4`L!+(A:4,)nc+g.,Nf'X(Hs>`re-g3Pfil-]Ng@,hmP75_8Ue7m
%.ZfN+G.-T%Q23%n'!ItOMtRE[Lo&e'f:B$_.TH@o9/j+n>bO!$@pQ'3DR/tF9*C%7ifYF2<;jlN1,!;@qGE&2"`l&a#D@8jGDf,2
%Yalh&YUgTWKV?"oGgk5/?$-59bY-))JM^!g1=R:fqTF\$%%%i6Z]R`GP?.u"_^;FY&CqK=`CJDToUI.$pZbLC'UO*Ge?ec5C03Mk
%9j>i0jZa8Cj1GL$mS@BT5I,9VEkfGe@??>Q!Y]/`lVU6;`94@g(gH=hVIRieSo"'KZ"dk_k,/T"+:kH!=dXliKs:&1]9t'99ABgh
%.fr!C/kN7j.p<)^XO$1S.X2aU\<"ML?7-Z%X=m&7<.bJi0mS>?RKrH]oQ4T^UFF^s1#o%h<OJhS/\,&qh-`_lGSY^01"9mSIiC4(
%N5[pG<Db-FXt#m;nO>Q\E(4.C(X",`eZmLCC/IUS6_u!Sj7Oju-&`4>j`jC:)U*M9Um#),XJ#3Y3BigLdDD1,.`GP(E[.PsehXtR
%/NqhSE(+8nd>rZs*7_G:L8tn,,.f"]<.CP!V[$-tN@(6^W<e)k$k?DX;qeS#6Kc<W/#\'%_U]6n_"R&I>!l'fMYdn0,dlQ^#)GcQ
%IZ>:cB-Ccu#0/NhA0Nd396)]qMcNHU">!XXUTS")-'oc2f6l$TcjM?.%rFI`aK1<jYm(3[7;]jh98-'0TFP/gOfPP1.I%IY$C5g'
%037p9#X%8-i"1dR4IG0,LJiQpA*/:s',lPi&:W$^d/6L*p/r99'*C?2]&WiSpG`+INrmf8PjXC(Pb!_b4@6&Sf9KBJ1l?&=n/9S\
%)p,on(9!MGJI83t5k3!1P&r;0*h^[sS^1N!ofV3M\nFukX8g[ki?>@$P1OEib,?JceV^9iUcK0Es,Y^#L^J'6k])ObZ<HbF,X4AV
%MI`CAcmj>q)bV42F\.c(8J;c@p.1lV:G,Y4"p:g_AL*dF)%8;:9ok47MYgkG&(CB4Ct;u[lf?K;.!1(f0dqqD=CiKaZI*sZ@Y^?<
%$^hnd(.3R8g[d[rBI5XWH>(5[fe0QI<geqF,tHRm)duj!*Ft]$=fpYO*T1YTCB#2$#W?p/a+OKU#8?uNG'\4h:1fp09-HB&<c/(J
%;DVSqZGqe=j<XHj"*_Y'3S;O-g5jaCigHPk-HJ<Jk`tOTk0g1LYEiqB5<(Y7!^X1=KnYZc!/<u,NYN@U@UR22]9FJho`1U1*>J6A
%g,QUeg""&ph?JQk/UI8pPdm/1c]-YB=X>#DN!`"B^1=&C<[WTLlbZaUq-[O$DMfW"&=b@*0FL(3ZQWAo$bgReZ!Uoe+$[HlI>)(M
%Iai]md^pO"4B(foL6W+cD@9$>nsEFh)5uXQ=<9lldU!_\"aA+T<fIPgL.oTB8AekU`20_s8n0AWLG5]^o:RVn.e,3A=`o<GC9+=P
%U+@P&1=R,,"BI'o#cMp'5'pF"OGs&1"_smXK6_pW8W#-DAVjk!2eO8bBgo_bB6QEXMX+a8r:[E7cFFJcW<>hc_A,'l8<=;XV;8>C
%d=?C!d2A+DCVi^6b'Bb(WS+I[/ZRmQ?.?*m3p[ULU3=;c'R!,S4a[hi(DSdWY.KQ+<`NoU[J6MZ@AMMoNp$VhT%]m03k#/:-aI8O
%XlXB\qnT_l5FUN.^I.'\`o7[BX7Lls*42GAV:e!9NlZrSa-/7[@6#9B(*`BV9m99B>s]O)*i7]#BoP.T$,P0?:`jP;^S'SM#tOC2
%;I%@M<5fH$J&sFFD(/$cXP*$:-qdljilPre.?Uf#LWk>GF%E%SLaKZ9;NGIN52qMA4?72?9ik[20-g8IZ*'=POfX;0NM3WmH=(=\
%kr_G<Hl'2P<kTIn*?!BqUd2OBe7>M\S"^7s=_To`aKq9%8HEIYZ[r0WF=@_<@f'nP86gYgq@&u3=f"SYpJ@6Jihb>X3T,X4XrpX]
%]9h)>oWjKVN]N])r#R53M&!6^<()'iZ%6Ln%mo<=Q.-_:kuB0%3b0)1h2.<s_b5cD0>0=k1M["83nHi@YV7X&BUYPgItJHQE*D4>
%g(_.ul^:8&G5H*KfP/cbbT\cl!mnM&^e?35(n]@>#a&;*c-+L3+(2Ap<NQV!D;O&.e<SJ-'JG`W^d9[d,,HGC3._C9V&asNZ'j$l
%(eODZ7;A;(Ch#U6aWR[\Y3,'TV&ANb6"E`K3Orl1=K!7qPGV-8k6kdFf0Y)UK1UMQqlMKq3B27s!N>H!r=/G@UI;_LC`qEa*DX``
%"==>!IYuq+]NY862ff,X>O6gK`T!&G`CD$"gp;=jBMrCAagQb<Bm6S#l)n%edFI=3+a"+X6?^n2EKJ;o>#g+H?L_#bX$J@A:f#@1
%js@W96nPPR;VHqB\<7ZEZ>3fO0ek<`[Emc`$%@39VRtCsFY.R^."r7\$?M:OV<jm&_,;cN2hs_7'>S:u-fA(tP7b=6`RR(Kme.E9
%a4Rk7M6'NM9@<Rab&To"B8jJgWhDpoEB3u$=uo9O(KYs^_;q;TXqg<'P"uho.!aB<N5G&.+tHjD)M1kG^9lfuc/OsZG"k#L=,%K&
%;$$@Tas_t;P"/IKoX>*PDd&SFT#Q;rYH2?R_p8C'a#"W,H$89OU5!nLs)!Ws1(O#)==P<4bNEiZOPJ:qdZ-;K&^a1a-MnQ%T5H5W
%"2!)A"`lE_&P@?'>[rAVV@?,FjKT$P+bL;$1ajB[6:q/![B^r#k#hLmn=d1L)?-ouVc&QA70s5u`U(=FQBhZ,D<&Ji@s=R+Vha*H
%[E9n4&\RWl'MV7s4.*1O#:!G&mU9bY"bL7A`IAjuo,t;Z'\DkgmbT,6dOd@U+R8!Gd<P0-iIp`Z_98m)J\`Nro*]a$FnK4_\IC0S
%2F</<]&@8(9MA(>_ifT';XFAkM32psXhb'!fM=Wo*0<8uB1ph:o#@?e&!KP>gVfmD!__5_MkKVR*mF,;?_U@=hLb:mVS$g]AIQN+
%%D@'X4rN&V9(>LuN1`138/2U$aG9DCj^f!NhE(3B=m<=+bQn4jEq%!fQ-do:/pY\d\QW-)BtLbs;IYu!(OY[jU^L@LH"3@E>Ac`,
%5d<IRp[^1X1R0mo??43Fi4O(ul-XP-S*NX55ukRL);T]dR]L8G$RDe@d4@M1;ajc5%2H_CJg%'_,C&%&8kEXAX5Tm4-YPsbH4gqj
%BI##E6#.=%X=of_FaF.0Do)7C\[LPB9c>"(Y_a\ATpi.=+YZpp'DCR/12.Z0[KEW\lb3f'Um)Br\9'mW3VI@'n<C9b"56)I[g/]"
%U'2")Wp!c5)4?.n2FTC\_$_nnUN$V'TQm?Q_TN8Vc7BNQ0ZbE1rb\*l/oWS=@diu.-9"CgQ6UX*VRaV73jP$^2=3_%;Qf;I6V'u6
%"N]Hec2C+F4B.ZZah]Ln1?_oZ21DEN36W\pia<VghQZg>o8ci@Z73`Sm#;1I>jWO7P"Xq:m=kX<PrQmEc;r[F])AT>[1=*?.XSb.
%?/L%FUEp_-M:r:<MKU_a$B.AQ?Fs#(ZT$H#jc!W>d`CSNX$H97H=jul;F%i/<d*1Y6[+N]*)eI?G7lS&KWqno,7SMSas0rm[,'+E
%c;Dtik1C6IJh\/I+.*GjpS4rk-'u=''^"is(IgQB5=QN$gU!g*nD[CSqV^h]@_h3`2JgW8KfQ<e@_HpQ\d:"MEfM=W?0nP(FjpC]
%YRt7*pZ\rm"N'=FmGo<5FOOM+%!mh\Y_0C2]TP\EEMLrSoXFX;9i@ZOg5;-A,d_fK6H&Y^Oo&#JQ];867rOnUBK(OJAQiXFWtm0P
%P&Rp-=U7d2am9s`"7*QIA>u^[(7-L]NNTTd9GEZN0/9\d9uSlAj83/A">I:^!2rU:ZDa!HW!.$2J"PPp;],&01bZhDk`C]Z[(<VR
%Hca"uE$SSR#$c&rGXkJ0=CoAa"N2&?;(t.6o?%,K#E;3X*LqU3aNBq;D9(eYD^0V<&V>D"(io63)1m@P2B]Qr-)_LpE!Bf98l1^`
%U/f1d92I'C0GIb<W*'FCc@K#57nq>X03)G?oI=`!/9:gTU@A4T\pZE[+5or&eCM!K(\]3&m-):Hh.51q4YL/0Kfh:FZA!CL3F./p
%VnA<4'cPY5ML>f$a+H3UF1j0QSnaN"\^L^m0j36`n>.eOYdB>cd6ZjmJ?R9/J>$LLb]_+Y),&>!ZeZdu\@EXm%Ol!ATi@)2.'i*@
%@7_2f,NspJ-UDrua]o,;@.XMb\FPFgo(cGkQ%jS!e6#]?$A'1g?oMdS/7qsR&/#:l`$hX.&HgO[G)^L71g.Ga!jp31/NFeb985&B
%eDOb/8BM+J!Z&R$j3?FJ>qJRO3)U^?NBusZH(X,p8#,#k.`26-(*l"JOAUA]2"Yru28&F6D*VKG`2:pDCL%FS2HOG]7Uc[AREp"G
%9/s2E8o(G0[Ghj%<)OE6V9t6AKI47QTs]6tnKP1hEQ]eEdleDhk=p#?<;l5_0N6F'9T+I)os+%ENW"s;DWT-3_!srgbAY@^d,)L?
%M(>UkR%e5)$*#i2K.29G>6G=^\,jasfVMIBYQ?hdnp87%9<iJGP@cL4*Mogb9^n*GJmf:ILg>=&hLs<LSO8^j#Oc)T,+@J.ePMOg
%KKPi/dRY'O"++7eCrs4VRHtV.1Pcia=lZ2Y"X"ZD,\sEWE&2:BLMgh?C3$J/LpW(F`6U:d:'WYZ/0F*M_u8!><>$L#SJa_1!;p5f
%T:T#4Jn@%bdYfBTSQX>rSCQ\(4PG5HQp[b,,^B7qS_1)&orce;0H'ONUXpsjLXTEk[]'!7r(@PdCXf]T2CYSmGdp%Fa.,]j4kd30
%!XVnf;cNg1MpPluQ!tpRfulJ)%p*n.;0Znq"pHW%D'?l?NJ4e:EU=oA")1FVkUsfF2=A>@;@L35noN^K5Q1!,KU;3!gY_tshpe!"
%r8#P7s-_O/J,bZ2M(cXC2uN.eTct;h7%e5K[(>EZK>31l!Sah&*=.c1(CPk78"^Ml+DqJfb*s\Xj[9g0nr%^nbKt-8L:89OYH=9A
%fX3?,J?M8U!dd@N`jW+d`G1]`a8O0#i[`B&,l*b$B\>)o"5umgp]KFS-2^D_P\DiZERYo.I2b"Q7dkkO7P+WF'bi4A6VpH5D,E@d
%#3AZJ\`2ql>!^*;)nm&dHV\Ul&c(PI/3c;=#+9Yk(?J'6'l@nfBhR*1,](Q-5+N!-_]sLf1P_nhK)uQi]---$r;WfZRpT<]UPeN&
%r'/trQXa%WBB9aI7RF[!/D-`F@k^I"2B)01rd4Kc:.4c'h.>V$r?O2*)9)6mY0P1KN/T`9Ng#g#cG(rFoIfJjnh>m%MnWs7$B`4m
%=Vs*(n^l$mYVu3'^DF>5"^jDLhg6@U,dC`!fXmV)Fqp&1(t9ahX/#l1]sTK>EYe=$m,uGb*GP5sRA\(ZH5bg_mf%L#?[fCQHW>9]
%?$sDDZ2oX:]EXJaD7`G@XIr-2.HAY#fW9OVO^"WHC6[VW@GEVsH8_DUp)'-6:.;6H`,8t6mea`Pe!=Lf$_/5M%n8Jm+D.:$V_A4p
%:oC15\+ejnc9<-]"/g#-nEj80bkk\ApsGZM)^,qYF,/k&oFS`4_aEE-cLVa""(9+UVV;15//d>5k[jOA;PK#&LHVcLR_\_]'dPW%
%[`]7f=IKQ0"R821#>($=F,]U%5=^`o`gm=2Pn[HJb[S6\WtEW8,j0>j#2MQeV>>A<1hC^@'&u".<tZd;D2V04!p2j'=8*?&&:f&m
%-O8>24U7"!135AeKTY'o"MVU<?-Ml_0rVn'lHH"TW>NF"$C48,JTB6\-sB=PL:t,8EJRZBa($9N*R.8f\$#t%g<TtuBDW!$2'#bj
%KUIZT*A^IN/Z;RWo<03*2gFDZK*R"nk`f`Gj24WqeiLdaZ:ej'4JT#?c0+f'bAgVTh9+O2Zi(lQXVt,NC32[./J12qT6`640<\V'
%nZ4Q<QRpV.VRF`3W'8,-R=&pp3c."iVBJp4`2)0#`Ygt_Lc2M/(aq4#je89ikHHgRNhpcg*b"G_)#M[^dMd]^5C&F.6h/dfe0]?'
%EJr9"3l8T^D9IXQfE.(+lW7OH>9%$=fSLfdYij)MaTlPBPiqXJB^9^HDU#a>cZB"9:rLX]hu4&&6GCI.1<Nm>//^.Of?V^a[dqEO
%RCI&e!f_^BX0DpT1gSeaHXY6OS$FN4J7BK.?GR#N0Y1L^6@HD&"lhYUU1egnP+5#U!HJ6jlggOCO/%b,&$@WL#jtkhO7_@df=O`@
%P=X\'q`45'2iMRUU!Htc>S77?e!tZ1T&uB3Nt<tVlHItapKL.o-Q$+fHTeP:HU-AO/!rN;\llb%aSm/K8Gc1Q(hoRJlZqZ<[%@F*
%>/-4U1I!<'/a'H#M->gc1TXfAnJE-,<F#l((]ZU75D.mr(_>IOGYX%+h-4SMOT>k0K/\Qb"/4i>#hpHF?c'IM"-[G?V_F/CPQam@
%]j8nNbE#)T4tWPI\WRJWdq]eSL_@VJqBt[6LXEun$F[0PrRIEi.5L?9Cs;=_);?ub_rhlqd@MSl!!]Lsc(mYT!+T/!@\G&/:lfK*
%TN[VhHV<f>h%jC7mKn$)6l[K.SpB3F*^J6;^;W7=001!QNt*)re.-^YkIB9O11#-FSBrHdpcpci9_iss?iD*tHl0Ap\ob@f09^?b
%(2+s>+K2,^CD?3AAlm[d[#^#KD_^I_E<Ms:8bJ[a`X@-RgnOBEP-f(a7f$Q.LU!gFUA"NIl7/DGH#"DJH-^-[cE@-#):4H9Oa#,e
%0\HR'M%p,8KM,%8X7"1!fmXEH!.][\=M$\I[jN>=[&?)]nMb1+0F9SMM+^o>2lh5?.g\<*gt3jupdM;<m4DA8bNVP^.Bh\F]]ZV^
%A'>H6qeQ'hEmSSuYG`cDlYl=W$tG4/:Bb@RGs,3*aLN<lK=LE%fpBb@Y/\_mm\b.I!+2.U=mg9lgl@dDI63.g0'kT93EeK@<SdNS
%I=^k$<Os'ggZ9u9"0["R@NJoQQGKGC(Hm<lX>=?J`SX\4^?sd%<5*cBek9At"Li<`?B_Wf8]GCaNk;%MLofg6RQ(i:n;^Sa%$>)P
%[^ZEk_+<sJ+h>?+Dm@W3LEU1a\W3sI@d"BAj#q:#\T5D/+oq`>O4.5rg<Yo%QKRl3D3W)n$u#aqmjll9*5=W+^1V((HoqXhNt^tp
%aq;LaI3e8^)8?HgCYEE+-83MQSpWmO;=&'%(DO]/&oV(.c[gLnJYQ+mMB9V@CI3[4C'9E.21h353fbhUNo4J^dlQi&,1j?!Viiq\
%'0G-GK4Tp7AORTK/a#gEU2=HNqnepL+1!8[dB^e/&h@Xmp/p-PZi'Auj(>,NTAQK;g8e2<r5LYZZ"7KR'OW6Re`@(`0S`l,d*sHZ
%WKmHPNNg%>ZO?9UIZA7+4sKRVAecB)I=N/m6/*CtKp#=4QjLHE;PY?G54(K^#@5a6_qq:)ZZje*+sOL-;<RXR#9r!1<r-Jm8)6>n
%XpWPtKs3PG;6<^Yho-:ZK6h,g*e2O/!$Ehd;S27qasQ"E30]f$4sBeC.3,S]h+;HT;"\c\`KtJB:Z\`JojBu(XWEhckt'`s?aqYH
%D2\<$ZkQB+5\Xil<<GS.RWl0JP"/YW7ctI3d%V`nb[U8(\EtI6CmK6g/@0:/noeS/8$4R%GnAR_Ub1L8P@5;*c[;8DQUa&$RWG;V
%nsc&(gEYk?S+jiYdJb+o(Q>gR\t?&#f_M)mR)pI]nN^]dm.K3Crb0W/="3q`WcZPa'FkW:k1R%K3?h8Uf=caFDgQB3'6uod&Xl?(
%%gWS0J#H4`6\t^RZ,t7qS3,lWdU(SPJV,cpi*Ef7["+B(N6OZhcP-6IXgf[[Nfq20DE$8F7uqc!\F[!s75i[^i\%CAi[Wchq2!s0
%,W*6r&VA2aLYkiYg1U:c]%a]9:n'E`ge6qB#@s,kEg1&D=V?Pqp=qG,YX^gEE[3hiTgLP:MP$X@VdSd?WZ*P"^+bjake8I[ZT%?p
%SE%%&MAqeU`L!?4nCb+.kT@@(j;5R$oO*\B92<&0)Qq&Qk6/,I@hR,&92Eb:'b),E-E<B.E?=Pp;3%pXFcgTH7m[V;loFY)f8+jA
%mYEmSLVHRq6ZlskMX3,`\b;4j@trP=]-d1rWDPRGnC4u_,:i"_EmIGDPG=Z_.0>V-Of!Q8k*Wu^#gc`fG5D%e(]G,]k$iMKJLg-.
%=jbW*@pdAMP09i\@quRGQM.FB[\be+*cLLe?'8B#FGcjh3E'e\_O`!-oVR(QnU9=Tl$W5gR]E60qL),iktH$!bWhmg/<F"6DG2Y+
%\*_bQ&f<WgapX*t@,B/I&RA.EqHuLB/TIHgi\dKuG`42+"m4uWK"o,`SGR;,D3"1<;8_=J+o1PQ^>dL%h!AQP?..q&bA]8[<U=^i
%mD@S!k;1EUb(D^p?#G\jUU`&8cX:pdc?7;f%>Y"rZcYX10Zut$r6N72M:ACM5lR$(=B4;#CH;5o8?2eqo#],c,tu7+S/M$5q`1s-
%W4Ko#CE//RJ4Y^MUgY'<r!i48L\jn;<N83"r(&]U!>igf7XDjOU.LrPYLlWZq/J5X^8)ZX%4>Yes(.4/,IO02kI<<gA;g>;fJl`V
%C0=d^;IkESZgI1)OFBmZn#I[j_,]TUrELDG7Nu6/]@EE'%Nl'3O#3/!63<9Rf000-BKl_3&pbmBeH@c8;-HmUj6^T9^HFjJ5Q2oZ
%(;qqSE92kr^or0(*0G=((:$Aor+IEFq9H*s;T]]`h?/jAB$W^nOtD[*\T0n2YJ2t;kFa[N*VJpBS%h0iJ/:N(ODU&s/;_"k#QUM3
%g.is9Yl\56qeBXGGXDN;6,)(Mfp>k;VFeR._mEH,lE`@g$smdb);`(Ak1<.V5i/:ZqdN<-]S31&&31B'^(Ce$'[^EQPA`!"]@I`7
%(%BHtda4ku`ST8s/2,[kB!.rti)J$V3C_g`#Ftq=E\-e^OXM_XiZ;83,FF,Y>UDrGU//d;<$3B)rKGg<,LJ![ptJFYGM^3Jlk6QL
%_+%pOHfmRsA'CagA[YS5k3F5tJ.DhgfW//'FV%c*L&Oh-XJ6!FMVa`_HSaZ'WB5U2kfQ_VD!]psTmp3XiN8##';Cg9&2j/@,/Ru6
%NZ(leNFXA+)\3M0U+M2WiE@2.A`[m=W*DndZY"gXe@pT--h7:4k[oE=-IDpOnpec'`215Jn],-'=`_Yf1Z<P6=c73Z'OFFqqhn$o
%okQY984X7KBm1,ZT/_Jq`B[L*'W`E/%!>Aq>TBX4CSBM7KcM/=Q,<q.%Y%42N\AU:lAAGI9Tc1]%hK%A<7W<:6i,<Y$B+6dPq!)_
%"t)<obb-aP7PrIp<^Gt+p3W$&6.nf-)g;m'l$\u"4^>n"3CcfcjXp>kH%=!)UU.`ZE\X[LIW9$_pQ@b;OFu]7&PrT`?5HMZPG%ut
%="$t\C2$(I[V'?bMMN#Xo\f%erbFt1m_YKH7[i;E3h9/L5i_?a<4;L[8BZ@_p+ZY775%Z#QN:tH@N<K7Hd/=00R;/F:U+_BnOBmF
%@e-hj"#62^`u!kk2D=f(1L4!8QQ@9JjMbHqFu?>(IW*0i+W^[*GrJ\)WE`42WP9KW2c`t@JQjt\X)/"@0]Ck(jH2q8$HPg4\9D5G
%A(7c/2TZ5]In\bg`3Guj9r81jamP+Xh&\sbP0\rE)jT/`;$/\UdmoYh^8%_#@+3be>$u?Q&/Df2kFh6'AYt1fq5'r&laRT$f!h[t
%I<A4=b^YnlTXg//La=l":oq?NBA;6`i7Z'B$=M*,b<8J>qR,-"'O&Fp@U,:Ae53oUFuse(*^+7A/'-R<VUt4jW?h\B$/5O1!qn(\
%;rYtK?@c]$7?OCHHsf>0./>-n=Q[p_>Mr5JXZ:"`BfX,L1`SB-!jsl-M23hIo[RjhWCes+2J]W%;=.4J7%NJM!).nslcEP?$)oS8
%DpL(#WN])fJ;#1,AVnd4I(&1!7hV7i"b_8K$f4g^[*m&p&)YIS*DuE^ij,,>Wc^eknrsp0#kM#-;qH\c$n&UqF?%B:63<IVjU6F>
%`e_)hBuW8XELuF<m5X;M&X*';3a[@+>?;h*ceUUN]5pA8Hh5c-?JGP@10AI$kI.NAP7K!ZPI0R+Emgeg!>p!FlC\4I9HBZ;@s8Dm
%&6_,dUqb9YO1cY'"dKtB*.sF9%tg/BH0?p]b62\Yk9j6GBiO$h[1uRZ>1"="HE@YILbk='M3FdUa*4ld@s%J#3Q?QgLPn_oATquZ
%R;k0G^goi5rP,P.j2JctDOSIfkscatr6gJH`O,Ga*HTCHK&"AGU<O]ArG_8MY][D--iP)\1&Wt#"nQR:#,OF^.FB2sUsUka=*f`f
%q8cPW$5P\hA]eLS+%K\O,B:eI"8?!Y@mHK#mtIt5A6FmO7F,*ti;G>?0(4dH"Z)&6JuSS"7#F2,2]]YbPW)S!,V-tW6N4=-e>oZ'
%#J96`)bjp,a/;&gO0g+(q]<S)M5`5uco\r<6EiI%0=0)2L[s(LD"@!,bj5)VKntYjJj8(SC^mOETJc1]Knn3G=e[uH7@=Yg%6Oa%
%gFN(iLt2]_C7KsN=TBYRff2[KUhgfgBZ4liat]*W,'(9SSJ$tS2H1=:.g<l-0@5:n3L<=[!PmjRMsml*$a"`]1WaB4lmL"`%%?Ma
%'1d?3Imc`2Ls3f*iQZd*l7#dBAQK==Z-MqRs53b=:N[IMi1"no/LArlUbGC$.UHl48`"jUHQ5"7>A0"]W6mFLrit]8r4cHGAF4M`
%@?'(a\(V457rI]:6ZZuc4A=A)f=hjbbZ<6]0Z(8SrMuB0Zofh$I7LA+&MSPPG@oq0j@q3iFud&>giPn>af>f![0J-J>FmU>/P])\
%DU^PP?,7D$*,EFNfFH&GT7"25Q3lG4/cYBjr=e$p3_;Of`sYJ#&/3E8qRZLgaKIQXchg.QO(YBPa+Ah9WahNJ'&'NA9<b"fIP`!i
%$QG$^/B?Z2Rs-fUGa3I6#UtFoM5&h]`DlMPT"8[h6qR+:qA6ef64$_Zo:`h=M-(=1e1&rSnATB,.:0Z6fm(aJ?IZY$&W1TV7O9%E
%hT"O^Z)<4o@[Uk\RXi/3`?t?UquAD,=S)``.^P&V]_X!6oq)$3/5Q(c@/:lDFYjO>QMcd"#<Ni?$G1R@I+5OL*OZX;ko)ekLDr(K
%b9]K8^Un'c8DZJW^iUrhfW)ClFo&+Q?K^(#6[b,^"0u"rHJUrfgh`VBVJU^07mKP7gm!#\U51-E'ls^nr>'8]q4VK--DtIp5<S[&
%Al.].7aS@?l8&7-g+6EtXed<*<.a.7T".3B;jI<`euY7e3`_pAX1c/ZKd,XkftlH\LMUluqsu]c\'TJC,"4Cs>J&Na:Ug_BSR,`D
%)-\<q"Gu<G9"h)+imN&=:<L8g,U1QK,(07$$>5CM3#%C-3RDM(9Os;!Jjf's>D"AiN3&)ckYC:(/r*;9C0XX:dK7-YZM>;1r5G-&
%K*ONPql%U6Z&ATG>U\Xi?2sbMZR&1f=.18YGs%%2:KcXNHBmLKpI5.d7dq^/X2@m:Wmn==GotT#_64JS=?:TIjqsT:8M)q8#dd5R
%i$5"cao/ra"]MInW(-u*``5>TU`aHgjC?%-fEhSeIrZTDo?FU[6B>p.Zm-''2E&p48IDc$G<\RZEM3h&j,,;YD7?-unDp&O1f@g5
%n^e/0rQ.@E1,V%`4BtI8F4$<P@LHeak3L:WS7N4?#B/nuqtL,cX5IVTH^#o8e+2uMbEs<^WUb6"c5o.+l1gitjJ+BA>2j]Gc[4Vb
%a-;M,jX19ik41(ZYA91dA[pEDLqF'%+W?a45?DX6j&"#HVm#l/>E3b*q&_?P<2P=mC]H/fs4$+]W5XqC]%JkJa<a&2`-,>S(OO@f
%qpH5Y3p\XU0Ph@Z$gppe=Q*[!X-!ZPfL?\sAB/_f!7K*>gD5!:PJ2Q/FA/r9)3^DB*ibh+re"s>h6H#F>C:\\&h1uo[b!4i??c4Y
%%fN#lE\[IG?PBXa+=7S0>^-^.,'G(t*92poR4g_9F9MOaK7@L;VX19CGl'h@Jou,""=X5URpi`b"?"Z?N"m%:$"HKe0X:PL3QoD=
%OGKciEkNNe)&KUn0Y\3)*Bo(<@u=M]7+]Pt%82a>(H_"$\de53X*`g^eo4'hr0)?aS0u,\KShgA,dEdG=tB\2!=,3/W[#8me(#@^
%WTjDBch?LL)egqeNF%,NEfjG&WX.SMrTPor<=]%dfa<6N9qf\0$F4"$CAWo:.P',"XhjSGFg_&Y6!g.a#@n-)V?+B1QA7PYPZf_4
%PC.BdV)c*B8bF=oq&[YCn;B7B>)sjC*P8L/PWs9[l([!t%CRD`SO6cB]*_DPaAUGbQ:DXc?'`N-B![/-;f;fT^.[ctI(OCE'XrT7
%9&(&gaaJBGIpTV25.Ebk]A7lL/3Dq@@X`nE+BED9P!R=OAlu428)jNYrT\(-R/qZn'kddFP3,jaia=O`WrK`DB]hbh-c>Au-6_\%
%J"N,C_<6USQO2CkfXm&6DH9b<YZFPQc^0V"p9sBg%(mE'4k]3=qo+_U.D^bCM5J;AK&5UH6QJ"3NGH)3$c;k+PFNtlJY-EFYP7pJ
%F*R*FiK)oMg>qLW62FO.c6,QuF@HmhTUscb^%p[6?9<`B<n%HL"EZ/ti!suQ_c^&-S0PP?i+-PAq[m%oe'rWFd8&K`.!?;PH3QA,
%@ZVFu8km+pjCG!H!oh:sTj95YJX2ZI'jBQ#pTmou4G\bWfsV$60Sj&A6*ENfCm#`&V9r[:>EU.&ZRLVs+VZOGpHtUq0$;h38%TSj
%VEJUDiF)IN9;-\n(IF"HZAe?Sgj4A)2prcKC5/tWbXV%f\K'VN*FW_f,\eENf1Rau>>-+i07-1AKjUbB6P&"R7P1DdO;s-=m0@nb
%W>bga^Y`m.%pP.npWT.b0eB'a4rq"f=#)N4;rIYCCLW?R/!e=7f8BJcn^OAhC<MZ]C#b:5)+R/po>hK7bDU9b/Bsd/MBs36'Hmjg
%a.b8cLo?:%F;OQ>dcpcpJAja@6;Dtm2gJ\ANG!Ck#23\INSYj)`-[qAf1K^X]tN)O@Z$E&d?_9%[A(\F11/WB3D)5jW`\YD#n>#M
%%([S<m=*3+\bAMcMi082GMpH:]bXpK*-?b'qs$\"P9#0mhTTQ:U:(;@LG'XKoV2YQ#JhGHNbPbV3Y?A'FXF,3/QoGj/c1@+Vf4XF
%m)T9/q</(o3"ku7c.2$q`;:EWWqU&"bWrNo5MCel,6r/P0C>A`Jl!e>G:Wo;eI346_%1l>K2p'+U73sn>r#:Mm:'85q>1*np"Q\D
%7Cg[cD3%lkIch&XHW=alYs$)f&:)Y$JsK#+r,@O-RoH=\6`>e2r:EH-jASeDF`ZUl.0Vju&_=\L:9B^K>LZeRdb(AS<Mis[2)$?4
%&\$I<8K"U=D9`VqS>M#1k+X_3Bel3]P?a;G-L.:q($@[:jK_7fX)TWn'?,5%SBD4#/<HSEhf1_<WC*\K1m.tKitQ:km4q'UEQUgt
%.tYnNFg"qHk#AgUpM:R/YR+bB.ohOc*tLME0]#jIHCj1^>bp@o[V`)F[%7)G.qB5BV7b@[;[QoK>p25lRd#`m,lfKsp_0L5OS>G$
%,a)\_g08Ob*b**)@GK(.:%Sq_U*<psqqW4mn',*)6CQ-a*9['Ui1[kjn(*:m(eZ/Cf<D=1`HpM^)3mob;`i+L=K3&2U?R%qi=hNR
%Wga<KhmM62RY<X-bEX".!JJrJgSQ`65p9!Anih%Dds1U9f#V_EZ['0t8b_U8m+q3M,eN>R"Jo$h)QQE8.s,lgG?bq?5\+OV_`JA`
%HcYTeLHT=6V?!**mauDW)VOT1O=]YCQDec#T[!%06e=tIqml4tkH)a=hS':,F2W[h-DcP$cYJWd5oN-kUse18nVqj-?6oPlZ/YcP
%]`^%A\D=@ffZb#2ng?j:H>hW_&,fA"1&FBP!'rQg>pCO!/W/WO/V`L)b,R`u>\L^53!)TS:`&F;:&;rc_V>X92G.C*];XX`k'mS:
%,Rp&FJd*"#+?a@\;:^*X[N(e4ofqW*2E9_^4)G+b;fBRu0aHE=]ACn.%Xr5:k9d?5XIjLZL7L*0XGAJ#OST2^nI"`M1U`M,=OGN"
%eY-V#N6OtQ>tjfJnVb`hrTD:C`UdiMhCg7W>g:k!4BmB)\X4r:5D^_4?:]8hkTSCnK^<"CQXQCM"AX+Ghu,"$HOJ,:!GO[&jRK=n
%f11_6IXHla-N8&o`tQo;(RMY8I\$1GIJ\=3jHeQTf9<'h)P6oF*:G6$8CtQaQ1NeW3$*5ZeL#5Bm3S;4Q<D1\2f]g^ArIA**BIGj
%`/*ED>+ZG.FpRX9T']hC[f#Z/-:n`Wlsg#`nh\Db4pF9K"nqLs!2OBQ^Z/f(6l=_AH3f%_!(S[10`^50Vr#c2nW2>*eN*=HrgCph
%*)H)8e-[M1j2^p"[KO"KI#NPG1Ppb^A,J\<Cl^F;a7omJSQ3[.r'OA3e??b3>5q;HHSNREh<0i5VZ0:W>jdhollG17Zm)l3p\YbS
%L9_IG^MPH^?nYHA;.MA4FM<V'@e`3uSHS3Gl4GS6=8":Uhjmff^1k5HREQT,\!m^4V0f<RGEcco/I;4\f\F^Y0"eca5r!esLA#%7
%Or*/!XFhM(1=?TXXi#d2AqB-uls[H;L?"_b(1ob>j)dApI*pIi^DOG]fdl;'[lrgNMVq,C?N<Hbfg>&7X3QTf4-`CV38?9JZ%u9l
%j#0$!9hh5L(8&el(Nan+@5]1:TV:f%WJk&\2K%:FpG!u'G=smk9ZKA%FH[N-4SIEV0!A]BCo-j$<$,6`>:AfZOj(dK]Wcklqj7lD
%W=u6&cap__IidoU"ABVQr7\XTMCZpse@%1=9iru&H:23e6ZXCgeiBpC$hrMFlB8un2fJ\uI-bf'f:AYpk9"9YH%!,JA5KCoY3c:?
%lfFdF5BC/#N\ud?;Uu\]$L3b1TWO#C#L<e_c9ejH/@&#sQ;f*K<NP`uhFn9%l<s8$"#rAoE8o%.8*1YI>li-[>S*p.Z-q1Z;r0->
%q:/-ss5MN7Y!U_B7)9Y8;<B:PB_VRCoZU\aT`mP(^(g/VX=_nse]\2lXcX8R>;QXkftW3RR_BlUb'c7ek13)V6k=f$?.ClO[8fZQ
%ET+Lm4!HkqVTc,fFtESO^nHj6^c7'YL"l>[8+Ri7cD1W'S2oqgq+I(c[j=eH9(>ni;4D(u@o6%[eI94HUJJEb57B6rbZ2J6jL]mX
%b>UP#P'bM/>,nGXRL)L@<*a6td'bp.5]fGas-;D(I:]_ip'ou(?NFf0M:.U@D6-JXC4uP-^$I["mF(6inJ\<=RX3UdWg1h/!e.T2
%gG'30Z!a*BdEd@cmCAA&g+ro?2gYY:Q2G_Ja&oU1+(k>pc_kudS&W^IUs<LR+Drs5fXPO?+\3#`UdoXGL/.N/O\tAs0D'e)bo4('
%[\sR@ftW2g[fum,/fNVV"cea8[;h?g(l$E58-fgU-3fnIk#\EIMnmD?*['k\"6HMGqZKA.7f4T%:!Wa_*6*%acB049?c%9%bn%Fo
%M[KR3MQA@D-"OkFk4m9ETiW'24`P3XMYrFccF7nlgC/Cn,/T@":r+S?11_[ilUPHJi1#\Pj*0C@dNc-@0?bKHE5lM.gSG*SBM&Y`
%^b0o0C1A25O6G>:lXtO@0!>\l@oC,!VD8F)0R)&RZ)s+FL-.pZHNr]9j]&Sic<]*d0T7ABb_LN,FEsB?4f3JBfA"giJ%JahT9c)/
%.!@+KSSH<)[V^ED3hg'`*RN#t%`(je9CWT]%\)n"k!UiTAlY86103^2I?"m\m9cIP<UGcQI3#:JhpFVM>D;T#mnt6V9/eLu7LCY6
%F3/`DUI'&WHq,=>Xg@9.3$<^l&EM7<jj=S*_A7cohhJ#9!kjM+IVI3QgWCt\@hZCBUgF>!)6Nm,/,[Q"CaOfVH_D,uj5JPiT$gR^
%&&u;D]FdB_^HC3RG)JZ3Y9V*Lh0jc0C!"l:K8=%b`Qgkf@,E3e>=ULOi\lhY]gY,_fgD9!k!FIET>S]3g:oc)]<LZE^(02Jc`O\"
%=akM`o%_@UIs&*rjkoc]r8hkrl2CMZro(od^:P83rqG=MlA'lanb[h7o#$MQqhnh[med%^iU-O"r.`UJpp]#XHMc6R5Q's,J,A7:
%Dnl19hu4E-roj94TE"hUJ+kldqhtITK'%<$~>
%AI9_PrivateDataEnd
